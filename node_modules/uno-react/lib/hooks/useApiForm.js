"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var useStateForModel_1 = require("./useStateForModel");
var useValidation_1 = require("./useValidation");
var FormStatus;
(function (FormStatus) {
    FormStatus[FormStatus["Valid"] = 0] = "Valid";
    FormStatus[FormStatus["Loading"] = 1] = "Loading";
    FormStatus[FormStatus["ErrorLoading"] = 2] = "ErrorLoading";
    FormStatus[FormStatus["ErrorValidation"] = 3] = "ErrorValidation";
})(FormStatus = exports.FormStatus || (exports.FormStatus = {}));
function useApiFormWithValidation(dataSource, validation, transform) {
    var _a = useStateForModel_1.useStateForModel({}), getter = _a[0], setter = _a[1];
    var _b = React.useState(FormStatus.Valid), status = _b[0], setStatus = _b[1];
    var _c = useValidation_1.useValidation(validation, getter, 100, true), isValid = _c[0], errors = _c[1];
    React.useEffect(function () {
        setStatus(FormStatus.Loading);
        var data = typeof dataSource === 'function' ? dataSource() : fetch(dataSource);
        data.then(function (response) {
            if (response.ok) {
                response.json().then(function (y) {
                    setter(transform ? transform(y) : y);
                    setStatus(isValid ? FormStatus.Valid : FormStatus.ErrorValidation);
                });
            }
            else {
                setStatus(FormStatus.ErrorLoading);
            }
        });
    }, [dataSource]);
    if (status !== FormStatus.Loading && status !== FormStatus.ErrorLoading) {
        setStatus(isValid ? FormStatus.Valid : FormStatus.ErrorValidation);
    }
    return [getter, setter, status, errors];
}
exports.useApiFormWithValidation = useApiFormWithValidation;
function useApiForm(dataSource, transform) {
    var _a = useApiFormWithValidation(dataSource, function () { return ''; }, transform), getter = _a[0], setter = _a[1], status = _a[2];
    return [getter, setter, status === FormStatus.Loading, status == FormStatus.ErrorLoading];
}
exports.useApiForm = useApiForm;
