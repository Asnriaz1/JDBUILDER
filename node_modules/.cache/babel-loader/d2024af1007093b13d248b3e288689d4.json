{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\AdditionalInfo\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AdditionalInfoMetaFields from \"./MetaFields/container\";\nimport { NavLink } from \"react-router-dom\";\nimport CollaboratorAndPreview from \"../CollaboratorAndPreview/container\";\nimport { getAppStoreValue } from \"../../../common/Helpers\";\nimport instance, { BASE_URL, BASE_URL_SQL } from \"../../../../api/config\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport Snackbar from '@material-ui/core/Snackbar';\n\nclass AdditionalInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n\n    this.saveAdditionalInfo = () => {\n      debugger;\n\n      if (this.props.skillsData.length > 0 && this.props.languageData.length > 0) {\n        let _selected_languages = this.props.languageData ? this.props.languageData.map(item => {\n          return {\n            _id: item.id,\n            level: item.level,\n            importance: item.importance,\n            title: item.title\n          };\n        }) : [];\n\n        console.log(_selected_languages);\n\n        let _selected_skills = this.props.skillsData ? this.props.skillsData.map(item => {\n          return {\n            _id: item.id,\n            level: item.level,\n            importance: item.importance,\n            title: item.title\n          };\n        }) : [];\n\n        let additionalInfoData = {\n          job_code: this.props.jobCodeField,\n          template_id: this.props.templateId,\n          title: this.props.jobTitle,\n          _selected_skills: _selected_skills,\n          _selected_languages: _selected_languages\n        };\n        console.log('Additional Info Data is here', additionalInfoData);\n        instance.post(BASE_URL + 'UserTemplates?sectionId=UT2', additionalInfoData).then(res => {\n          this.props.history.push('/create/summary');\n        }).catch(error => {\n          this.props.history.push('/create/info');\n        });\n      } else this.setState({\n        open: true\n      });\n    };\n\n    this.SubmitHandler = () => {\n      debugger;\n\n      if (this.props.skillsData.length > 0 && this.props.languageData.length > 0) {\n        this.props.history.push('/create/summary');\n        this.props.headerPathActiveHandler(1);\n      } else this.setState({\n        open: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      headerPathActiveHandler,\n      SubmitHandler\n    } = this.props;\n    const userText = getAppStoreValue(\"userText\");\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.additionalinfowrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: userText ? this.saveAdditionalInfo : this.SubmitHandler // autoComplete=\"off\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(CollaboratorAndPreview, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(AdditionalInfoMetaFields, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/create/jobopening\",\n      className: classes.jdbuildingbackbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Back\")), userText ? React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Save & Next\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Next\")), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.open,\n      autoHideDuration: 600,\n      severity: \"error\",\n      message: \"Please fill all the details\",\n      action: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(styles)(AdditionalInfo);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/AdditionalInfo/component.js"],"names":["React","Component","styles","withStyles","Button","AdditionalInfoMetaFields","NavLink","CollaboratorAndPreview","getAppStoreValue","instance","BASE_URL","BASE_URL_SQL","ValidatorForm","Snackbar","AdditionalInfo","state","open","componentDidMount","props","fetchDataIfNeeded","saveAdditionalInfo","skillsData","length","languageData","_selected_languages","map","item","_id","id","level","importance","title","console","log","_selected_skills","additionalInfoData","job_code","jobCodeField","template_id","templateId","jobTitle","post","then","res","history","push","catch","error","setState","SubmitHandler","headerPathActiveHandler","render","classes","userText","additionalinfowrapper","jdbuildingbackbtn","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AdditionalInfoMetaFields from \"./MetaFields/container\";\nimport { NavLink } from \"react-router-dom\";\nimport CollaboratorAndPreview from \"../CollaboratorAndPreview/container\";\nimport { getAppStoreValue } from \"../../../common/Helpers\";\nimport instance, { BASE_URL, BASE_URL_SQL } from \"../../../../api/config\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport Snackbar from '@material-ui/core/Snackbar';\n\nclass AdditionalInfo extends Component {\n\n    state = {\n        open: false\n\n    }\n    componentDidMount = () => {\n        this.props.fetchDataIfNeeded();\n    }\n    saveAdditionalInfo = () => {\n        debugger\n        if (this.props.skillsData.length>0 && this.props.languageData.length>0){\n\n        let _selected_languages = this.props.languageData ? this.props.languageData.map(item => {\n            return {\n                _id: item.id,\n                level: item.level,\n                importance: item.importance,\n                title: item.title\n            }\n\n        }) : []\n\n        console.log(_selected_languages)\n        let _selected_skills = this.props.skillsData ? this.props.skillsData.map(item => {\n            return {\n                _id: item.id,\n                level: item.level,\n                importance: item.importance,\n                title: item.title\n            }\n        }) : []\n\n\n\n        let additionalInfoData = {\n            job_code: this.props.jobCodeField,\n            template_id: this.props.templateId,\n            title: this.props.jobTitle,\n            _selected_skills: _selected_skills,\n            _selected_languages: _selected_languages,\n\n        }\n        console.log('Additional Info Data is here', additionalInfoData);\n\n        instance.post(BASE_URL + 'UserTemplates?sectionId=UT2', additionalInfoData)\n            .then(res => {\n                this.props.history.push('/create/summary');\n\n            })\n            .catch(error => {\n                this.props.history.push('/create/info');\n            });\n        }\n        else \n        this.setState({\n            open:true\n        }) \n    }\n    \n    SubmitHandler = () => {\n        debugger\n        if (this.props.skillsData.length>0 && this.props.languageData.length>0){\n        this.props.history.push('/create/summary');\n        this.props.headerPathActiveHandler(1);\n    }\n    else \n    this.setState({\n        open:true\n    }) \n    }\n\n\n    render() {\n        const {\n            classes,\n            headerPathActiveHandler,\n            SubmitHandler\n        } = this.props;\n        const userText = getAppStoreValue(\"userText\");\n\n        return (\n            <>\n                <div className={classes.additionalinfowrapper}>\n                    <ValidatorForm\n                        onSubmit={userText ? this.saveAdditionalInfo : this.SubmitHandler}\n                    // autoComplete=\"off\"\n                    >\n                        <CollaboratorAndPreview />\n\n                        <AdditionalInfoMetaFields />\n\n                        <NavLink\n                            to=\"/create/jobopening\"\n                            className={classes.jdbuildingbackbtn}\n                        >\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Back\n                            </Button>\n                        </NavLink>\n                        {userText ?\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                Save & Next\n                            </Button>\n                            :\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Next\n                            </Button>\n                        }\n                    </ValidatorForm>\n                    <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={600}\n                    severity=\"error\"\n                    message=\"Please fill all the details\"\n                    action={\n                        <React.Fragment>\n\n                        </React.Fragment>\n                    }\n                />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(AdditionalInfo);"]},"metadata":{},"sourceType":"module"}