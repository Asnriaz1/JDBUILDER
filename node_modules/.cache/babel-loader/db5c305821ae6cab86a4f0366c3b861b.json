{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport initialState from \"./initialState\";\nimport { createLogger } from \"redux-logger\";\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from 'lodash/throttle'; // const middleware = [thunk, reduxImmutableStateInvariant()];\n\nconst middleware = [thunk];\nmiddleware.push(createLogger({\n  duration: true,\n  diff: true\n}));\nlet composedMiddleWare = compose(applyMiddleware(...middleware));\n\nif (!!window.__REDUX_DEVTOOLS_EXTENSION__) {\n  composedMiddleWare = compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n} // localstorage\n\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState == null ? initialState : persistedState, //initialState,\ncomposedMiddleWare);\nstore.subscribe(throttle(() => {\n  saveState({\n    JDLANDING: store.getState().JDLANDING,\n    LOGIN: store.getState().LOGIN,\n    SIGNUP: store.getState().SIGNUP,\n    JOBOPENING: store.getState().JOBOPENING,\n    JOBSUMMARY: store.getState().JOBSUMMARY,\n    JDBUILDING: store.getState().JDBUILDING,\n    ALERT_DIALOG: store.getState().ALERT_DIALOG,\n    ADDITIONALINFO: store.getState().ADDITIONALINFO,\n    ADVERTISE: store.getState().ADVERTISE,\n    LOADING_SPINNER: store.getState().LOADING_SPINNER,\n    LANDING_DASHBOARD: store.getState().LANDING_DASHBOARD,\n    JOBS_DASHBOARD: store.getState().JOBS_DASHBOARD,\n    ADD_COLLABORATOR: store.getState().ADD_COLLABORATOR,\n    COMPANY_INFO: store.getState().COMPANY_INFO\n  });\n}, 1000));\nexport default store;","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/store/configurestore.js"],"names":["createStore","applyMiddleware","compose","rootReducer","thunk","initialState","createLogger","loadState","saveState","throttle","middleware","push","duration","diff","composedMiddleWare","window","__REDUX_DEVTOOLS_EXTENSION__","persistedState","store","subscribe","JDLANDING","getState","LOGIN","SIGNUP","JOBOPENING","JOBSUMMARY","JDBUILDING","ALERT_DIALOG","ADDITIONALINFO","ADVERTISE","LOADING_SPINNER","LANDING_DASHBOARD","JOBS_DASHBOARD","ADD_COLLABORATOR","COMPANY_INFO"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,gBAArC;AACA,OAAOC,QAAP,MAAqB,iBAArB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,CAACN,KAAD,CAAnB;AAEAM,UAAU,CAACC,IAAX,CAAgBL,YAAY,CAAC;AAC5BM,EAAAA,QAAQ,EAAE,IADkB;AAE5BC,EAAAA,IAAI,EAAE;AAFsB,CAAD,CAA5B;AAKA,IAAIC,kBAAkB,GAAGZ,OAAO,CAACD,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAAhC;;AAEA,IAAI,CAAC,CAACK,MAAM,CAACC,4BAAb,EAA2C;AAC1CF,EAAAA,kBAAkB,GAAGZ,OAAO,CAC3BD,eAAe,CAAC,GAAGS,UAAJ,CADY,EAE3BK,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFZ,CAA5B;AAIA,C,CAGD;;;AACA,MAAMC,cAAc,GAAGV,SAAS,EAAhC;AAEA,MAAMW,KAAK,GAAGlB,WAAW,CACxBG,WADwB,EAExBc,cAAc,IAAE,IAAhB,GAAqBZ,YAArB,GAAkCY,cAFV,EAGxB;AACAH,kBAJwB,CAAzB;AAOAI,KAAK,CAACC,SAAN,CAAgBV,QAAQ,CAAC,MAAM;AAC9BD,EAAAA,SAAS,CAAC;AACTY,IAAAA,SAAS,EAAEF,KAAK,CAACG,QAAN,GAAiBD,SADnB;AAETE,IAAAA,KAAK,EAAEJ,KAAK,CAACG,QAAN,GAAiBC,KAFf;AAGTC,IAAAA,MAAM,EAAGL,KAAK,CAACG,QAAN,GAAiBE,MAHjB;AAITC,IAAAA,UAAU,EAAGN,KAAK,CAACG,QAAN,GAAiBG,UAJrB;AAKTC,IAAAA,UAAU,EAAGP,KAAK,CAACG,QAAN,GAAiBI,UALrB;AAMTC,IAAAA,UAAU,EAAGR,KAAK,CAACG,QAAN,GAAiBK,UANrB;AAOTC,IAAAA,YAAY,EAAGT,KAAK,CAACG,QAAN,GAAiBM,YAPvB;AAQTC,IAAAA,cAAc,EAAGV,KAAK,CAACG,QAAN,GAAiBO,cARzB;AASTC,IAAAA,SAAS,EAAGX,KAAK,CAACG,QAAN,GAAiBQ,SATpB;AAUTC,IAAAA,eAAe,EAAGZ,KAAK,CAACG,QAAN,GAAiBS,eAV1B;AAWTC,IAAAA,iBAAiB,EAAGb,KAAK,CAACG,QAAN,GAAiBU,iBAX5B;AAYTC,IAAAA,cAAc,EAAGd,KAAK,CAACG,QAAN,GAAiBW,cAZzB;AAaTC,IAAAA,gBAAgB,EAAGf,KAAK,CAACG,QAAN,GAAiBY,gBAb3B;AAcTC,IAAAA,YAAY,EAAGhB,KAAK,CAACG,QAAN,GAAiBa;AAdvB,GAAD,CAAT;AAgBA,CAjBuB,EAiBrB,IAjBqB,CAAxB;AAmBA,eAAehB,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport initialState from \"./initialState\";\nimport { createLogger } from \"redux-logger\";\nimport { loadState, saveState } from \"./localStorage\"\nimport throttle from 'lodash/throttle';\n\n// const middleware = [thunk, reduxImmutableStateInvariant()];\nconst middleware = [thunk];\n\nmiddleware.push(createLogger({\n\tduration: true,\n\tdiff: true\n}));\n\nlet composedMiddleWare = compose(applyMiddleware(...middleware));\n\nif (!!window.__REDUX_DEVTOOLS_EXTENSION__) {\n\tcomposedMiddleWare = compose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t);\n}\n\n\n// localstorage\nconst persistedState = loadState();\n\nconst store = createStore(\n\trootReducer,\n\tpersistedState==null?initialState:persistedState,\n\t//initialState,\n\tcomposedMiddleWare\n);\n\nstore.subscribe(throttle(() => {\n\tsaveState({\n\t\tJDLANDING: store.getState().JDLANDING,\n\t\tLOGIN: store.getState().LOGIN,\n\t\tSIGNUP:  store.getState().SIGNUP,\n\t\tJOBOPENING:  store.getState().JOBOPENING,\n\t\tJOBSUMMARY:  store.getState().JOBSUMMARY,\n\t\tJDBUILDING:  store.getState().JDBUILDING,\n\t\tALERT_DIALOG:  store.getState().ALERT_DIALOG,\n\t\tADDITIONALINFO:  store.getState().ADDITIONALINFO,\n\t\tADVERTISE:  store.getState().ADVERTISE,\n\t\tLOADING_SPINNER:  store.getState().LOADING_SPINNER,\n\t\tLANDING_DASHBOARD:  store.getState().LANDING_DASHBOARD,\n\t\tJOBS_DASHBOARD:  store.getState().JOBS_DASHBOARD,\n\t\tADD_COLLABORATOR:  store.getState().ADD_COLLABORATOR,\n\t\tCOMPANY_INFO:  store.getState().COMPANY_INFO\n\t});\n}, 1000));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}