{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Dashboard\\\\Jobs\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport DashboardJobsImg from \"../../../../resources/images/dashboard/jobs.png\";\nimport UserJDCard from \"./JDCard/container\";\nimport JDCardTitle from \"./JDCard/Title/container\";\n\nclass UserDashboardJobs extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      templatesData\n    } = this.props;\n    return React.createElement(React.Fragment, null, templatesData.complete.length > 0 ? React.createElement(\"div\", {\n      className: classes.alljds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(JDCardTitle, {\n      title: \"complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), templatesData.complete.map((item, index) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(UserJDCard, {\n      data: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))))) : null, templatesData.incomplete.length > 0 ? React.createElement(\"div\", {\n      className: classes.alljds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(JDCardTitle, {\n      title: \"incomplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), templatesData.incomplete.map((item, index) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(UserJDCard, {\n      data: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))))) : null, templatesData.incollaboration.length > 0 ? React.createElement(\"div\", {\n      className: classes.alljds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(JDCardTitle, {\n      title: \"incollaboration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), templatesData.incollaboration.map((item, index) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(UserJDCard, {\n      data: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))) : null, templatesData.collaborationComplete.length > 0 ? React.createElement(\"div\", {\n      className: classes.alljds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(JDCardTitle, {\n      title: \"colcomplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), templatesData.collaborationComplete.map((item, index) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(UserJDCard, {\n      data: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))))) : null, templatesData.complete.length > 0 || templatesData.incomplete.length > 0 || templatesData.incollaboration.length > 0 || templatesData.collaborationComplete.length > 0 ? null : React.createElement(\"div\", {\n      className: classes.dashboardjobswrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DashboardJobsImg,\n      alt: \"Create New JD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.alljobsempty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"You do not have any JD\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Good thing it's easy to create one\"), React.createElement(NavLink, {\n      to: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Create New JD\")), React.createElement(NavLink, {\n      to: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Learn how to create a new JD\"))));\n  }\n\n}\n\nexport default withStyles(styles)(UserDashboardJobs);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/Jobs/component.js"],"names":["React","Component","styles","withStyles","Grid","Button","NavLink","DashboardJobsImg","UserJDCard","JDCardTitle","UserDashboardJobs","componentDidMount","props","fetchDataIfNeeded","render","classes","templatesData","complete","length","alljds","map","item","index","incomplete","incollaboration","collaborationComplete","dashboardjobswrapper","alljobsempty"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport DashboardJobsImg from \"../../../../resources/images/dashboard/jobs.png\";\nimport UserJDCard from \"./JDCard/container\";\nimport JDCardTitle from \"./JDCard/Title/container\";\n\nclass UserDashboardJobs extends Component {\n\n    componentDidMount = () => {\n        this.props.fetchDataIfNeeded();\n    }\n    render() {\n        const {\n            classes,\n            templatesData\n        } = this.props;\n\n        return (\n            <>\n                {\n                    templatesData.complete.length > 0 ?\n                        <div className={classes.alljds}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <JDCardTitle title=\"complete\" />\n                                </Grid>\n                                {\n                                    templatesData.complete.map((item, index) => (\n                                        <Grid item xs={12} md={4} key={index}>\n                                            <UserJDCard data={item} />\n                                        </Grid>\n                                    ))\n                                }\n                            </Grid>\n                        </div> : null}\n\n                {\n                    templatesData.incomplete.length > 0 ?\n                        <div className={classes.alljds}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <JDCardTitle title=\"incomplete\" />\n                                </Grid>\n                                {\n                                    templatesData.incomplete.map((item, index) => (\n                                        <Grid item xs={12} md={4} key={index}>\n                                            <UserJDCard data={item} />\n                                        </Grid>\n                                    ))\n                                }\n                            </Grid>\n                        </div> : null}\n\n                {\n                    templatesData.incollaboration.length > 0 ?\n                        <div className={classes.alljds}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <JDCardTitle title=\"incollaboration\" />\n                                </Grid>\n                                {\n                                    templatesData.incollaboration.map((item, index) => (\n                                        <Grid item xs={12} md={4} key={index}>\n                                            <UserJDCard data={item} />\n                                        </Grid>\n                                    ))\n                                }\n                            </Grid>\n                        </div> : null}\n                \n                {\n                    templatesData.collaborationComplete.length > 0 ?\n                        <div className={classes.alljds}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <JDCardTitle title=\"colcomplete\" />\n                                </Grid>\n                                {\n                                    templatesData.collaborationComplete.map((item, index) => (\n                                        <Grid item xs={12} md={4} key={index}>\n                                            <UserJDCard data={item} />\n                                        </Grid>\n                                    ))\n                                }\n                            </Grid>\n                        </div> : null}\n                {\n                    templatesData.complete.length > 0 || templatesData.incomplete.length > 0 || templatesData.incollaboration.length > 0 || templatesData.collaborationComplete.length > 0 ? null :\n                        <div className={classes.dashboardjobswrapper}>\n                            <img src={DashboardJobsImg} alt=\"Create New JD\" />\n                            <div className={classes.alljobsempty}>\n                                <p>You do not have any JD</p>\n                                <span className=\"desc\">Good thing it's easy to create one</span>\n                                <NavLink\n                                    to={'/'}\n                                >\n                                    <Button variant=\"contained\" color=\"primary\">Create New JD</Button>\n                                </NavLink>\n                                <NavLink\n                                    to={'/'}\n                                >\n                                    Learn how to create a new JD\n                            </NavLink>\n                            </div>\n                        </div>\n                }\n\n\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(UserDashboardJobs);"]},"metadata":{},"sourceType":"module"}