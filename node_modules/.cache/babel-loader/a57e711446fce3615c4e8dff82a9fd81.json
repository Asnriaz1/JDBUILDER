{"ast":null,"code":"import { connect } from \"react-redux\";\nimport CompanySettingsAbout from \"./component\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport instance, { BASE_URL } from \"../../../../../../api/config\";\nimport { textFieldResetChangeHandler, saveCompanyAboutInfoData, saveCompanyAboutInfo } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  fields: state.COMPANY_INFO.forms.companyInfoForm.fields,\n  aboutInfoMessage: state.COMPANY_INFO.UISettings.aboutInfoMessage // isLogin: state.LOGIN.UISetting.isLogin,\n\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldResetChangeHandler(name, e.value));\n  },\n  saveCompanyAboutInfo: (AboutCompanyField, websiteURLField, companyEmailField) => {\n    let data = {\n      Summary: AboutCompanyField,\n      Url: websiteURLField,\n      CompanyEmail: companyEmailField\n    };\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"updating about info\", \"large\"));\n    instance.put(BASE_URL + 'User/Dashboard/Company/UpdateCompanyAbout', data).then(res => {\n      dispatch(saveCompanyAboutInfo(res.data.message));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  },\n  fetchDataIfNeeded: () => {\n    instance.get(BASE_URL + 'User/Dashboard/Company/GetCompanyAbout').then(res => {\n      dispatch(saveCompanyAboutInfoData(res.data));\n    }).catch(error => {});\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  saveCompanyAboutInfo: () => {\n    dispatchProps.saveCompanyAboutInfo(stateProps.fields.AboutCompanyField.value, stateProps.fields.websiteURLField.value, stateProps.fields.companyEmailField.value);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(CompanySettingsAbout);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/AboutCompany/CompanySettings/About/container.js"],"names":["connect","CompanySettingsAbout","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","instance","BASE_URL","textFieldResetChangeHandler","saveCompanyAboutInfoData","saveCompanyAboutInfo","mapStateToProps","state","fields","COMPANY_INFO","forms","companyInfoForm","aboutInfoMessage","UISettings","mapDispatchToProps","dispatch","props","textFieldChangeHandler","name","e","value","AboutCompanyField","websiteURLField","companyEmailField","data","Summary","Url","CompanyEmail","put","then","res","message","catch","error","fetchDataIfNeeded","get","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,oBAAP,MAAiC,aAAjC;AAEA,SACIC,yBADJ,EAEIC,mCAFJ,QAGO,yDAHP;AAIA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,8BAAnC;AAEA,SACIC,2BADJ,EAEIC,wBAFJ,EAGIC,oBAHJ,QAIO,YAJP;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,MAAM,EAAED,KAAK,CAACE,YAAN,CAAmBC,KAAnB,CAAyBC,eAAzB,CAAyCH,MADnB;AAE9BI,EAAAA,gBAAgB,EAACL,KAAK,CAACE,YAAN,CAAmBI,UAAnB,CAA8BD,gBAFjB,CAG9B;;AAH8B,CAAL,CAA7B;;AAOA,MAAME,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7CC,EAAAA,sBAAsB,EAAE,CAACC,IAAD,EAAOC,CAAP,KAAa;AACjC,QAAI,OAAOA,CAAC,CAACC,KAAT,KAAmB,QAAvB,EAAiC;AAC7BD,MAAAA,CAAC,CAACC,KAAF,GAAU,EAAV;AACH;;AACDL,IAAAA,QAAQ,CAACZ,2BAA2B,CAACe,IAAD,EAAOC,CAAC,CAACC,KAAT,CAA5B,CAAR;AACH,GAN4C;AAO7Cf,EAAAA,oBAAoB,EAAE,CAACgB,iBAAD,EAAoBC,eAApB,EAAqCC,iBAArC,KAA2D;AAE7E,QAAIC,IAAI,GAAG;AACPC,MAAAA,OAAO,EAAEJ,iBADF;AAEPK,MAAAA,GAAG,EAAEJ,eAFE;AAGPK,MAAAA,YAAY,EAAEJ;AAHP,KAAX;AAMAR,IAAAA,QAAQ,CAACf,mCAAmC,CAAC,IAAD,EAAO,qBAAP,EAA8B,OAA9B,CAApC,CAAR;AACAC,IAAAA,QAAQ,CAAC2B,GAAT,CAAa1B,QAAQ,GAAC,2CAAtB,EAAmEsB,IAAnE,EACCK,IADD,CACMC,GAAG,IAAI;AACTf,MAAAA,QAAQ,CAACV,oBAAoB,CAACyB,GAAG,CAACN,IAAJ,CAASO,OAAV,CAArB,CAAR;AACAhB,MAAAA,QAAQ,CAAChB,yBAAyB,EAA1B,CAAR;AACH,KAJD,EAKCiC,KALD,CAKOC,KAAK,IAAI;AACZlB,MAAAA,QAAQ,CAAChB,yBAAyB,EAA1B,CAAR;AACH,KAPD;AAQH,GAxB4C;AAyB7CmC,EAAAA,iBAAiB,EAAE,MAAM;AACrBjC,IAAAA,QAAQ,CAACkC,GAAT,CAAajC,QAAQ,GAAC,wCAAtB,EACC2B,IADD,CACMC,GAAG,IAAI;AACTf,MAAAA,QAAQ,CAACX,wBAAwB,CAAC0B,GAAG,CAACN,IAAL,CAAzB,CAAR;AACH,KAHD,EAICQ,KAJD,CAIOC,KAAK,IAAI,CACf,CALD;AAMH;AAhC4C,CAAtB,CAA3B;;AAmCA,MAAMG,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGF,UADsD;AAEzD,KAAGC,aAFsD;AAGzDjC,EAAAA,oBAAoB,EAAE,MAAM;AACxBiC,IAAAA,aAAa,CAACjC,oBAAd,CAAmCgC,UAAU,CAAC7B,MAAX,CAAkBa,iBAAlB,CAAoCD,KAAvE,EAA8EiB,UAAU,CAAC7B,MAAX,CAAkBc,eAAlB,CAAkCF,KAAhH,EAAuHiB,UAAU,CAAC7B,MAAX,CAAkBe,iBAAlB,CAAoCH,KAA3J;AACH,GALwD;AAMzD,KAAGmB;AANsD,CAA1C,CAAnB;;AASA,eAAe1C,OAAO,CAClBS,eADkB,EAElBQ,kBAFkB,EAGlBsB,UAHkB,CAAP,CAIbtC,oBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CompanySettingsAbout from \"./component\";\n\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport instance, { BASE_URL } from \"../../../../../../api/config\";\n\nimport {\n    textFieldResetChangeHandler,\n    saveCompanyAboutInfoData,\n    saveCompanyAboutInfo\n} from \"../actions\";\n\nconst mapStateToProps = state => ({\n    fields: state.COMPANY_INFO.forms.companyInfoForm.fields,\n    aboutInfoMessage:state.COMPANY_INFO.UISettings.aboutInfoMessage,\n    // isLogin: state.LOGIN.UISetting.isLogin,\n\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldResetChangeHandler(name, e.value));\n    },\n    saveCompanyAboutInfo: (AboutCompanyField, websiteURLField, companyEmailField) => {\n\n        let data = {\n            Summary: AboutCompanyField,\n            Url: websiteURLField,\n            CompanyEmail: companyEmailField\n        }\n        \n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"updating about info\", \"large\"));\n        instance.put(BASE_URL+'User/Dashboard/Company/UpdateCompanyAbout', data)\n        .then(res => {\n            dispatch(saveCompanyAboutInfo(res.data.message));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    },\n    fetchDataIfNeeded: () => {\n        instance.get(BASE_URL+'User/Dashboard/Company/GetCompanyAbout')\n        .then(res => {\n            dispatch(saveCompanyAboutInfoData(res.data));\n        })\n        .catch(error => {\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    saveCompanyAboutInfo: () => {\n        dispatchProps.saveCompanyAboutInfo(stateProps.fields.AboutCompanyField.value, stateProps.fields.websiteURLField.value, stateProps.fields.companyEmailField.value)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(CompanySettingsAbout);"]},"metadata":{},"sourceType":"module"}