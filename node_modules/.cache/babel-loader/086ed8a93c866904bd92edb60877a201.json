{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{styles}from\"./styles\";import{withStyles}from\"@material-ui/core/styles\";import{Button,Grid}from\"@material-ui/core\";import{ValidatorForm}from\"react-material-ui-form-validator\";import CustomTextValidator from\"./../common/ReduxBased/CustomTextValidator/component\";import{Redirect}from\"react-router-dom\";var SignupPage=/*#__PURE__*/function(_Component){_inherits(SignupPage,_Component);function SignupPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,SignupPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SignupPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loginId:1};_this.selectedLogin=function(val){_this.setState({loginId:val});};_this.SubmitHandler=function(){_this.props.submitSignUpHandler();};return _this;}_createClass(SignupPage,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,fields=_this$props.fields,textFieldChangeHandler=_this$props.textFieldChangeHandler,isSignUp=_this$props.isSignUp,error=_this$props.error;return isSignUp?React.createElement(Redirect,{to:\"/confirmation_pending\"}):React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classes.polygonbg},React.createElement(Grid,{container:true,className:classes.signupWrapper},React.createElement(Grid,{item:true,sm:4},React.createElement(\"h1\",{className:classes.signuptitle},\"Sign Up\"),React.createElement(\"p\",{className:classes.signupsubtitle},\"Please sign up using your email or using one of the platforms shown below\"),React.createElement(ValidatorForm,{onSubmit:this.SubmitHandler,autoComplete:\"off\"},React.createElement(CustomTextValidator,{id:fields.EmailField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.EmailField.placeholder,name:fields.EmailField.name,value:fields.EmailField.value,onChange:function onChange(value){textFieldChangeHandler(fields.EmailField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.signupfields}),React.createElement(CustomTextValidator,{id:fields.userNameField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.userNameField.placeholder,name:fields.userNameField.name,value:fields.userNameField.value,onChange:function onChange(value){textFieldChangeHandler(fields.userNameField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.signupfields}),React.createElement(CustomTextValidator,{id:fields.PasswordField.name,validations:true,fullWidth:true,type:\"password\",placeholder:fields.PasswordField.placeholder,name:fields.PasswordField.name,value:fields.PasswordField.value,onChange:function onChange(value){textFieldChangeHandler(fields.PasswordField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.signupfields}),React.createElement(CustomTextValidator,{id:fields.ConfirmPasswordField.name,validations:true,fullWidth:true,type:\"password\",placeholder:fields.ConfirmPasswordField.placeholder,name:fields.ConfirmPasswordField.name,value:fields.ConfirmPasswordField.value,onChange:function onChange(value){textFieldChangeHandler(fields.ConfirmPasswordField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.signupfields}),error?React.createElement(\"span\",{className:classes.error},error):null,React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",className:classes.signupSubmitBtn},\"Sign Up\"),React.createElement(\"div\",null,React.createElement(\"div\",{className:classes.signUpOptionsRight},React.createElement(\"p\",null,\"already have an account? \",React.createElement(\"a\",{href:\"/login\"},\"sign in\"),\" \"))))),React.createElement(Grid,{item:true,sm:2}),React.createElement(Grid,{item:true,sm:6,className:\"dNoneRightSignup\"},React.createElement(\"div\",{className:classes.signupRightWrapper},React.createElement(\"div\",{className:\"signuprightwithbg\"},React.createElement(\"div\",{className:\"wrapperborder\"}),React.createElement(\"h1\",{className:classes.textAboveImage},\"Join Hands With Us\"),React.createElement(\"p\",null,\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\")))))));}}]);return SignupPage;}(Component);export default withStyles(styles)(SignupPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Signup/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","Redirect","SignupPage","state","loginId","selectedLogin","val","setState","SubmitHandler","props","submitSignUpHandler","classes","fields","textFieldChangeHandler","isSignUp","error","polygonbg","signupWrapper","signuptitle","signupsubtitle","EmailField","name","placeholder","value","signupfields","userNameField","PasswordField","ConfirmPasswordField","signupSubmitBtn","signUpOptionsRight","signupRightWrapper","textAboveImage"],"mappings":"0xBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,mBAA7B,CACA,OAASC,aAAT,KAA8B,kCAA9B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,sDAAhC,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,GAEMC,CAAAA,U,+YAEFC,K,CAAQ,CACJC,OAAO,CAAE,CADL,C,OAIRC,a,CAAgB,SAACC,GAAD,CAAS,CACrB,MAAKC,QAAL,CAAc,CACVH,OAAO,CAAEE,GADC,CAAd,EAGH,C,OACDE,a,CAAgB,UAAM,CAClB,MAAKC,KAAL,CAAWC,mBAAX,GACH,C,6EAGQ,iBAQD,KAAKD,KARJ,CAGDE,OAHC,aAGDA,OAHC,CAIDC,MAJC,aAIDA,MAJC,CAKDC,sBALC,aAKDA,sBALC,CAMDC,QANC,aAMDA,QANC,CAODC,KAPC,aAODA,KAPC,CASL,MACID,CAAAA,QAAQ,CACR,oBAAC,QAAD,EAAU,EAAE,CAAC,uBAAb,EADQ,CAEN,wCACE,2BAAK,SAAS,CAAEH,OAAO,CAACK,SAAxB,EACA,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAEL,OAAO,CAACM,aAAnC,EAII,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACI,0BAAI,SAAS,CAAEN,OAAO,CAACO,WAAvB,YADJ,CAaI,yBAAG,SAAS,CAAEP,OAAO,CAACQ,cAAtB,8EAbJ,CAcI,oBAAC,aAAD,EACA,QAAQ,CAAE,KAAKX,aADf,CAEA,YAAY,CAAC,KAFb,EAKI,oBAAC,mBAAD,EACA,EAAE,CAAEI,MAAM,CAACQ,UAAP,CAAkBC,IADtB,CAEA,WAAW,CAAE,IAFb,CAGA,SAAS,CAAE,IAHX,CAIA,IAAI,CAAC,MAJL,CAKA,WAAW,CAAET,MAAM,CAACQ,UAAP,CAAkBE,WAL/B,CAMA,IAAI,CAAEV,MAAM,CAACQ,UAAP,CAAkBC,IANxB,CAOA,KAAK,CAAET,MAAM,CAACQ,UAAP,CAAkBG,KAPzB,CAQA,QAAQ,CAAE,kBAAAA,KAAK,CAAI,CACfV,sBAAsB,CAClBD,MAAM,CAACQ,UAAP,CAAkBC,IADA,CAElBE,KAFkB,CAAtB,CAIH,CAbD,CAcA,UAAU,CAAE,CAAC,UAAD,CAdZ,CAeA,aAAa,CAAE,CAAC,UAAD,CAff,CAgBA,SAAS,CAAEZ,OAAO,CAACa,YAhBnB,EALJ,CAwBI,oBAAC,mBAAD,EACA,EAAE,CAAEZ,MAAM,CAACa,aAAP,CAAqBJ,IADzB,CAEA,WAAW,CAAE,IAFb,CAGA,SAAS,CAAE,IAHX,CAIA,IAAI,CAAC,MAJL,CAKA,WAAW,CAAET,MAAM,CAACa,aAAP,CAAqBH,WALlC,CAMA,IAAI,CAAEV,MAAM,CAACa,aAAP,CAAqBJ,IAN3B,CAOA,KAAK,CAAET,MAAM,CAACa,aAAP,CAAqBF,KAP5B,CAQA,QAAQ,CAAE,kBAAAA,KAAK,CAAI,CACfV,sBAAsB,CAClBD,MAAM,CAACa,aAAP,CAAqBJ,IADH,CAElBE,KAFkB,CAAtB,CAIH,CAbD,CAcA,UAAU,CAAE,CAAC,UAAD,CAdZ,CAeA,aAAa,CAAE,CAAC,UAAD,CAff,CAgBA,SAAS,CAAEZ,OAAO,CAACa,YAhBnB,EAxBJ,CA2CI,oBAAC,mBAAD,EACI,EAAE,CAAEZ,MAAM,CAACc,aAAP,CAAqBL,IAD7B,CAEI,WAAW,CAAE,IAFjB,CAGI,SAAS,CAAE,IAHf,CAII,IAAI,CAAC,UAJT,CAKI,WAAW,CAAET,MAAM,CAACc,aAAP,CAAqBJ,WALtC,CAMI,IAAI,CAAEV,MAAM,CAACc,aAAP,CAAqBL,IAN/B,CAOI,KAAK,CAAET,MAAM,CAACc,aAAP,CAAqBH,KAPhC,CAQI,QAAQ,CAAE,kBAAAA,KAAK,CAAI,CACfV,sBAAsB,CAClBD,MAAM,CAACc,aAAP,CAAqBL,IADH,CAElBE,KAFkB,CAAtB,CAIH,CAbL,CAcI,UAAU,CAAE,CAAC,UAAD,CAdhB,CAeI,aAAa,CAAE,CAAC,UAAD,CAfnB,CAgBI,SAAS,CAAEZ,OAAO,CAACa,YAhBvB,EA3CJ,CA8DI,oBAAC,mBAAD,EACA,EAAE,CAAEZ,MAAM,CAACe,oBAAP,CAA4BN,IADhC,CAEA,WAAW,CAAE,IAFb,CAGA,SAAS,CAAE,IAHX,CAIA,IAAI,CAAC,UAJL,CAKA,WAAW,CAAET,MAAM,CAACe,oBAAP,CAA4BL,WALzC,CAMA,IAAI,CAAEV,MAAM,CAACe,oBAAP,CAA4BN,IANlC,CAOA,KAAK,CAAET,MAAM,CAACe,oBAAP,CAA4BJ,KAPnC,CAQA,QAAQ,CAAE,kBAAAA,KAAK,CAAI,CACfV,sBAAsB,CAClBD,MAAM,CAACe,oBAAP,CAA4BN,IADV,CAElBE,KAFkB,CAAtB,CAIH,CAbD,CAcA,UAAU,CAAE,CAAC,UAAD,CAdZ,CAeA,aAAa,CAAE,CAAC,UAAD,CAff,CAgBA,SAAS,CAAEZ,OAAO,CAACa,YAhBnB,EA9DJ,CAkFQT,KAAK,CAAG,4BAAM,SAAS,CAAEJ,OAAO,CAACI,KAAzB,EAAiCA,KAAjC,CAAH,CAAoD,IAlFjE,CAqFI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,IAAI,CAAC,QAAjD,CAA0D,SAAS,CAAEJ,OAAO,CAACiB,eAA7E,YArFJ,CAwFI,+BACI,2BAAK,SAAS,CAAEjB,OAAO,CAACkB,kBAAxB,EACA,yDAA6B,yBAAG,IAAI,CAAC,QAAR,YAA7B,KADA,CADJ,CAxFJ,CAdJ,CAJJ,CAqHI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EArHJ,CAuHI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,SAAS,CAAC,kBAA5B,EACI,2BAAK,SAAS,CAAElB,OAAO,CAACmB,kBAAxB,EACI,2BAAK,SAAS,CAAC,mBAAf,EACI,2BAAK,SAAS,CAAC,eAAf,EADJ,CAEI,0BAAI,SAAS,CAAEnB,OAAO,CAACoB,cAAvB,uBAFJ,CAII,2JAJJ,CADJ,CADJ,CAvHJ,CADA,CADF,CAHN,CA4IH,C,wBArKoBrC,S,EAwKzB,cAAeE,CAAAA,UAAU,CAACD,MAAD,CAAV,CAAmBO,UAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignupPage extends Component {\n\n    state = {\n        loginId: 1,\n    }\n\n    selectedLogin = (val) => {\n        this.setState({\n            loginId: val\n        })\n    }\n    SubmitHandler = () => {\n        this.props.submitSignUpHandler();\n    }\n\n\n    render() {\n\n        const {\n            classes,\n            fields,\n            textFieldChangeHandler,\n            isSignUp,\n            error\n        } = this.props;\n        return (\n            isSignUp ? \n            <Redirect to=\"/confirmation_pending\"/>\n            : <>\n                <div className={classes.polygonbg}>\n                <Grid container className={classes.signupWrapper}>\n                    {/* signup header starts here */}\n                    {/* signup header ends here */}\n\n                    <Grid item sm={4}>\n                        <h1 className={classes.signuptitle} >Sign Up</h1>\n\n                        {/* <div className={classes.selectLoginOpt}>\n                            <Button  className={this.state.loginId === 1 ? classes.professionalLogin : classes.corporateLogin} onClick={(e) => this.selectedLogin(1)}>\n                                Candidate\n                            </Button>\n                            \n                            <Button className={this.state.loginId === 2 ? classes.professionalLogin : classes.corporateLogin} onClick={(e) => this.selectedLogin(2)}>\n                                Corporate\n                            </Button>\n                        </div> */}\n                        {/* <h1  >Sign Up </h1> */}\n                        <p className={classes.signupsubtitle} >Please sign up using your email or using one of the platforms shown below</p>\n                        <ValidatorForm\n                        onSubmit={this.SubmitHandler}\n                        autoComplete=\"off\"\n                        >\n\n                            <CustomTextValidator\n                            id={fields.EmailField.name}\n                            validations={true}\n                            fullWidth={true}\n                            type=\"text\"\n                            placeholder={fields.EmailField.placeholder}\n                            name={fields.EmailField.name}\n                            value={fields.EmailField.value}\n                            onChange={value => {\n                                textFieldChangeHandler(\n                                    fields.EmailField.name,\n                                    value\n                                );\n                            }}\n                            validators={[\"required\"]}\n                            errorMessages={[\"Required\"]}\n                            className={classes.signupfields}\n                            />\n\n                            <CustomTextValidator\n                            id={fields.userNameField.name}\n                            validations={true}\n                            fullWidth={true}\n                            type=\"text\"\n                            placeholder={fields.userNameField.placeholder}\n                            name={fields.userNameField.name}\n                            value={fields.userNameField.value}\n                            onChange={value => {\n                                textFieldChangeHandler(\n                                    fields.userNameField.name,\n                                    value\n                                );\n                            }}\n                            validators={[\"required\"]}\n                            errorMessages={[\"Required\"]}\n                            className={classes.signupfields}\n                            />\n\n                            <CustomTextValidator\n                                id={fields.PasswordField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"password\"\n                                placeholder={fields.PasswordField.placeholder}\n                                name={fields.PasswordField.name}\n                                value={fields.PasswordField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.PasswordField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.signupfields}\n                            />\n\n                            <CustomTextValidator\n                            id={fields.ConfirmPasswordField.name}\n                            validations={true}\n                            fullWidth={true}\n                            type=\"password\"\n                            placeholder={fields.ConfirmPasswordField.placeholder}\n                            name={fields.ConfirmPasswordField.name}\n                            value={fields.ConfirmPasswordField.value}\n                            onChange={value => {\n                                textFieldChangeHandler(\n                                    fields.ConfirmPasswordField.name,\n                                    value\n                                );\n                            }}\n                            validators={[\"required\"]}\n                            errorMessages={[\"Required\"]}\n                            className={classes.signupfields}\n                            />\n\n                            {\n                                error ? <span className={classes.error}>{error}</span> : null\n                            }\n\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.signupSubmitBtn} >\n                                Sign Up\n                            </Button>\n                            <div >\n                                <div className={classes.signUpOptionsRight}>\n                                <p >already have an account? <a href=\"/login\">sign in</a> </p>\n                                </div> \n                               \n\n                            \n                        </div>\n\n                        </ValidatorForm>\n                    </Grid>\n                    <Grid item sm={2}>\n                    </Grid>\n                    <Grid item sm={6} className=\"dNoneRightSignup\">\n                        <div className={classes.signupRightWrapper}>\n                            <div className=\"signuprightwithbg\">\n                                <div className=\"wrapperborder\"></div>\n                                <h1 className={classes.textAboveImage}>Join Hands With Us</h1>\n                                {/* <img src={SignUpRightImg} /> */}\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                            </div>\n                            \n                        </div>\n                    </Grid>\n                   \n                </Grid>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(SignupPage);"]},"metadata":{},"sourceType":"module"}