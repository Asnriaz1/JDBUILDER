{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import SignupPage from\"./component\";import{textFieldChangeHandler as _textFieldChangeHandler,signUpCorrectlyHandler,setErrorHandler}from\"./actions\";import{handleLoadingSpinnerClose,handleLoadingSpinnerOpenWithOptions}from\"../common/ReduxBased/LoadingSpinner/actions\";import instance,{BASE_URL_SQL}from\"../../api/config\";var mapStateToProps=function mapStateToProps(state){return{fields:state.SIGNUP.forms.signupForm.fields,isSignUp:state.SIGNUP.UISettings.isSignUp,error:state.SIGNUP.UISettings.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{textFieldChangeHandler:function textFieldChangeHandler(name,e){if(typeof e.value!==\"string\"){e.value=\"\";}dispatch(_textFieldChangeHandler(name,e));},submitSignUpHandler:function submitSignUpHandler(email,userNameField,password,confirmPassword){var data={Email:email,Password:password,R_Password:confirmPassword,Username:userNameField};dispatch(handleLoadingSpinnerOpenWithOptions(true,\"Loading...\",\"large\"));instance.post(BASE_URL_SQL+'Reg',data).then(function(res){if(res.data.statusCode===404){dispatch(setErrorHandler(res.data.error));dispatch(signUpCorrectlyHandler(false));}else{dispatch(setErrorHandler(\"\"));dispatch(signUpCorrectlyHandler(true));}dispatch(handleLoadingSpinnerClose());}).catch(function(error){dispatch(signUpCorrectlyHandler(false));dispatch(handleLoadingSpinnerClose());});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{submitSignUpHandler:function submitSignUpHandler(){dispatchProps.submitSignUpHandler(stateProps.fields.EmailField.value,stateProps.fields.userNameField.value,stateProps.fields.PasswordField.value,stateProps.fields.ConfirmPasswordField.value);}},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(SignupPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Signup/container.js"],"names":["connect","SignupPage","textFieldChangeHandler","signUpCorrectlyHandler","setErrorHandler","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","instance","BASE_URL_SQL","mapStateToProps","state","fields","SIGNUP","forms","signupForm","isSignUp","UISettings","error","mapDispatchToProps","dispatch","props","name","e","value","submitSignUpHandler","email","userNameField","password","confirmPassword","data","Email","Password","R_Password","Username","post","then","res","statusCode","catch","mergeProps","stateProps","dispatchProps","ownProps","EmailField","PasswordField","ConfirmPasswordField"],"mappings":"2JAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,OACIC,sBAAsB,GAAtBA,CAAAA,uBADJ,CAEIC,sBAFJ,CAGIC,eAHJ,KAIO,WAJP,CAKA,OACIC,yBADJ,CAEIC,mCAFJ,KAGO,6CAHP,CAKA,MAAOC,CAAAA,QAAP,EAAmBC,YAAnB,KAAuC,kBAAvC,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,MAAM,CAAED,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,UAAnB,CAA8BH,MADR,CAE9BI,QAAQ,CAAEL,KAAK,CAACE,MAAN,CAAaI,UAAb,CAAwBD,QAFJ,CAG9BE,KAAK,CAAEP,KAAK,CAACE,MAAN,CAAaI,UAAb,CAAwBC,KAHD,CAAL,EAA7B,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWC,KAAX,QAAsB,CAC7ClB,sBAAsB,CAAE,gCAACmB,IAAD,CAAOC,CAAP,CAAa,CACjC,GAAI,MAAOA,CAAAA,CAAC,CAACC,KAAT,GAAmB,QAAvB,CAAiC,CAC7BD,CAAC,CAACC,KAAF,CAAU,EAAV,CACH,CACDJ,QAAQ,CAACjB,uBAAsB,CAACmB,IAAD,CAAOC,CAAP,CAAvB,CAAR,CACH,CAN4C,CAO7CE,mBAAmB,CAAE,6BAACC,KAAD,CAAQC,aAAR,CAAuBC,QAAvB,CAAiCC,eAAjC,CAAqD,CACtE,GAAIC,CAAAA,IAAI,CAAG,CACPC,KAAK,CAAEL,KADA,CAEPM,QAAQ,CAAEJ,QAFH,CAGPK,UAAU,CAAEJ,eAHL,CAIPK,QAAQ,CAAEP,aAJH,CAAX,CAQAP,QAAQ,CAACb,mCAAmC,CAAC,IAAD,CAAO,YAAP,CAAqB,OAArB,CAApC,CAAR,CACAC,QAAQ,CAAC2B,IAAT,CAAc1B,YAAY,CAAC,KAA3B,CAAkCqB,IAAlC,EACCM,IADD,CACM,SAAAC,GAAG,CAAI,CACT,GAAGA,GAAG,CAACP,IAAJ,CAASQ,UAAT,GAAwB,GAA3B,CAAgC,CAC5BlB,QAAQ,CAACf,eAAe,CAACgC,GAAG,CAACP,IAAJ,CAASZ,KAAV,CAAhB,CAAR,CACAE,QAAQ,CAAChB,sBAAsB,CAAC,KAAD,CAAvB,CAAR,CACH,CAHD,IAGM,CACFgB,QAAQ,CAACf,eAAe,CAAC,EAAD,CAAhB,CAAR,CACAe,QAAQ,CAAChB,sBAAsB,CAAC,IAAD,CAAvB,CAAR,CACH,CACDgB,QAAQ,CAACd,yBAAyB,EAA1B,CAAR,CACH,CAVD,EAWCiC,KAXD,CAWO,SAAArB,KAAK,CAAI,CACZE,QAAQ,CAAChB,sBAAsB,CAAC,KAAD,CAAvB,CAAR,CACAgB,QAAQ,CAACd,yBAAyB,EAA1B,CAAR,CACH,CAdD,EAeH,CAhC4C,CAAtB,EAA3B,CAmCA,GAAMkC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAaC,aAAb,CAA4BC,QAA5B,0BACZF,UADY,IAEZC,aAFY,EAGfjB,mBAAmB,CAAE,8BAAM,CACvBiB,aAAa,CAACjB,mBAAd,CAAkCgB,UAAU,CAAC7B,MAAX,CAAkBgC,UAAlB,CAA6BpB,KAA/D,CAAsEiB,UAAU,CAAC7B,MAAX,CAAkBe,aAAlB,CAAgCH,KAAtG,CAA6GiB,UAAU,CAAC7B,MAAX,CAAkBiC,aAAlB,CAAgCrB,KAA7I,CAAoJiB,UAAU,CAAC7B,MAAX,CAAkBkC,oBAAlB,CAAuCtB,KAA3L,EACH,CALc,EAMZmB,QANY,GAAnB,CASA,cAAe1C,CAAAA,OAAO,CAClBS,eADkB,CAElBS,kBAFkB,CAGlBqB,UAHkB,CAAP,CAIbtC,UAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport SignupPage from \"./component\";\nimport {\n    textFieldChangeHandler,\n    signUpCorrectlyHandler,\n    setErrorHandler\n} from \"./actions\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../common/ReduxBased/LoadingSpinner/actions\";\n\nimport instance, { BASE_URL_SQL } from \"../../api/config\";\n\nconst mapStateToProps = state => ({\n    fields: state.SIGNUP.forms.signupForm.fields,\n    isSignUp: state.SIGNUP.UISettings.isSignUp,\n    error: state.SIGNUP.UISettings.error\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldChangeHandler(name, e));\n    },\n    submitSignUpHandler: (email, userNameField, password, confirmPassword) => {\n        let data = {\n            Email: email,\n            Password: password,\n            R_Password: confirmPassword,\n            Username: userNameField\n        }\n\n        \n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n        instance.post(BASE_URL_SQL+'Reg', data)\n        .then(res => {\n            if(res.data.statusCode === 404) {\n                dispatch(setErrorHandler(res.data.error));\n                dispatch(signUpCorrectlyHandler(false))\n            }else {\n                dispatch(setErrorHandler(\"\"));\n                dispatch(signUpCorrectlyHandler(true))\n            }\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(signUpCorrectlyHandler(false))\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    submitSignUpHandler: () => {\n        dispatchProps.submitSignUpHandler(stateProps.fields.EmailField.value, stateProps.fields.userNameField.value, stateProps.fields.PasswordField.value, stateProps.fields.ConfirmPasswordField.value);\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(SignupPage);"]},"metadata":{},"sourceType":"module"}