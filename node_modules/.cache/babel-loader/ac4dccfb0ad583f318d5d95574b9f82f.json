{"ast":null,"code":"import { connect } from \"react-redux\";\nimport AddCollaboration from \"./component\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { textFieldChangeHandler, saveAddedCollaborators } from \"../actions\";\nimport ls from 'local-storage';\nimport instance, { BASE_URL_COL } from \"../../../../api/config\";\n\nconst mapStateToProps = state => ({\n  EmailField: state.ADD_COLLABORATOR.forms.addCollaboratorForm.fields.EmailField,\n  NameField: state.ADD_COLLABORATOR.forms.addCollaboratorForm.fields.NameField,\n  addedCollaborator: state.ADD_COLLABORATOR.data.addedCollaborator,\n  jobCode: state.JOBOPENING.forms.jobOpeningForm.fields.jobCodeField,\n  jobTitle: state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldChangeHandler(name, e));\n  },\n  sendCollaboration: () => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Invite...\", \"large\"));\n    let data = {\n      Collab_email: this.stateProps.EmailField,\n      Collab_Name: this.stateProps.NameField,\n      Job_Title: this.stateProps.jobTitle,\n      Job_Code: this.stateProps.jobCode\n    };\n    instance.post(BASE_URL_COL + 'User/SendCollabInvite', data).then(res => {\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  addCollaboratorHandler: () => {\n    dispatchProps.addCollaboratorHandler(stateProps.fields.EmailField.value, stateProps.fields.NameField.value);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddCollaboration);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/AddCollaboration/container.js"],"names":["connect","AddCollaboration","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","textFieldChangeHandler","saveAddedCollaborators","ls","instance","BASE_URL_COL","mapStateToProps","state","EmailField","ADD_COLLABORATOR","forms","addCollaboratorForm","fields","NameField","addedCollaborator","data","jobCode","JOBOPENING","jobOpeningForm","jobCodeField","jobTitle","jobTitleField","mapDispatchToProps","dispatch","props","name","e","value","sendCollaboration","Collab_email","stateProps","Collab_Name","Job_Title","Job_Code","post","then","res","catch","error","mergeProps","dispatchProps","ownProps","addCollaboratorHandler"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,SACIC,yBADJ,EAEIC,mCAFJ,QAGO,mDAHP;AAIA,SACIC,sBADJ,EAEIC,sBAFJ,QAGO,YAHP;AAIA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,QAAP,IAAmBC,YAAnB,QAAuC,wBAAvC;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,UAAU,EAAED,KAAK,CAACE,gBAAN,CAAuBC,KAAvB,CAA6BC,mBAA7B,CAAiDC,MAAjD,CAAwDJ,UADtC;AAE9BK,EAAAA,SAAS,EAAEN,KAAK,CAACE,gBAAN,CAAuBC,KAAvB,CAA6BC,mBAA7B,CAAiDC,MAAjD,CAAwDC,SAFrC;AAG9BC,EAAAA,iBAAiB,EAAEP,KAAK,CAACE,gBAAN,CAAuBM,IAAvB,CAA4BD,iBAHjB;AAI9BE,EAAAA,OAAO,EAAET,KAAK,CAACU,UAAN,CAAiBP,KAAjB,CAAuBQ,cAAvB,CAAsCN,MAAtC,CAA6CO,YAJxB;AAK9BC,EAAAA,QAAQ,EAACb,KAAK,CAACU,UAAN,CAAiBP,KAAjB,CAAuBQ,cAAvB,CAAsCN,MAAtC,CAA6CS;AALxB,CAAL,CAA7B;;AASA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7CvB,EAAAA,sBAAsB,EAAE,CAACwB,IAAD,EAAOC,CAAP,KAAa;AACjC,QAAI,OAAOA,CAAC,CAACC,KAAT,KAAmB,QAAvB,EAAiC;AAC7BD,MAAAA,CAAC,CAACC,KAAF,GAAU,EAAV;AACH;;AACDJ,IAAAA,QAAQ,CAACtB,sBAAsB,CAACwB,IAAD,EAAOC,CAAP,CAAvB,CAAR;AACH,GAN4C;AAO7CE,EAAAA,iBAAiB,EAAE,MAAM;AACrBL,IAAAA,QAAQ,CAACvB,mCAAmC,CAAC,IAAD,EAAO,mBAAP,EAA4B,OAA5B,CAApC,CAAR;AAEA,QAAIe,IAAI,GAAG;AACPc,MAAAA,YAAY,EAAE,KAAKC,UAAL,CAAgBtB,UADvB;AAEPuB,MAAAA,WAAW,EAAE,KAAKD,UAAL,CAAgBjB,SAFtB;AAGPmB,MAAAA,SAAS,EAAE,KAAKF,UAAL,CAAgBV,QAHpB;AAIPa,MAAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBd;AAJnB,KAAX;AAOAZ,IAAAA,QAAQ,CAAC8B,IAAT,CAAc7B,YAAY,GAAC,uBAA3B,EAAoDU,IAApD,EACCoB,IADD,CACMC,GAAG,IAAI;AACTb,MAAAA,QAAQ,CAACxB,yBAAyB,EAA1B,CAAR;AACH,KAHD,EAICsC,KAJD,CAIOC,KAAK,IAAI;AACZf,MAAAA,QAAQ,CAACxB,yBAAyB,EAA1B,CAAR;AACH,KAND;AAOH;AAxB4C,CAAtB,CAA3B;;AA4BA,MAAMwC,UAAU,GAAG,CAACT,UAAD,EAAaU,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGX,UADsD;AAEzD,KAAGU,aAFsD;AAGzDE,EAAAA,sBAAsB,EAAE,MAAM;AAC1BF,IAAAA,aAAa,CAACE,sBAAd,CAAqCZ,UAAU,CAAClB,MAAX,CAAkBJ,UAAlB,CAA6BmB,KAAlE,EAAyEG,UAAU,CAAClB,MAAX,CAAkBC,SAAlB,CAA4Bc,KAArG;AACH,GALwD;AAMzD,KAAGc;AANsD,CAA1C,CAAnB;;AASA,eAAe5C,OAAO,CAClBS,eADkB,EAElBgB,kBAFkB,EAGlBiB,UAHkB,CAAP,CAIbzC,gBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport AddCollaboration from \"./component\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    textFieldChangeHandler,\n    saveAddedCollaborators\n} from \"../actions\";\nimport ls from 'local-storage';\nimport instance, { BASE_URL_COL } from \"../../../../api/config\";\nconst mapStateToProps = state => ({\n    EmailField: state.ADD_COLLABORATOR.forms.addCollaboratorForm.fields.EmailField,\n    NameField: state.ADD_COLLABORATOR.forms.addCollaboratorForm.fields.NameField,\n    addedCollaborator: state.ADD_COLLABORATOR.data.addedCollaborator,\n    jobCode :state.JOBOPENING.forms.jobOpeningForm.fields.jobCodeField,\n    jobTitle:state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField,\n\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldChangeHandler(name, e));\n    },\n    sendCollaboration: () => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Invite...\", \"large\"));\n        \n        let data = {\n            Collab_email: this.stateProps.EmailField,\n            Collab_Name: this.stateProps.NameField,\n            Job_Title: this.stateProps.jobTitle,\n            Job_Code: this.stateProps.jobCode,\n        }\n       \n        instance.post(BASE_URL_COL+'User/SendCollabInvite', data)\n        .then(res => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    addCollaboratorHandler: () => {\n        dispatchProps.addCollaboratorHandler(stateProps.fields.EmailField.value, stateProps.fields.NameField.value)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(AddCollaboration);"]},"metadata":{},"sourceType":"module"}