{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport initialState from \"./initialState\";\nimport { createLogger } from \"redux-logger\";\nimport { loadState, getState } from \"./localStorage\"; // const middleware = [thunk, reduxImmutableStateInvariant()];\n\nconst middleware = [thunk];\nmiddleware.push(createLogger({\n  duration: true,\n  diff: true\n}));\nlet composedMiddleWare = compose(applyMiddleware(...middleware));\n\nif (!!window.__REDUX_DEVTOOLS_EXTENSION__) {\n  composedMiddleWare = compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n} //localstorage\n\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState == null ? initialState : persistedState, composedMiddleWare);\nstore.subscribe(() => {\n  saveState({\n    initialState: store.getState().initialState\n  });\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/store/configurestore.js"],"names":["createStore","applyMiddleware","compose","rootReducer","thunk","initialState","createLogger","loadState","getState","middleware","push","duration","diff","composedMiddleWare","window","__REDUX_DEVTOOLS_EXTENSION__","persistedState","store","subscribe","saveState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,gBAAjC,C,CAEA;;AACA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AAEAK,UAAU,CAACC,IAAX,CAAgBJ,YAAY,CAAC;AAC3BK,EAAAA,QAAQ,EAAE,IADiB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAAD,CAA5B;AAKA,IAAIC,kBAAkB,GAAGX,OAAO,CAACD,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAAhC;;AAEA,IAAI,CAAC,CAACK,MAAM,CAACC,4BAAb,EAA2C;AAC1CF,EAAAA,kBAAkB,GAAGX,OAAO,CAC3BD,eAAe,CAAC,GAAGQ,UAAJ,CADY,EAE3BK,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFZ,CAA5B;AAIA,C,CAGD;;;AACA,MAAMC,cAAc,GAAGT,SAAS,EAAhC;AACA,MAAMU,KAAK,GAAGjB,WAAW,CACvBG,WADuB,EAEvBa,cAAc,IAAE,IAAhB,GAAqBX,YAArB,GAAkCW,cAFX,EAGvBH,kBAHuB,CAAzB;AAKAI,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBC,EAAAA,SAAS,CAAC;AACRd,IAAAA,YAAY,EAAEY,KAAK,CAACT,QAAN,GAAiBH;AADvB,GAAD,CAAT;AAGD,CAJD;AAMA,eAAeY,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport initialState from \"./initialState\";\nimport { createLogger } from \"redux-logger\";\nimport {loadState,getState} from \"./localStorage\"\n\n// const middleware = [thunk, reduxImmutableStateInvariant()];\nconst middleware = [thunk];\n\nmiddleware.push(createLogger({\n  duration: true,\n  diff: true\n}));\n\nlet composedMiddleWare = compose(applyMiddleware(...middleware));\n\nif (!!window.__REDUX_DEVTOOLS_EXTENSION__) {\n\tcomposedMiddleWare = compose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t);\n}\n\n\n//localstorage\nconst persistedState = loadState();\nconst store = createStore(\n  rootReducer,\n  persistedState==null?initialState:persistedState,\n  composedMiddleWare\n);\nstore.subscribe(() => {\n  saveState({\n    initialState: store.getState().initialState\n  });\n});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}