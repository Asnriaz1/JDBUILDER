{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\Login\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Redirect, NavLink } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.SubmitHandler = () => {\n      // window.location.replace(\"/candidate\")\n      this.props.submitFormHandler();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      fields,\n      textFieldChangeHandler,\n      isLogin,\n      isPopup,\n      error,\n      submitandSaveBtn\n    } = this.props;\n    return isLogin ? React.createElement(Redirect, {\n      to: \"/user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: isPopup ? \"\" : classes.polygonbg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: isPopup ? \"\" : classes.loginWrapper,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: isPopup ? 12 : 4,\n      className: isPopup ? \"\" : classes.loginContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Log In \"), React.createElement(ValidatorForm, {\n      onSubmit: submitandSaveBtn ? submitandSaveBtn : this.SubmitHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.EmailField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.EmailField.placeholder,\n      name: fields.EmailField.name,\n      value: fields.EmailField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.EmailField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.loginfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(CustomTextValidator, {\n      id: fields.PasswordField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"password\",\n      placeholder: fields.PasswordField.placeholder,\n      name: fields.PasswordField.name,\n      value: fields.PasswordField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.PasswordField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.loginfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), error ? React.createElement(\"span\", {\n      className: classes.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, error) : null, React.createElement(\"div\", {\n      className: classes.passwordOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      className: classes.rememberMECheckbox,\n      value: \"end\",\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      labelPlacement: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: '/resetpassword',\n      className: classes.forgetPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Forget your password\")), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      className: classes.loginSubmitBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: classes.passwordOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.passwordOptionsLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Don't have account? \", React.createElement(\"a\", {\n      href: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Sign up\"), \" \")))), React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      className: \"dNoneRightLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withStyles(styles)(LoginPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Login/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","FormControlLabel","Checkbox","Redirect","NavLink","LoginPage","SubmitHandler","props","submitFormHandler","render","classes","fields","textFieldChangeHandler","isLogin","isPopup","error","submitandSaveBtn","polygonbg","loginWrapper","loginContainer","EmailField","name","placeholder","value","loginfields","PasswordField","passwordOptions","rememberMECheckbox","forgetPassword","loginSubmitBtn","passwordOptionsLeft"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Redirect, NavLink } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n    SubmitHandler = () => {\n        // window.location.replace(\"/candidate\")\n        this.props.submitFormHandler()\n    }\n\n    render() {\n        const { \n            classes,\n            fields,\n            textFieldChangeHandler, \n            isLogin, \n            isPopup,\n            error,\n            submitandSaveBtn\n        } = this.props;\n\n        return (\n            isLogin ? <Redirect to=\"/user\"/> :\n            <>\n            <div className={isPopup ? \"\" :classes.polygonbg}>\n                 <Grid container className={isPopup ? \"\" : classes.loginWrapper} justify=\"center\">\n                    <Grid item xs={12} sm={12} md={isPopup ? 12 : 4} className={isPopup ? \"\" : classes.loginContainer}>\n                        <h1  >Log In </h1>\n                        <ValidatorForm\n                        onSubmit={submitandSaveBtn ? submitandSaveBtn : this.SubmitHandler}\n                        autoComplete=\"off\"\n                        >\n\n                            <CustomTextValidator\n                                id={fields.EmailField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.EmailField.placeholder}\n                                name={fields.EmailField.name}\n                                value={fields.EmailField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.EmailField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.loginfields}\n                            />\n\n                            <CustomTextValidator\n                                id={fields.PasswordField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"password\"\n                                placeholder={fields.PasswordField.placeholder}\n                                name={fields.PasswordField.name}\n                                value={fields.PasswordField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.PasswordField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.loginfields}\n                            />\n                            {\n                                error ? <span className={classes.error}>{error}</span> : null\n                            }\n                              <div className={classes.passwordOptions}>\n                              <FormControlLabel className={classes.rememberMECheckbox}\n                                value=\"end\"\n                                control={<Checkbox color=\"primary\" />}\n                                label=\"Remember me\"\n                                labelPlacement=\"end\"\n                                />\n                            <NavLink to={'/resetpassword'} className={classes.forgetPassword}>Forget your password</NavLink>\n\n                            \n                        </div>\n\n                           \n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.loginSubmitBtn} >\n                                Login\n                            </Button>\n                            <div className={classes.passwordOptions}>\n                                <p className={classes.passwordOptionsLeft}>Don't have account? <a href=\"/signup\">Sign up</a> </p>\n                        </div>\n                        </ValidatorForm>\n                    </Grid>\n                    <Grid item sm={2}>\n                    </Grid>\n                    <Grid item sm={6} className=\"dNoneRightLogin\">\n                    </Grid>\n                  \n                </Grid>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(LoginPage);"]},"metadata":{},"sourceType":"module"}