{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Templates\\\\SearchForm\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport ReactSelectValidator from \"../../../common/ReduxBased/CustomReactSelectValidator/ReactSelectValidator\";\nimport ls from 'local-storage';\n\nclass JDHomeSearchForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n\n    this.selectFieldChangeHandler = (name, e) => {\n      this.props.selectFieldChangeHandler(name, e);\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      fields\n    } = this.props;\n    let jobIdLabel = ls.get('jobIdLabel');\n    jobIdLabel = jobIdLabel ? {\n      value: jobIdLabel,\n      label: jobIdLabel\n    } : jobIdLabel;\n    let specIdLabel = ls.get('specIdLabel');\n    specIdLabel = specIdLabel ? {\n      value: specIdLabel,\n      label: specIdLabel\n    } : specIdLabel;\n    return React.createElement(\"div\", {\n      className: classes.landingsearchwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: this.SubmitHandler,\n      autoComplete: \"off\",\n      className: classes.landingsearchform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.landingsearchlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"I'm Looking...\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ReactSelectValidator, {\n      id: fields.lookingField.name,\n      name: fields.lookingField.name,\n      value: fields.lookingField.value.length > 0 ? fields.lookingField.value : jobIdLabel,\n      placeholder: fields.lookingField.placeholder,\n      isClearable: true,\n      onChange: value => {\n        this.selectFieldChangeHandler(fields.lookingField.name, value);\n      },\n      isSearchable: true,\n      options: fields.lookingField.options,\n      className: classes.searchfield,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.landingsearchlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"for\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ReactSelectValidator, {\n      id: fields.forField.name,\n      name: fields.forField.name,\n      value: fields.forField.value.length > 0 ? fields.forField.value : specIdLabel,\n      placeholder: fields.forField.placeholder,\n      isClearable: true,\n      onChange: value => {\n        this.selectFieldChangeHandler(fields.forField.name, value);\n      },\n      isSearchable: true,\n      options: fields.forField.options,\n      className: classes.searchfield,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(JDHomeSearchForm);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Templates/SearchForm/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","ReactSelectValidator","ls","JDHomeSearchForm","componentDidMount","props","fetchDataIfNeeded","selectFieldChangeHandler","name","e","render","classes","fields","jobIdLabel","get","value","label","specIdLabel","landingsearchwrapper","SubmitHandler","landingsearchform","landingsearchlabel","lookingField","length","placeholder","options","searchfield","forField"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport ReactSelectValidator from \"../../../common/ReduxBased/CustomReactSelectValidator/ReactSelectValidator\";\nimport ls from 'local-storage';\n\nclass JDHomeSearchForm extends Component {\n\n    componentDidMount = () => {\n        this.props.fetchDataIfNeeded();\n    }\n\n    selectFieldChangeHandler = (name, e) => {\n        this.props.selectFieldChangeHandler(name, e);\n    }\n    render() {\n        const {\n            classes,\n            fields,\n            } = this.props;\n\n        let jobIdLabel = ls.get('jobIdLabel');\n        jobIdLabel = jobIdLabel ?  {value: jobIdLabel, label: jobIdLabel} : jobIdLabel\n\n        let specIdLabel = ls.get('specIdLabel');\n        specIdLabel = specIdLabel ?  {value: specIdLabel, label: specIdLabel} : specIdLabel\n\n        return (\n            <div className={classes.landingsearchwrapper}>\n                <Grid container>\n                    <ValidatorForm\n                        onSubmit={this.SubmitHandler}\n                        autoComplete=\"off\"\n                        className={classes.landingsearchform}\n                    >\n                        <Grid item xs={12} md={1}>\n                            <span className={classes.landingsearchlabel} >I'm Looking...</span>\n                        </Grid>\n\n                        <Grid item xs={12} md={4}>\n\n                                <ReactSelectValidator\n                                    id={fields.lookingField.name}\n                                    name={fields.lookingField.name}\n                                    value={fields.lookingField.value.length > 0 ? fields.lookingField.value : jobIdLabel}\n                                    placeholder={fields.lookingField.placeholder}\n                                    isClearable={true}\n                                    onChange={value => {\n                                        this.selectFieldChangeHandler(\n                                            fields.lookingField.name,\n                                            value\n                                        );\n                                    }}\n                                    isSearchable={true}\n                                    options={fields.lookingField.options}\n                                    className={classes.searchfield}\n                                />\n                        </Grid>\n\n                        <Grid item xs={12} md={1}>\n                            <span className={classes.landingsearchlabel}>for</span>\n                        </Grid>\n\n                        <Grid item xs={12} md={4}>\n\n                                <ReactSelectValidator\n                                    id={fields.forField.name}\n                                    name={fields.forField.name}\n                                    value={fields.forField.value.length > 0 ? fields.forField.value : specIdLabel}\n                                    placeholder={fields.forField.placeholder}\n                                    isClearable={true}\n                                    onChange={value => {\n                                        this.selectFieldChangeHandler(\n                                            fields.forField.name,\n                                            value\n                                        );\n                                    }}\n                                    isSearchable={true}\n                                    options={fields.forField.options}\n                                    className={classes.searchfield}\n                                />\n                        </Grid>\n\n                        {/* <Grid item xs={12} md={2}>\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.searchsubmitbtn} disabled={(fields.lookingField.value.length > 0 ? fields.lookingField.value : jobIdLabel) && (fields.forField.value.length > 0 ? fields.forField.value : specIdLabel) ? false : true}>\n                                    Search\n                                </Button>\n                        </Grid> */}\n                    </ValidatorForm>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(JDHomeSearchForm);"]},"metadata":{},"sourceType":"module"}