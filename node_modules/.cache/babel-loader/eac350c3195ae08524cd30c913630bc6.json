{"ast":null,"code":"import { connect } from \"react-redux\";\nimport AdditionalInfoMetaFields from \"./component\";\nimport { textFieldChangeHandler, selectFieldChangeHandler, submitSkillFormHandler, saveUpdatedSkillTitle, submitLanguageFormHandler, submitRecommenedSkillFormHandler, recommendedSkillActiveHandler, removeSkillHandler, removeLanguageHandler } from \"../actions\";\nimport instance, { SKILLS_URL } from \"../../../../../api/config\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../../common/ReduxBased/LoadingSpinner/actions\";\n\nconst mapStateToProps = state => ({\n  fields: state.ADDITIONALINFO.forms.additionalinfoForm.fields,\n  skillsData: state.ADDITIONALINFO.data.skillsData,\n  languagesData: state.ADDITIONALINFO.data.languagesData,\n  recommendedSkills: state.ADDITIONALINFO.data.recommendedSkills\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  submitRecommenedSkillFormHandler: item => {\n    let recommendedSkill = {\n      id: item.id,\n      title: item.title,\n      level: item.level,\n      importance: item.importance\n    };\n    console.log(recommendedSkill);\n    dispatch(submitSkillFormHandler(recommendedSkill));\n  },\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldChangeHandler(name, e.value));\n  },\n  selectFieldChangeHandler: (name, e) => {\n    dispatch(selectFieldChangeHandler(name, e));\n  },\n  submitSkillFormHandler: (skillsField, skillsLevelField, skillsImportanceField, skillsData, skillsFieldid) => {\n    if (skillsField) {\n      let newSkill = {\n        id: skillsField[0].id,\n        title: skillsField[0].value,\n        level: skillsLevelField[0].value,\n        importance: skillsImportanceField[0].value\n      }; // console.log(newSkill);\n      // debugger\n      // let isNewSkill = true\n      // isNewSkill = skillsData.some(item => skillsField[0] === item.title[0])\n      // if(skillsData.length > 0 && isNewSkill) {\n      //     return\n      // }\n\n      dispatch(submitSkillFormHandler(newSkill));\n    }\n  },\n  submitLanguageFormHandler: (languageField, languageLevelField, languageImportanceField, languagesData) => {\n    let newLanguage = {\n      id: languageField[0].id,\n      title: languageField[0].value,\n      level: languageLevelField[0].value,\n      importance: languageImportanceField[0].value\n    };\n    dispatch(submitLanguageFormHandler(newLanguage));\n  },\n  fetchDataIfNeeded: () => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n    instance.get(SKILLS_URL).then(res => {\n      dispatch(saveUpdatedSkillTitle(res.data.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  },\n  recommendedSkillActiveHandler: value => {\n    let data = {\n      value: value.title,\n      placeholder: value.title,\n      id: value.id\n    };\n    let level = {\n      value: value.level,\n      label: value.level\n    };\n    let importance = {\n      value: value.importance,\n      label: value.importance\n    };\n    dispatch(selectFieldChangeHandler('skillsField', data.value));\n    dispatch(selectFieldChangeHandler('skillsLevelField', level));\n    dispatch(selectFieldChangeHandler('skillsImportanceField', importance)); // dispatch(recommendedSkillActiveHandler(value));\n  },\n  removeSkillHandler: value => {\n    dispatch(removeSkillHandler(value));\n  },\n  removeLanguageHandler: value => {\n    dispatch(removeLanguageHandler(value));\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  submitSkillFormHandler: () => {\n    dispatchProps.submitSkillFormHandler(stateProps.fields.skillsField.value, stateProps.fields.skillsLevelField.value, stateProps.fields.skillsImportanceField.value, stateProps.skillsDat, stateProps.fields.skillsFieldid.value);\n  },\n  submitLanguageFormHandler: () => {\n    dispatchProps.submitLanguageFormHandler(stateProps.fields.languageField.value, stateProps.fields.languageLevelField.value, stateProps.fields.languageImportanceField.value, stateProps.languagesData);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AdditionalInfoMetaFields);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/AdditionalInfo/MetaFields/container.js"],"names":["connect","AdditionalInfoMetaFields","textFieldChangeHandler","selectFieldChangeHandler","submitSkillFormHandler","saveUpdatedSkillTitle","submitLanguageFormHandler","submitRecommenedSkillFormHandler","recommendedSkillActiveHandler","removeSkillHandler","removeLanguageHandler","instance","SKILLS_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","mapStateToProps","state","fields","ADDITIONALINFO","forms","additionalinfoForm","skillsData","data","languagesData","recommendedSkills","mapDispatchToProps","dispatch","props","item","recommendedSkill","id","title","level","importance","console","log","name","e","value","skillsField","skillsLevelField","skillsImportanceField","skillsFieldid","newSkill","languageField","languageLevelField","languageImportanceField","newLanguage","fetchDataIfNeeded","get","then","res","catch","error","placeholder","label","mergeProps","stateProps","dispatchProps","ownProps","skillsDat"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport AdditionalInfoMetaFields from \"./component\";\r\nimport {\r\n    textFieldChangeHandler,\r\n    selectFieldChangeHandler,\r\n    submitSkillFormHandler,\r\n    saveUpdatedSkillTitle,\r\n    submitLanguageFormHandler,\r\n    submitRecommenedSkillFormHandler,\r\n    recommendedSkillActiveHandler,\r\n    removeSkillHandler,\r\n    removeLanguageHandler\r\n} from \"../actions\";\r\n\r\nimport instance, { SKILLS_URL } from \"../../../../../api/config\";\r\n\r\nimport {\r\n    handleLoadingSpinnerClose,\r\n    handleLoadingSpinnerOpenWithOptions\r\n} from \"../../../../common/ReduxBased/LoadingSpinner/actions\"\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    fields: state.ADDITIONALINFO.forms.additionalinfoForm.fields,\r\n    skillsData: state.ADDITIONALINFO.data.skillsData,\r\n    languagesData: state.ADDITIONALINFO.data.languagesData,\r\n    recommendedSkills: state.ADDITIONALINFO.data.recommendedSkills,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n\r\n    submitRecommenedSkillFormHandler : (item) =>{\r\n       \r\n        let recommendedSkill={\r\n            id: item.id,\r\n            title: item.title,\r\n            level:item.level,\r\n            importance:item.importance,\r\n        }\r\n        console.log(recommendedSkill);\r\n        dispatch(submitSkillFormHandler(recommendedSkill));\r\n    },\r\n\r\n    textFieldChangeHandler: (name, e) => {\r\n        if (typeof e.value !== \"string\") {\r\n            e.value = \"\";\r\n        }\r\n        dispatch(textFieldChangeHandler(name, e.value));\r\n    },\r\n    selectFieldChangeHandler: (name, e) => {\r\n        dispatch(selectFieldChangeHandler(name, e));\r\n    },\r\n    submitSkillFormHandler: (skillsField, skillsLevelField, skillsImportanceField, skillsData,skillsFieldid) => {\r\n      if (skillsField){\r\n        let newSkill = {\r\n            id: skillsField[0].id,\r\n            title: skillsField[0].value,\r\n            level: skillsLevelField[0].value,\r\n            importance: skillsImportanceField[0].value,\r\n        }\r\n        // console.log(newSkill);\r\n        // debugger\r\n        \r\n        // let isNewSkill = true\r\n        // isNewSkill = skillsData.some(item => skillsField[0] === item.title[0])\r\n\r\n        // if(skillsData.length > 0 && isNewSkill) {\r\n        //     return\r\n        // }\r\n        dispatch(submitSkillFormHandler(newSkill));\r\n    }\r\n    },\r\n    submitLanguageFormHandler: (languageField, languageLevelField, languageImportanceField, languagesData) => {\r\n        let newLanguage = {\r\n            id: languageField[0].id,\r\n            title: languageField[0].value,\r\n            level: languageLevelField[0].value,\r\n            importance: languageImportanceField[0].value,\r\n        }\r\n        dispatch(submitLanguageFormHandler(newLanguage));\r\n    },\r\n\r\n    fetchDataIfNeeded: () => {\r\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\r\n        instance.get(SKILLS_URL)\r\n        .then(res => {\r\n    \r\n            dispatch(saveUpdatedSkillTitle(res.data.data));\r\n            dispatch(handleLoadingSpinnerClose());\r\n        })\r\n        .catch(error => {\r\n            dispatch(handleLoadingSpinnerClose());\r\n        })\r\n    },\r\n\r\n    recommendedSkillActiveHandler: (value) => {\r\n        let data = {\r\n            value: value.title,\r\n            placeholder: value.title,\r\n            id: value.id\r\n        }\r\n        let level = {\r\n            value: value.level,\r\n            label: value.level\r\n        }\r\n        let importance = {\r\n            value: value.importance,\r\n            label: value.importance\r\n        }\r\n        dispatch(selectFieldChangeHandler('skillsField', data.value));\r\n        dispatch(selectFieldChangeHandler('skillsLevelField', level));\r\n        dispatch(selectFieldChangeHandler('skillsImportanceField', importance));\r\n        // dispatch(recommendedSkillActiveHandler(value));\r\n    },\r\n    removeSkillHandler: (value) => {\r\n        dispatch(removeSkillHandler(value));\r\n    },\r\n    removeLanguageHandler: (value) => {\r\n        dispatch(removeLanguageHandler(value));\r\n    }\r\n\r\n})\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\r\n    ...stateProps,\r\n    ...dispatchProps,\r\n    submitSkillFormHandler: () => {\r\n        dispatchProps.submitSkillFormHandler(stateProps.fields.skillsField.value, stateProps.fields.skillsLevelField.value, stateProps.fields.skillsImportanceField.value, stateProps.skillsDat,stateProps.fields.skillsFieldid.value)\r\n    },\r\n    submitLanguageFormHandler: () => {\r\n        dispatchProps.submitLanguageFormHandler(stateProps.fields.languageField.value, stateProps.fields.languageLevelField.value, stateProps.fields.languageImportanceField.value, stateProps.languagesData)\r\n    },\r\n    ...ownProps,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    mergeProps\r\n)(AdditionalInfoMetaFields);"]},"metadata":{},"sourceType":"module"}