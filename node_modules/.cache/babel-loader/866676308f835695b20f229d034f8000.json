{"ast":null,"code":"import axios from \"axios\";\nimport https from \"https\";\nimport { getAppStoreValue } from \"../components/common/Helpers\"; // Local Server\n// const BASE_HOST = 'localhost';\n// Localhost Server\n// const BASE_HOST = \"127.0.0.1\";\n// Dev Server\n\nexport const BASE_HOST = \"dev.specialisedjobs.com\"; // Quality Server\n// export const BASE_HOST = \"172.16.10.227\";\n\nexport const BASE_LOGIN_URL = \"https://\" + BASE_HOST + \"/\";\nexport const BASE_URL = \"https://\" + BASE_HOST + \"/jdbuilder/\";\nexport const BASE_URL_SQL = \"https://\" + BASE_HOST + \"/auth/\";\nexport const BASE_URL_COL = \"https://\" + BASE_HOST + \"/Collaboration/\";\nexport const ADMIN_URL = \"https://\" + BASE_HOST + \"/admin/\";\nexport const SKILLS_URL = \"https://dev.specialisedjobs.com/adminpanel/APTemplates/skills/\";\nconst headers = {\n  \"Content-Type\": \"application/JSON\",\n  \"Access-Control-Allow-Origin\": \"https://dev.specialisedjobs.com/\"\n};\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: headers // httpsAgent: agent,\n  // https: true\n\n});\ninstance.interceptors.request.use(function (request) {\n  // request.httpsAgent = new https.Agent({\n  //     rejectUnauthorized: false,\n  //     cert: file,\n  // });\n  let token = getAppStoreValue(\"access_token\").toString();\n\n  if (!!token) {\n    request.headers.authorization = `Bearer ${token}`;\n  } else {\n    request.config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n  } // Do something with response data\n\n\n  return request;\n}, function (error) {\n  // Do something with response error\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(function (response) {\n  try {\n    var res = JSON.parse(response.request.responseText.replace(/(\"[^\"]*\"\\s*:\\s*)(\\d{16,})/g, '$1\"$2\"'));\n    response.data.responseObj = res.responseObj;\n  } catch (e) {\n    console.log(\"Error Parsing json\", e);\n  }\n\n  return response;\n}, function (error) {\n  if (!!error.response) {\n    let status = error.response.status;\n\n    switch (status) {\n      case 401:\n        sessionStorage.setItem(\"isAuthenticated\", false);\n        sessionStorage.setItem(\"token\", \"\");\n        window.location.href = \"/login\";\n        break;\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/api/config.js"],"names":["axios","https","getAppStoreValue","BASE_HOST","BASE_LOGIN_URL","BASE_URL","BASE_URL_SQL","BASE_URL_COL","ADMIN_URL","SKILLS_URL","headers","instance","create","baseURL","interceptors","request","use","token","toString","authorization","config","error","Promise","reject","response","res","JSON","parse","responseText","replace","data","responseObj","e","console","log","status","sessionStorage","setItem","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,8BAA/B,C,CACA;AACA;AAEA;AACA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,yBAAlB,C,CAEP;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,aAAaD,SAAb,GAAyB,GAAhD;AACP,OAAO,MAAME,QAAQ,GAAG,aAAaF,SAAb,GAAyB,aAA1C;AACP,OAAO,MAAMG,YAAY,GAAG,aAAaH,SAAb,GAAyB,QAA9C;AACP,OAAO,MAAMI,YAAY,GAAG,aAAaJ,SAAb,GAAyB,iBAA9C;AACP,OAAO,MAAMK,SAAS,GAAG,aAAaL,SAAb,GAAyB,SAA3C;AACP,OAAO,MAAMM,UAAU,GAAG,gEAAnB;AAEP,MAAMC,OAAO,GAAG;AACZ,kBAAgB,kBADJ;AAEZ,iCAA+B;AAFnB,CAAhB;AAKA,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAER,QADiB;AAE1BK,EAAAA,OAAO,EAAEA,OAFiB,CAG1B;AACA;;AAJ0B,CAAb,CAAjB;AAQAC,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACI,UAAUD,OAAV,EAAmB;AACf;AACA;AACA;AACA;AACA,MAAIE,KAAK,GAAGf,gBAAgB,CAAC,cAAD,CAAhB,CAAiCgB,QAAjC,EAAZ;;AACA,MAAI,CAAC,CAACD,KAAN,EAAa;AACTF,IAAAA,OAAO,CAACL,OAAR,CAAgBS,aAAhB,GAAiC,UAASF,KAAM,EAAhD;AACH,GAFD,MAEO;AACHF,IAAAA,OAAO,CAACK,MAAR,GAAiB;AAAEV,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAjB;AACH,GAVc,CAWf;;;AACA,SAAOK,OAAP;AACH,CAdL,EAeI,UAAUM,KAAV,EAAiB;AACb;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAlBL;AAqBAV,QAAQ,CAACG,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CACI,UAAUQ,QAAV,EAAoB;AAChB,MAAI;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACT,OAAT,CAAiBa,YAAjB,CAA8BC,OAA9B,CAAsC,4BAAtC,EAAoE,QAApE,CAAX,CAAV;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,GAA4BN,GAAG,CAACM,WAAhC;AACH,GAHD,CAIA,OAAOC,CAAP,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,CAAlC;AACH;;AAGD,SAAOR,QAAP;AACH,CAZL,EAaI,UAAUH,KAAV,EAAiB;AACb,MAAI,CAAC,CAACA,KAAK,CAACG,QAAZ,EAAsB;AAClB,QAAIW,MAAM,GAAGd,KAAK,CAACG,QAAN,CAAeW,MAA5B;;AACA,YAAQA,MAAR;AACI,WAAK,GAAL;AACIC,QAAAA,cAAc,CAACC,OAAf,CAAuB,iBAAvB,EAA0C,KAA1C;AACAD,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgC,EAAhC;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA;AALR;AAOH;;AACD,SAAOlB,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAzBL;AA4BA,eAAeV,QAAf","sourcesContent":["import axios from \"axios\";\nimport https from \"https\";\nimport {getAppStoreValue} from \"../components/common/Helpers\";\n// Local Server\n// const BASE_HOST = 'localhost';\n\n// Localhost Server\n// const BASE_HOST = \"127.0.0.1\";\n\n// Dev Server\nexport const BASE_HOST = \"dev.specialisedjobs.com\";\n\n// Quality Server\n// export const BASE_HOST = \"172.16.10.227\";\n\nexport const BASE_LOGIN_URL = \"https://\" + BASE_HOST + \"/\";\nexport const BASE_URL = \"https://\" + BASE_HOST + \"/jdbuilder/\";\nexport const BASE_URL_SQL = \"https://\" + BASE_HOST + \"/auth/\";\nexport const BASE_URL_COL = \"https://\" + BASE_HOST + \"/Collaboration/\";\nexport const ADMIN_URL = \"https://\" + BASE_HOST + \"/admin/\";\nexport const SKILLS_URL  =\"https://dev.specialisedjobs.com/adminpanel/APTemplates/skills/\"\n\nconst headers = {\n    \"Content-Type\": \"application/JSON\",\n    \"Access-Control-Allow-Origin\": \"https://dev.specialisedjobs.com/\",\n};\n\nconst instance = axios.create({\n    baseURL: BASE_URL,\n    headers: headers,\n    // httpsAgent: agent,\n    // https: true\n});\n\n\ninstance.interceptors.request.use(\n    function (request) {\n        // request.httpsAgent = new https.Agent({\n        //     rejectUnauthorized: false,\n        //     cert: file,\n        // });\n        let token = getAppStoreValue(\"access_token\").toString();\n        if (!!token) {\n            request.headers.authorization = `Bearer ${token}`;\n        } else {\n            request.config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n        }\n        // Do something with response data\n        return request;\n    },\n    function (error) {\n        // Do something with response error\n        return Promise.reject(error);\n    }\n);\n\ninstance.interceptors.response.use(\n    function (response) {\n        try {\n            var res = JSON.parse(response.request.responseText.replace(/(\"[^\"]*\"\\s*:\\s*)(\\d{16,})/g, '$1\"$2\"'))\n            response.data.responseObj = res.responseObj;\n        }\n        catch (e) {\n            console.log(\"Error Parsing json\", e);\n        }\n\n\n        return response;\n    },\n    function (error) {\n        if (!!error.response) {\n            let status = error.response.status;\n            switch (status) {\n                case 401:\n                    sessionStorage.setItem(\"isAuthenticated\", false);\n                    sessionStorage.setItem(\"token\", \"\");\n                    window.location.href = \"/login\";\n                    break;\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}