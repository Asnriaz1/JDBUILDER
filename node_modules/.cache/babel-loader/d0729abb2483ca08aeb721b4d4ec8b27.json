{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Dashboard\\\\AboutCompany\\\\CompanySettings\\\\General\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport CustomTextValidator from \"../../../../../common/ReduxBased/CustomTextValidator/component\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\n\nclass CompanySettingGeneral extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n\n    this.SubmitHandler = () => {\n      this.props.saveCompanyGeneralInfo();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      textFieldChangeHandler,\n      fields,\n      generalInfoMessage\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.companygeneralwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: this.SubmitHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fieldwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.NameField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.NameField.placeholder,\n      name: fields.NameField.name,\n      value: fields.NameField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.NameField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: \"textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fieldwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.NumberField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.NumberField.placeholder,\n      name: fields.NumberField.name,\n      value: fields.NumberField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.NumberField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: \"textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fieldwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.CountryField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.CountryField.placeholder,\n      name: fields.CountryField.name,\n      value: fields.CountryField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.CountryField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: \"textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fieldwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.ProvinceField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.ProvinceField.placeholder,\n      name: fields.ProvinceField.name,\n      value: fields.ProvinceField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.ProvinceField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: \"textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fieldwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.CityField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.CityField.placeholder,\n      name: fields.CityField.name,\n      value: fields.CityField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.CityField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: \"textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), generalInfoMessage ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.infomessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, generalInfoMessage)) : \"\", React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      className: \"submitbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"UPDATE\"))))));\n  }\n\n}\n\nexport default withStyles(styles)(CompanySettingGeneral);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/AboutCompany/CompanySettings/General/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","CustomTextValidator","ValidatorForm","CompanySettingGeneral","componentDidMount","props","fetchDataIfNeeded","SubmitHandler","saveCompanyGeneralInfo","render","classes","textFieldChangeHandler","fields","generalInfoMessage","companygeneralwrapper","NameField","name","placeholder","value","NumberField","CountryField","ProvinceField","CityField","infomessage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport CustomTextValidator from \"../../../../../common/ReduxBased/CustomTextValidator/component\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\n\nclass CompanySettingGeneral extends Component {\n\n    componentDidMount = () => {\n        this.props.fetchDataIfNeeded();\n    }\n\n    SubmitHandler = () => {\n        this.props.saveCompanyGeneralInfo();\n    }\n    render() {\n        const {\n            classes,\n            textFieldChangeHandler,\n            fields,\n            generalInfoMessage\n        } = this.props;\n        \n        return (\n            <>\n                <div className={classes.companygeneralwrapper}>\n                    <ValidatorForm\n                        onSubmit={this.SubmitHandler}\n                        autoComplete=\"off\"\n                    >\n                       <Grid container>\n                           <Grid item xs={12}>\n                               <div className=\"fieldwrapper\">\n                                <CustomTextValidator\n                                    id={fields.NameField.name}\n                                    validations={true}\n                                    fullWidth={true}\n                                    type=\"text\"\n                                    placeholder={fields.NameField.placeholder}\n                                    name={fields.NameField.name}\n                                    value={fields.NameField.value}\n                                    onChange={value => {\n                                        textFieldChangeHandler(\n                                            fields.NameField.name,\n                                            value\n                                        );\n                                    }}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    className=\"textfield\"\n                                />\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                               <div className=\"fieldwrapper\">\n                                <CustomTextValidator\n                                    id={fields.NumberField.name}\n                                    validations={true}\n                                    fullWidth={true}\n                                    type=\"text\"\n                                    placeholder={fields.NumberField.placeholder}\n                                    name={fields.NumberField.name}\n                                    value={fields.NumberField.value}\n                                    onChange={value => {\n                                        textFieldChangeHandler(\n                                            fields.NumberField.name,\n                                            value\n                                        );\n                                    }}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    className=\"textfield\"\n                                />\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={12} md={4}>\n                               <div className=\"fieldwrapper\">\n                               <CustomTextValidator\n                                    id={fields.CountryField.name}\n                                    validations={true}\n                                    fullWidth={true}\n                                    type=\"text\"\n                                    placeholder={fields.CountryField.placeholder}\n                                    name={fields.CountryField.name}\n                                    value={fields.CountryField.value}\n                                    onChange={value => {\n                                        textFieldChangeHandler(\n                                            fields.CountryField.name,\n                                            value\n                                        );\n                                    }}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    className=\"textfield\"\n                                />\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={12} md={4}>\n                               <div className=\"fieldwrapper\">\n                               <CustomTextValidator\n                                    id={fields.ProvinceField.name}\n                                    validations={true}\n                                    fullWidth={true}\n                                    type=\"text\"\n                                    placeholder={fields.ProvinceField.placeholder}\n                                    name={fields.ProvinceField.name}\n                                    value={fields.ProvinceField.value}\n                                    onChange={value => {\n                                        textFieldChangeHandler(\n                                            fields.ProvinceField.name,\n                                            value\n                                        );\n                                    }}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    className=\"textfield\"\n                                />\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={12} md={4}>\n                               <div className=\"fieldwrapper\">\n                               <CustomTextValidator\n                                    id={fields.CityField.name}\n                                    validations={true}\n                                    fullWidth={true}\n                                    type=\"text\"\n                                    placeholder={fields.CityField.placeholder}\n                                    name={fields.CityField.name}\n                                    value={fields.CityField.value}\n                                    onChange={value => {\n                                        textFieldChangeHandler(\n                                            fields.CityField.name,\n                                            value\n                                        );\n                                    }}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    className=\"textfield\"\n                                />\n                                </div>\n                            </Grid>\n\n                            {\n                                generalInfoMessage ? \n                                <Grid item xs={12}>\n                                    <span className={classes.infomessage}>{generalInfoMessage}</span>\n                                </Grid> : \"\"\n                            }\n\n                            <Grid item xs={12}>\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"submitbtn\">UPDATE</Button>\n                            </Grid>\n                        </Grid>\n                    </ValidatorForm>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(CompanySettingGeneral);"]},"metadata":{},"sourceType":"module"}