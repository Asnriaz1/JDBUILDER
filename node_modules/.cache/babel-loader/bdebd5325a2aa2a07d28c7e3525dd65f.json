{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\JobOpening\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport JobOpeningMetaFields from \"./MetaFields/container\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport AlertDialog from \"../../../common/ReduxBased/confirmationDialog/container\";\nimport Login from \"../../../Login/container\";\nimport CollaboratorAndPreview from \"../CollaboratorAndPreview/container\";\nimport { getAppStoreValue } from \"../../../common/Helpers\";\nimport ls from 'local-storage';\n\nclass JobOpening extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      const userId = ls.get('userId');\n      const userName = getAppStoreValue('nameTitle');\n      let isLogin = userId && userName ? true : false;\n\n      if (isLogin) {\n        this.props.getJobCode();\n      }\n\n      this.props.fetchDataSuggestedTemplate();\n    };\n\n    this.SubmitHandler = () => {\n      this.props.history.push('/create/info');\n      this.props.headerPathActiveHandler(0);\n    };\n\n    this.saveJobOpening = () => {\n      let data = {\n        jobTitle: this.props.jobTitle,\n        industryField: this.props.industryField,\n        functionField: this.props.functionField,\n        employmenTypeField: this.props.employmenTypeField,\n        minYearField: this.props.minYearField,\n        maxYearField: this.props.maxYearField,\n        positionField: this.props.positionField,\n        AddressField: this.props.AddressField,\n        QualificationField: this.props.QualificationField,\n        remoteWorkingField: this.props.remoteWorkingField,\n        showSalaryField: this.props.showSalaryField,\n        salaryTypeField: this.props.salaryTypeField,\n        hourlyMaxRateField: this.props.hourlyMaxRateField,\n        monthlySalaryRangField: this.props.monthlySalaryRangField,\n        monthlyCurrencyField: this.props.monthlyCurrencyField,\n        yearlySalaryRangField: this.props.yearlySalaryRangField,\n        yearlyCurrencyField: this.props.yearlyCurrencyField,\n        roleData: this.props.roleData\n      };\n      axios.post(BASE_URL + '', data);\n      console.log(data);\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      headerPathActiveHandler,\n      isLogin\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.jobopeningwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CollaboratorAndPreview, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ValidatorForm, {\n      onSubmit: this.SubmitHandler // autoComplete=\"off\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(JobOpeningMetaFields, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), isLogin ? React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.saveJobOpening,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Save & Next\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Next\"))));\n  }\n\n}\n\nexport default withStyles(styles)(withRouter(JobOpening));","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/JobOpening/component.js"],"names":["React","Component","styles","withStyles","Button","AddIcon","JobOpeningMetaFields","ValidatorForm","NavLink","withRouter","AlertDialog","Login","CollaboratorAndPreview","getAppStoreValue","ls","JobOpening","componentDidMount","userId","get","userName","isLogin","props","getJobCode","fetchDataSuggestedTemplate","SubmitHandler","history","push","headerPathActiveHandler","saveJobOpening","data","jobTitle","industryField","functionField","employmenTypeField","minYearField","maxYearField","positionField","AddressField","QualificationField","remoteWorkingField","showSalaryField","salaryTypeField","hourlyMaxRateField","monthlySalaryRangField","monthlyCurrencyField","yearlySalaryRangField","yearlyCurrencyField","roleData","axios","post","BASE_URL","console","log","render","classes","jobopeningwrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport JobOpeningMetaFields from \"./MetaFields/container\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport AlertDialog from \"../../../common/ReduxBased/confirmationDialog/container\";\r\nimport Login from \"../../../Login/container\";\r\nimport CollaboratorAndPreview from \"../CollaboratorAndPreview/container\";\r\nimport { getAppStoreValue } from \"../../../common/Helpers\";\r\nimport ls from 'local-storage';\r\n\r\nclass JobOpening extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const userId = ls.get('userId');\r\n        const userName = getAppStoreValue('nameTitle')\r\n        let isLogin = userId && userName ? true : false\r\n        if (isLogin) {\r\n            this.props.getJobCode();\r\n        }\r\n        this.props.fetchDataSuggestedTemplate();\r\n    }\r\n\r\n    SubmitHandler = () => {\r\n        this.props.history.push('/create/info');\r\n        this.props.headerPathActiveHandler(0);\r\n    }\r\n    saveJobOpening =() =>{\r\n        let data={\r\n            jobTitle:this.props.jobTitle,\r\n            industryField:this.props.industryField,\r\n            functionField:this.props.functionField,\r\n            employmenTypeField:this.props.employmenTypeField,\r\n            minYearField:this.props.minYearField,\r\n            maxYearField:this.props.maxYearField,\r\n            positionField:this.props.positionField,\r\n            AddressField:this.props.AddressField,\r\n            QualificationField:this.props.QualificationField,\r\n            remoteWorkingField:this.props.remoteWorkingField,\r\n            showSalaryField:this.props.showSalaryField,\r\n            salaryTypeField:this.props.salaryTypeField,\r\n            hourlyMaxRateField:this.props.hourlyMaxRateField,\r\n            monthlySalaryRangField:this.props.monthlySalaryRangField,\r\n            monthlyCurrencyField:this.props.monthlyCurrencyField,\r\n            yearlySalaryRangField:this.props.yearlySalaryRangField,\r\n            yearlyCurrencyField:this.props.yearlyCurrencyField,\r\n            roleData:this.props.roleData,\r\n        }\r\n\r\n        axios.post(BASE_URL+'', data)\r\n\r\n        console.log(data);\r\n    }\r\n    render() {\r\n        const {\r\n            classes,\r\n            headerPathActiveHandler,\r\n            isLogin\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.jobopeningwrapper}>\r\n\r\n                    <CollaboratorAndPreview />\r\n\r\n                    <ValidatorForm\r\n                        onSubmit={this.SubmitHandler}\r\n                    // autoComplete=\"off\"\r\n                    >\r\n                        <JobOpeningMetaFields />\r\n\r\n                        {/* <NavLink\r\n                            to=\"/create/info\"\r\n                            className={classes.jdbuildingnextbtn}\r\n                            onClick={() => headerPathActiveHandler(0)}\r\n                        > */}\r\n                        {isLogin  ?\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.saveJobOpening}>\r\n                                Save & Next\r\n                            </Button>\r\n                            :\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                Next\r\n                            </Button>\r\n                        }\r\n                        {/* </NavLink> */}\r\n                    </ValidatorForm>\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(JobOpening));"]},"metadata":{},"sourceType":"module"}