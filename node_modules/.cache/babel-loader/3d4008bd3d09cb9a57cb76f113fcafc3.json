{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\CollaboratorAndPreview\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AlertDialog from \"../../../common/ReduxBased/confirmationDialog/container\";\nimport Login from \"../../../Login/container\";\nimport { getAppStoreValue } from \"../../../common/Helpers\";\nimport AddCollaboration from \"./AddCollaboration/container\";\nimport ls from \"local-storage\";\nimport Preview from \"../Preview/container\";\n\nclass CollaboratorAndPreview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showAlertDialog = value => {\n      this.setState({\n        open: value\n      });\n    };\n\n    this.showLoginAlertDialog = value => {\n      this.setState({\n        loginOpen: value\n      });\n    };\n\n    this.showLoginAlertDialogAndSend = () => {\n      this.setState({\n        loginOpen: false\n      });\n      this.props.sendCollaboration();\n    };\n\n    this.state = {\n      open: false,\n      loginOpen: false\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      addedCollaborator\n    } = this.props;\n    const userId = ls.get('userId');\n    const userName = getAppStoreValue('nameTitle');\n    let isLogin = userId && userName ? true : true;\n    return React.createElement(React.Fragment, null, React.createElement(AlertDialog, {\n      customClass: classes.removeSubActionMainDialog,\n      maxWidth: isLogin ? 'md' : 'sm',\n      open: this.state.loginOpen,\n      showTitle: true,\n      title: isLogin ? \"Job Description Manager\" : \"Login\",\n      message: isLogin ? React.createElement(AddCollaboration, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        isPopup: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      applyButtonText: \"Send\",\n      hideApplyButton: addedCollaborator.Collab_email ? false : true,\n      cancelAlertDialog: () => this.showLoginAlertDialog(false),\n      closeAlertDialog: () => this.showLoginAlertDialog(false),\n      applyAlertDialog: () => this.showLoginAlertDialogAndSend(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(AlertDialog, {\n      customClass: classes.removeSubActionMainDialog,\n      maxWidth: isLogin ? 'md' : 'xs',\n      open: this.state.open,\n      showTitle: true,\n      title: \"JD Preivew\",\n      message: isLogin ? React.createElement(Preview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) : \"Please Login to Preview JD\",\n      applyButtonText: \"Done\",\n      hideApplyButton: true,\n      cancelAlertDialog: () => this.showAlertDialog(false),\n      closeAlertDialog: () => this.showAlertDialog(false),\n      applyAlertDialog: () => this.showAlertDialog(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"actionbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.searchsubmitbtn,\n      onClick: () => this.showLoginAlertDialog(true),\n      startIcon: React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add Collaborators\"), React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.searchsubmitbtn,\n      onClick: () => this.showAlertDialog(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Preview\")));\n  }\n\n}\n\nexport default withStyles(styles)(CollaboratorAndPreview);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/component.js"],"names":["React","Component","styles","withStyles","Button","AddIcon","AlertDialog","Login","getAppStoreValue","AddCollaboration","ls","Preview","CollaboratorAndPreview","constructor","props","showAlertDialog","value","setState","open","showLoginAlertDialog","loginOpen","showLoginAlertDialogAndSend","sendCollaboration","state","render","classes","addedCollaborator","userId","get","userName","isLogin","removeSubActionMainDialog","Collab_email","searchsubmitbtn"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AlertDialog from \"../../../common/ReduxBased/confirmationDialog/container\";\nimport Login from \"../../../Login/container\";\nimport {getAppStoreValue} from \"../../../common/Helpers\";\nimport AddCollaboration from \"./AddCollaboration/container\";\nimport ls from \"local-storage\";\nimport Preview from \"../Preview/container\";\n\nclass CollaboratorAndPreview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            loginOpen: false,\n        }\n    }\n\n    showAlertDialog = (value) => {\n        this.setState({\n            open: value\n        })\n    }\n\n    showLoginAlertDialog = (value) => {\n        this.setState({\n            loginOpen: value\n        })\n    }\n\n    showLoginAlertDialogAndSend = () => {\n        this.setState({\n            loginOpen: false\n        })\n        this.props.sendCollaboration();\n    }\n    render() {\n        const {\n            classes,\n            addedCollaborator\n        } = this.props;\n        const userId = ls.get('userId');\n        const userName = getAppStoreValue('nameTitle')\n        let isLogin = userId && userName ? true : true\n        return (\n            <>\n                    <AlertDialog\n                        customClass={classes.removeSubActionMainDialog}\n                        maxWidth={isLogin ? 'md' : 'sm'}\n                        open={this.state.loginOpen}\n                        showTitle={true}\n                        title={isLogin ? \"Job Description Manager\" : \"Login\"}\n                        message={isLogin ? <AddCollaboration /> : <Login isPopup={true} />}\n                        applyButtonText={\"Send\"}\n                        hideApplyButton={addedCollaborator.Collab_email ? false : true}\n                        cancelAlertDialog={() => this.showLoginAlertDialog(false)}\n                        closeAlertDialog={() => this.showLoginAlertDialog(false)}\n                        applyAlertDialog={() => this.showLoginAlertDialogAndSend(false)}\n                    />\n\n                    <AlertDialog\n                        customClass={classes.removeSubActionMainDialog}\n                        maxWidth={isLogin ? 'md' : 'xs'}\n                        open={this.state.open}\n                        showTitle={true}\n                        title=\"JD Preivew\"\n                        message={isLogin ? <Preview /> : \"Please Login to Preview JD\"}\n                        applyButtonText={\"Done\"}\n                        hideApplyButton={true}\n                        cancelAlertDialog={() => this.showAlertDialog(false)}\n                        closeAlertDialog={() => this.showAlertDialog(false)}\n                        applyAlertDialog={() => this.showAlertDialog(false)}\n                    />\n                    \n                    <div className=\"actionbtn\">\n                        <Button variant=\"outlined\" className={classes.searchsubmitbtn} onClick={() => this.showLoginAlertDialog(true)} startIcon={<AddIcon />} >\n                            Add Collaborators\n                        </Button>\n                        <Button variant=\"outlined\" className={classes.searchsubmitbtn} onClick={() => this.showAlertDialog(true)}>\n                            Preview\n                        </Button>\n                    </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(CollaboratorAndPreview);"]},"metadata":{},"sourceType":"module"}