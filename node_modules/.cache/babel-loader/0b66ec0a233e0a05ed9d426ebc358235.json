{"ast":null,"code":"import { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { connect } from \"react-redux\";\nimport JobSummary from \"./component\";\nimport { headerPathActiveHandler, pathChangeHandler } from \"../actions\";\nimport { submitTemplateHandler, fetchDataSummary, loginandSubmitTemplateHandler, showLoginPopupHandler } from \"./actions\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n  templateId: state.JDLANDING.data.templateId,\n  fields: state.LOGIN.forms.loginForm.fields,\n  login: state.JOBSUMMARY.UISettings.login,\n  selectedSkills: state.ADDITIONALINFO.data.skillsData,\n  selectedLanguages: state.ADDITIONALINFO.data.languagesData,\n  jobOpeningFields: state.JOBOPENING.forms.jobOpeningForm.fields,\n  rolesResHTMLData: state.JOBOPENING.data.rolesResHTMLData,\n  rawContentSummaryAsHTML: state.JOBSUMMARY.data.rawContentSummaryAsHTML\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  submitbutton: (val, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n    debugger;\n    dispatch(headerPathActiveHandler(val));\n    dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n  },\n  headerPathActiveHandler: val => {\n    dispatch(headerPathActiveHandler(val));\n    dispatch(pathChangeHandler(\"/create/advertise\"));\n  },\n  submitTemplateHandler: (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n    dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n  },\n  loginandSubmitTemplateHandler: (EmailField, PasswordField, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n    let data = {\n      \"Email\": EmailField,\n      \"Password\": PasswordField,\n      \"FromJD\": true\n    };\n    dispatch(loginandSubmitTemplateHandler(data, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n  },\n  fetchDataSummary: templateId => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Summary...\", \"large\"));\n    let savedTempId = ls.get('suggestedTempId');\n    let paramVal = templateId ? templateId : savedTempId;\n    instance.get(BASE_URL + 'Templates?templateId=' + paramVal + '&sectionId=TS3').then(res => {\n      dispatch(fetchDataSummary(res.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  },\n  showLoginPopupHandler: value => {\n    dispatch(showLoginPopupHandler(value));\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  fetchDataSummary: () => {\n    dispatchProps.fetchDataSummary(stateProps.templateId);\n  },\n  loginandSubmitTemplateHandler: () => {\n    dispatchProps.loginandSubmitTemplateHandler(stateProps.fields.EmailField.value, stateProps.fields.PasswordField.value, stateProps.templateId, stateProps.selectedSkills, stateProps.selectedLanguages, stateProps.jobOpeningFields.industryField.value, stateProps.jobOpeningFields.functionField.value, stateProps.rolesResHTMLData, stateProps.rawContentSummaryAsHTML);\n  },\n  submitTemplateHandler: () => {\n    dispatchProps.submitTemplateHandler(stateProps.templateId, stateProps.selectedSkills, stateProps.selectedLanguages, stateProps.jobOpeningFields.industryField.value, stateProps.jobOpeningFields.functionField.value, stateProps.rolesResHTMLData, stateProps.rawContentSummaryAsHTML);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(JobSummary);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Summary/container.js"],"names":["handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","connect","JobSummary","headerPathActiveHandler","pathChangeHandler","submitTemplateHandler","fetchDataSummary","loginandSubmitTemplateHandler","showLoginPopupHandler","instance","BASE_URL","ls","mapStateToProps","state","templateId","JDLANDING","data","fields","LOGIN","forms","loginForm","login","JOBSUMMARY","UISettings","selectedSkills","ADDITIONALINFO","skillsData","selectedLanguages","languagesData","jobOpeningFields","JOBOPENING","jobOpeningForm","rolesResHTMLData","rawContentSummaryAsHTML","mapDispatchToProps","dispatch","props","submitbutton","val","JOindustryField","JOfunctionField","EmailField","PasswordField","savedTempId","get","paramVal","then","res","catch","error","value","mergeProps","stateProps","dispatchProps","ownProps","industryField","functionField"],"mappings":"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","sourcesContent":["import {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { connect } from \"react-redux\";\nimport JobSummary from \"./component\";\nimport {\n    headerPathActiveHandler,\n    pathChangeHandler\n} from \"../actions\";\nimport {\n    submitTemplateHandler,\n    fetchDataSummary,\n    loginandSubmitTemplateHandler,\n    showLoginPopupHandler\n} from \"./actions\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport ls from 'local-storage'\n\nconst mapStateToProps = state => ({\n    templateId: state.JDLANDING.data.templateId,\n    fields: state.LOGIN.forms.loginForm.fields,\n    login: state.JOBSUMMARY.UISettings.login,\n    selectedSkills: state.ADDITIONALINFO.data.skillsData,\n    selectedLanguages: state.ADDITIONALINFO.data.languagesData,\n    jobOpeningFields: state.JOBOPENING.forms.jobOpeningForm.fields,\n    rolesResHTMLData: state.JOBOPENING.data.rolesResHTMLData,\n    rawContentSummaryAsHTML: state.JOBSUMMARY.data.rawContentSummaryAsHTML\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n\n    submitbutton :(val,templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) =>{\n       debugger\n        dispatch(headerPathActiveHandler(val));\n        dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n\n    },\n    headerPathActiveHandler: (val) => {\n        dispatch(headerPathActiveHandler(val));\n        dispatch(pathChangeHandler(\"/create/advertise\"))\n    },\n    submitTemplateHandler: (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n        dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n    },\n    loginandSubmitTemplateHandler: (EmailField, PasswordField, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n        let data = {\n            \"Email\": EmailField,\n            \"Password\": PasswordField,\n            \"FromJD\": true\n    }\n        dispatch(loginandSubmitTemplateHandler(data, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n    },\n    fetchDataSummary: (templateId) => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Summary...\", \"large\"));\n        let savedTempId = ls.get('suggestedTempId')\n        let paramVal = templateId ? templateId : savedTempId\n\n        instance.get(BASE_URL+'Templates?templateId='+paramVal+'&sectionId=TS3')\n        .then(res => {\n            dispatch(fetchDataSummary(res.data));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    },\n    showLoginPopupHandler: (value) => {\n        dispatch(showLoginPopupHandler(value));\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    fetchDataSummary: () => {\n        dispatchProps.fetchDataSummary(stateProps.templateId);\n    },\n    loginandSubmitTemplateHandler: () => {\n        dispatchProps.loginandSubmitTemplateHandler(stateProps.fields.EmailField.value, stateProps.fields.PasswordField.value,\n            stateProps.templateId,\n            stateProps.selectedSkills,\n            stateProps.selectedLanguages,\n            stateProps.jobOpeningFields.industryField.value,\n            stateProps.jobOpeningFields.functionField.value,\n            stateProps.rolesResHTMLData,\n            stateProps.rawContentSummaryAsHTML)\n    },\n    submitTemplateHandler: () => {\n        dispatchProps.submitTemplateHandler(stateProps.templateId, stateProps.selectedSkills, stateProps.selectedLanguages,\n            stateProps.jobOpeningFields.industryField.value,\n            stateProps.jobOpeningFields.functionField.value,\n            stateProps.rolesResHTMLData,\n            stateProps.rawContentSummaryAsHTML)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(JobSummary);"]},"metadata":{},"sourceType":"module"}