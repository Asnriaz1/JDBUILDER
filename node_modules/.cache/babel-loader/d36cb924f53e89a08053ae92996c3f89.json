{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{styles}from\"./styles\";import{withStyles}from\"@material-ui/core/styles\";import{Button,Grid}from\"@material-ui/core\";import{ValidatorForm}from\"react-material-ui-form-validator\";import CustomTextValidator from\"./../common/ReduxBased/CustomTextValidator/component\";import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';import{Redirect,NavLink}from\"react-router-dom\";var LoginPage=/*#__PURE__*/function(_Component){_inherits(LoginPage,_Component);function LoginPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,LoginPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.SubmitHandler=function(){// window.location.replace(\"/candidate\")\n_this.props.submitFormHandler();};return _this;}_createClass(LoginPage,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,fields=_this$props.fields,textFieldChangeHandler=_this$props.textFieldChangeHandler,isLogin=_this$props.isLogin,isPopup=_this$props.isPopup,error=_this$props.error,submitandSaveBtn=_this$props.submitandSaveBtn;return isLogin?React.createElement(Redirect,{to:\"/user\"}):React.createElement(React.Fragment,null,React.createElement(\"div\",{className:isPopup?\"\":classes.polygonbg},React.createElement(Grid,{container:true,className:isPopup?\"\":classes.loginWrapper,justify:\"center\"},React.createElement(Grid,{item:true,xs:12,sm:12,md:isPopup?12:4,className:isPopup?\"\":classes.loginContainer},React.createElement(\"h1\",null,\"Log In \"),React.createElement(ValidatorForm,{onSubmit:submitandSaveBtn?submitandSaveBtn:this.SubmitHandler,autoComplete:\"off\"},React.createElement(CustomTextValidator,{id:fields.EmailField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.EmailField.placeholder,name:fields.EmailField.name,value:fields.EmailField.value,onChange:function onChange(value){textFieldChangeHandler(fields.EmailField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.loginfields}),React.createElement(CustomTextValidator,{id:fields.PasswordField.name,validations:true,fullWidth:true,type:\"password\",placeholder:fields.PasswordField.placeholder,name:fields.PasswordField.name,value:fields.PasswordField.value,onChange:function onChange(value){textFieldChangeHandler(fields.PasswordField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.loginfields}),error?React.createElement(\"span\",{className:classes.error},error):null,React.createElement(\"div\",{className:classes.passwordOptions},React.createElement(FormControlLabel,{className:classes.rememberMECheckbox,value:\"end\",control:React.createElement(Checkbox,{color:\"primary\"}),label:\"Remember me\",labelPlacement:\"end\"}),React.createElement(NavLink,{to:'/resetpassword',className:classes.forgetPassword},\"Forget your password\")),React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",className:classes.loginSubmitBtn},\"Login\"),React.createElement(\"div\",{className:classes.passwordOptions},React.createElement(\"p\",{className:classes.passwordOptionsLeft},\"Don't have account? \",React.createElement(\"a\",{href:\"/signup\"},\"Sign up\"),\" \")))),React.createElement(Grid,{item:true,sm:2}),React.createElement(Grid,{item:true,sm:6,className:\"dNoneRightLogin\"}))));}}]);return LoginPage;}(Component);export default withStyles(styles)(LoginPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Login/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","FormControlLabel","Checkbox","Redirect","NavLink","LoginPage","SubmitHandler","props","submitFormHandler","classes","fields","textFieldChangeHandler","isLogin","isPopup","error","submitandSaveBtn","polygonbg","loginWrapper","loginContainer","EmailField","name","placeholder","value","loginfields","PasswordField","passwordOptions","rememberMECheckbox","forgetPassword","loginSubmitBtn","passwordOptionsLeft"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Redirect, NavLink } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n    SubmitHandler = () => {\n        // window.location.replace(\"/candidate\")\n        this.props.submitFormHandler()\n    }\n\n    render() {\n        const { \n            classes,\n            fields,\n            textFieldChangeHandler, \n            isLogin, \n            isPopup,\n            error,\n            submitandSaveBtn\n        } = this.props;\n\n        return (\n            isLogin ? <Redirect to=\"/user\"/> :\n            <>\n            <div className={isPopup ? \"\" :classes.polygonbg}>\n                 <Grid container className={isPopup ? \"\" : classes.loginWrapper} justify=\"center\">\n                    <Grid item xs={12} sm={12} md={isPopup ? 12 : 4} className={isPopup ? \"\" : classes.loginContainer}>\n                        <h1  >Log In </h1>\n                        <ValidatorForm\n                        onSubmit={submitandSaveBtn ? submitandSaveBtn : this.SubmitHandler}\n                        autoComplete=\"off\"\n                        >\n\n                            <CustomTextValidator\n                                id={fields.EmailField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.EmailField.placeholder}\n                                name={fields.EmailField.name}\n                                value={fields.EmailField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.EmailField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.loginfields}\n                            />\n\n                            <CustomTextValidator\n                                id={fields.PasswordField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"password\"\n                                placeholder={fields.PasswordField.placeholder}\n                                name={fields.PasswordField.name}\n                                value={fields.PasswordField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.PasswordField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.loginfields}\n                            />\n                            {\n                                error ? <span className={classes.error}>{error}</span> : null\n                            }\n                              <div className={classes.passwordOptions}>\n                              <FormControlLabel className={classes.rememberMECheckbox}\n                                value=\"end\"\n                                control={<Checkbox color=\"primary\" />}\n                                label=\"Remember me\"\n                                labelPlacement=\"end\"\n                                />\n                            <NavLink to={'/resetpassword'} className={classes.forgetPassword}>Forget your password</NavLink>\n\n                            \n                        </div>\n\n                           \n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.loginSubmitBtn} >\n                                Login\n                            </Button>\n                            <div className={classes.passwordOptions}>\n                                <p className={classes.passwordOptionsLeft}>Don't have account? <a href=\"/signup\">Sign up</a> </p>\n                        </div>\n                        </ValidatorForm>\n                    </Grid>\n                    <Grid item sm={2}>\n                    </Grid>\n                    <Grid item sm={6} className=\"dNoneRightLogin\">\n                    </Grid>\n                  \n                </Grid>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(LoginPage);"]},"metadata":{},"sourceType":"module"}