{"ast":null,"code":"import { connect } from \"react-redux\";\nimport CvPreview from \"./component\";\nimport instance, { BASE_URL } from \"../../../../../api/config\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { saveProfileData } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  profileData: state.ADVERTISE.data.profileData\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  fetchDataIfNeeded: id => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Profile...\", \"large\"));\n    instance.get(BASE_URL + 'User/AdvertisePage/CandidateProfile?guid=' + id).then(res => {\n      dispatch(saveProfileData(res.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  fetchDataIfNeeded: () => {\n    dispatchProps.fetchDataIfNeeded(ownProps.userid);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(CvPreview);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Advertise/Profile/container.js"],"names":["connect","CvPreview","instance","BASE_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","saveProfileData","mapStateToProps","state","profileData","ADVERTISE","data","mapDispatchToProps","dispatch","props","fetchDataIfNeeded","id","get","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps","userid"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,2BAAnC;AACA,SACIC,yBADJ,EAEIC,mCAFJ,QAGO,sDAHP;AAIA,SACIC,eADJ,QAEO,YAFP;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBF;AADJ,CAAL,CAA7B;;AAIA,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7CC,EAAAA,iBAAiB,EAAGC,EAAD,IAAQ;AACvBH,IAAAA,QAAQ,CAACR,mCAAmC,CAAC,IAAD,EAAO,oBAAP,EAA6B,OAA7B,CAApC,CAAR;AAEAH,IAAAA,QAAQ,CAACe,GAAT,CAAad,QAAQ,GAAC,2CAAT,GAAqDa,EAAlE,EACCE,IADD,CACMC,GAAG,IAAI;AACTN,MAAAA,QAAQ,CAACP,eAAe,CAACa,GAAG,CAACR,IAAL,CAAhB,CAAR;AACAE,MAAAA,QAAQ,CAACT,yBAAyB,EAA1B,CAAR;AACH,KAJD,EAKCgB,KALD,CAKOC,KAAK,IAAI;AACZR,MAAAA,QAAQ,CAACT,yBAAyB,EAA1B,CAAR;AACH,KAPD;AAQH;AAZ4C,CAAtB,CAA3B;;AAeA,MAAMkB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGF,UADsD;AAEzD,KAAGC,aAFsD;AAGzDT,EAAAA,iBAAiB,EAAE,MAAK;AACpBS,IAAAA,aAAa,CAACT,iBAAd,CAAgCU,QAAQ,CAACC,MAAzC;AACH,GALwD;AAMzD,KAAGD;AANsD,CAA1C,CAAnB;;AASA,eAAezB,OAAO,CAClBO,eADkB,EAElBK,kBAFkB,EAGlBU,UAHkB,CAAP,CAIbrB,SAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CvPreview from \"./component\";\nimport instance, { BASE_URL } from \"../../../../../api/config\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    saveProfileData\n} from \"../actions\";\n\nconst mapStateToProps = state => ({\n    profileData: state.ADVERTISE.data.profileData\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    fetchDataIfNeeded: (id) => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Profile...\", \"large\"));\n\n        instance.get(BASE_URL+'User/AdvertisePage/CandidateProfile?guid='+id)\n        .then(res => {\n            dispatch(saveProfileData(res.data));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    fetchDataIfNeeded: () =>{\n        dispatchProps.fetchDataIfNeeded(ownProps.userid)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(CvPreview);"]},"metadata":{},"sourceType":"module"}