{"ast":null,"code":"import { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { connect } from \"react-redux\";\nimport AdditionalInfo from \"./component\";\nimport { headerPathActiveHandler, pathChangeHandler } from \"../actions\";\nimport { fetchDataIfNeeded } from \"./actions\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n  templateId: state.JDLANDING.data.templateId\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  headerPathActiveHandler: val => {\n    dispatch(headerPathActiveHandler(val));\n    dispatch(pathChangeHandler(\"/create/summary\"));\n  },\n  fetchDataIfNeeded: templateId => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Recommended Skills...\", \"large\"));\n    let savedTempId = ls.get('suggestedTempId');\n    let paramVal = templateId ? templateId : savedTempId;\n    instance.get(BASE_URL + 'Templates?templateId=' + paramVal + '&sectionId=TS2').then(res => {\n      dispatch(fetchDataIfNeeded(res.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  fetchDataIfNeeded: () => {\n    dispatchProps.fetchDataIfNeeded(stateProps.templateId);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AdditionalInfo);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/AdditionalInfo/container.js"],"names":["handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","connect","AdditionalInfo","headerPathActiveHandler","pathChangeHandler","fetchDataIfNeeded","instance","BASE_URL","ls","mapStateToProps","state","templateId","JDLANDING","data","mapDispatchToProps","dispatch","props","val","savedTempId","get","paramVal","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"AAAA,SACIA,yBADJ,EAEIC,mCAFJ,QAGO,mDAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,SACIC,uBADJ,EAEIC,iBAFJ,QAGO,YAHP;AAIA,SACIC,iBADJ,QAEO,WAFP;AAIA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,wBAAnC;AACA,OAAOC,EAAP,MAAe,eAAf;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,UAAU,EAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBF;AADH,CAAL,CAA7B;;AAIA,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7Cb,EAAAA,uBAAuB,EAAGc,GAAD,IAAS;AAC9BF,IAAAA,QAAQ,CAACZ,uBAAuB,CAACc,GAAD,CAAxB,CAAR;AACAF,IAAAA,QAAQ,CAACX,iBAAiB,CAAC,iBAAD,CAAlB,CAAR;AACH,GAJ4C;AAK7CC,EAAAA,iBAAiB,EAAGM,UAAD,IAAgB;AAC/BI,IAAAA,QAAQ,CAACf,mCAAmC,CAAC,IAAD,EAAO,+BAAP,EAAwC,OAAxC,CAApC,CAAR;AACA,QAAIkB,WAAW,GAAGV,EAAE,CAACW,GAAH,CAAO,iBAAP,CAAlB;AACA,QAAIC,QAAQ,GAAGT,UAAU,GAAGA,UAAH,GAAgBO,WAAzC;AAEAZ,IAAAA,QAAQ,CAACa,GAAT,CAAaZ,QAAQ,GAAC,uBAAT,GAAiCa,QAAjC,GAA0C,gBAAvD,EACCC,IADD,CACMC,GAAG,IAAI;AACTP,MAAAA,QAAQ,CAACV,iBAAiB,CAACiB,GAAG,CAACT,IAAL,CAAlB,CAAR;AACAE,MAAAA,QAAQ,CAAChB,yBAAyB,EAA1B,CAAR;AACH,KAJD,EAKCwB,KALD,CAKOC,KAAK,IAAI;AACZT,MAAAA,QAAQ,CAAChB,yBAAyB,EAA1B,CAAR;AACH,KAPD;AAQH;AAlB4C,CAAtB,CAA3B;;AAqBA,MAAM0B,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGF,UADsD;AAEzD,KAAGC,aAFsD;AAGzDtB,EAAAA,iBAAiB,EAAE,MAAM;AACrBsB,IAAAA,aAAa,CAACtB,iBAAd,CAAgCqB,UAAU,CAACf,UAA3C;AACH,GALwD;AAMzD,KAAGiB;AANsD,CAA1C,CAAnB;;AASA,eAAe3B,OAAO,CAClBQ,eADkB,EAElBK,kBAFkB,EAGlBW,UAHkB,CAAP,CAIbvB,cAJa,CAAf","sourcesContent":["import {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { connect } from \"react-redux\";\nimport AdditionalInfo from \"./component\";\nimport {\n    headerPathActiveHandler,\n    pathChangeHandler,\n} from \"../actions\";\nimport {\n    fetchDataIfNeeded\n} from \"./actions\";\n\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport ls from 'local-storage'\n\nconst mapStateToProps = state => ({\n    templateId: state.JDLANDING.data.templateId\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    headerPathActiveHandler: (val) => {\n        dispatch(headerPathActiveHandler(val));\n        dispatch(pathChangeHandler(\"/create/summary\"))\n    },\n    fetchDataIfNeeded: (templateId) => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Recommended Skills...\", \"large\"));\n        let savedTempId = ls.get('suggestedTempId')\n        let paramVal = templateId ? templateId : savedTempId\n\n        instance.get(BASE_URL+'Templates?templateId='+paramVal+'&sectionId=TS2')\n        .then(res => {\n            dispatch(fetchDataIfNeeded(res.data));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    fetchDataIfNeeded: () => {\n        dispatchProps.fetchDataIfNeeded(stateProps.templateId);\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(AdditionalInfo);"]},"metadata":{},"sourceType":"module"}