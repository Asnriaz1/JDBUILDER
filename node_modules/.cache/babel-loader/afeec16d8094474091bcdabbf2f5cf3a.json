{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Dashboard\\\\Jobs\\\\Incomplete\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport UserJDCard from \"../JDCard/container\";\nimport JDCardTitle from \"../JDCard/Title/container\";\n\nclass IncompleteJDs extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      templatesData\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.jdcardheight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(JDCardTitle, {\n      title: \"incomplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), templatesData.length > 0 ? templatesData.map((item, index) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(UserJDCard, {\n      data: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))) : \"No result found.\"));\n  }\n\n}\n\nexport default withStyles(styles)(IncompleteJDs);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/Jobs/Incomplete/component.js"],"names":["React","Component","styles","withStyles","Grid","UserJDCard","JDCardTitle","IncompleteJDs","componentDidMount","props","fetchDataIfNeeded","render","classes","templatesData","jdcardheight","length","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAElCO,iBAFkC,GAEd,MAAM;AACtB,WAAKC,KAAL,CAAWC,iBAAX;AACH,KAJiC;AAAA;;AAMlCC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,OADE;AAEFC,MAAAA;AAFE,QAGD,KAAKJ,KAHV;AAKA,WACI;AAAK,MAAA,SAAS,EAAEG,OAAO,CAACE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKQD,aAAa,CAACE,MAAd,GAAuB,CAAvB,GAA2BF,aAAa,CAACG,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KACzC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,GAAG,EAAEA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADuB,CAA3B,GAIK,kBATb,CADJ,CADJ;AAgBH;;AA5BiC;;AA+BtC,eAAed,UAAU,CAACD,MAAD,CAAV,CAAmBK,aAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport UserJDCard from \"../JDCard/container\";\nimport JDCardTitle from \"../JDCard/Title/container\";\n\nclass IncompleteJDs extends Component {\n    \n    componentDidMount = () => {\n        this.props.fetchDataIfNeeded();\n    }\n    \n    render() {\n        const { \n            classes,\n            templatesData\n         } = this.props;\n\n        return (\n            <div className={classes.jdcardheight}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <JDCardTitle title=\"incomplete\"/>\n                    </Grid>\n                    {\n                        templatesData.length > 0 ? templatesData.map((item, index) => (\n                            <Grid item xs={12} md={4} key={index}>\n                                <UserJDCard data={item}/>\n                            </Grid>\n                        )) : \"No result found.\"\n                    }\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(IncompleteJDs);"]},"metadata":{},"sourceType":"module"}