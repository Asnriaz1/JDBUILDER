{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import CreateJDLink from\"./component\";import instance,{BASE_URL_SQL,BASE_URL}from\"../../../../api/config\";import{textFieldChangeHandler,fetchDataIfNeeded as _fetchDataIfNeeded}from\"../../JDBuilding/JobOpening/actions\";import ls from'local-storage';var mapStateToProps=function mapStateToProps(state){return{templateJobId:state.JDLANDING.data.templateJobId,templateSpecId:state.JDLANDING.data.templateSpecId};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{// getJobCode: () => {\n//     instance.get(BASE_URL_SQL+'JD/GetJobCode')\n//     .then(res => {\n//         dispatch(textFieldChangeHandler('jobCodeField', res.data.data));\n//     })\n//     .catch(error => {\n//     })\n// },\nfetchDataIfNeeded:function fetchDataIfNeeded(templateSpecId,templateJobId){var savedJobId=ls.get('jobId');var savedSpecId=ls.get('specId');savedJobId=templateJobId?templateJobId:savedJobId;savedSpecId=templateSpecId?templateSpecId:savedSpecId;var paramVal=savedSpecId?'specId='+savedSpecId:'jobId='+savedJobId;instance.get(BASE_URL+'Templates/CreateNewTemplate?'+paramVal).then(function(res){dispatch(_fetchDataIfNeeded(res.data));}).catch(function(error){});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{fetchDataIfNeeded:function fetchDataIfNeeded(){dispatchProps.fetchDataIfNeeded(stateProps.templateSpecId,stateProps.templateJobId);}},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(CreateJDLink);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Templates/Create/container.js"],"names":["connect","CreateJDLink","instance","BASE_URL_SQL","BASE_URL","textFieldChangeHandler","fetchDataIfNeeded","ls","mapStateToProps","state","templateJobId","JDLANDING","data","templateSpecId","mapDispatchToProps","dispatch","props","savedJobId","get","savedSpecId","paramVal","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"2JAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,aAAzB,CACA,MAAOC,CAAAA,QAAP,EAAmBC,YAAnB,CAAiCC,QAAjC,KAAiD,wBAAjD,CACA,OACIC,sBADJ,CAEIC,iBAAiB,GAAjBA,CAAAA,kBAFJ,KAGO,qCAHP,CAIA,MAAOC,CAAAA,EAAP,KAAe,eAAf,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,aAAa,CAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBF,aADN,CAE9BG,cAAc,CAAEJ,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBC,cAFP,CAAL,EAA7B,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWC,KAAX,QAAsB,CAC7C;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACAV,iBAAiB,CAAE,2BAACO,cAAD,CAAiBH,aAAjB,CAAmC,CAElD,GAAIO,CAAAA,UAAU,CAAGV,EAAE,CAACW,GAAH,CAAO,OAAP,CAAjB,CACA,GAAIC,CAAAA,WAAW,CAAGZ,EAAE,CAACW,GAAH,CAAO,QAAP,CAAlB,CAEAD,UAAU,CAAGP,aAAa,CAAGA,aAAH,CAAmBO,UAA7C,CACAE,WAAW,CAAGN,cAAc,CAAGA,cAAH,CAAoBM,WAAhD,CAEA,GAAIC,CAAAA,QAAQ,CAAGD,WAAW,CAAG,UAAUA,WAAb,CAA2B,SAASF,UAA9D,CAEAf,QAAQ,CAACgB,GAAT,CAAad,QAAQ,CAAC,8BAAT,CAAwCgB,QAArD,EACCC,IADD,CACM,SAAAC,GAAG,CAAI,CACTP,QAAQ,CAACT,kBAAiB,CAACgB,GAAG,CAACV,IAAL,CAAlB,CAAR,CACH,CAHD,EAICW,KAJD,CAIO,SAAAC,KAAK,CAAI,CAEf,CAND,EAOH,CA3B4C,CAAtB,EAA3B,CA8BA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAaC,aAAb,CAA4BC,QAA5B,0BACZF,UADY,IAEZC,aAFY,EAGfrB,iBAAiB,CAAE,4BAAM,CACrBqB,aAAa,CAACrB,iBAAd,CAAgCoB,UAAU,CAACb,cAA3C,CAA2Da,UAAU,CAAChB,aAAtE,EACH,CALc,EAMZkB,QANY,GAAnB,CASA,cAAe5B,CAAAA,OAAO,CAClBQ,eADkB,CAElBM,kBAFkB,CAGlBW,UAHkB,CAAP,CAIbxB,YAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CreateJDLink from \"./component\";\nimport instance, { BASE_URL_SQL, BASE_URL } from \"../../../../api/config\";\nimport {\n    textFieldChangeHandler,\n    fetchDataIfNeeded\n} from \"../../JDBuilding/JobOpening/actions\";\nimport ls from 'local-storage'\n\nconst mapStateToProps = state => ({\n    templateJobId: state.JDLANDING.data.templateJobId,\n    templateSpecId: state.JDLANDING.data.templateSpecId,\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    // getJobCode: () => {\n    //     instance.get(BASE_URL_SQL+'JD/GetJobCode')\n    //     .then(res => {\n    //         dispatch(textFieldChangeHandler('jobCodeField', res.data.data));\n    //     })\n    //     .catch(error => {\n            \n    //     })\n    // },\n    fetchDataIfNeeded: (templateSpecId, templateJobId) => {\n\n        let savedJobId = ls.get('jobId')\n        let savedSpecId = ls.get('specId')\n\n        savedJobId = templateJobId ? templateJobId : savedJobId\n        savedSpecId = templateSpecId ? templateSpecId : savedSpecId\n\n        let paramVal = savedSpecId ? 'specId='+savedSpecId : 'jobId='+savedJobId\n\n        instance.get(BASE_URL+'Templates/CreateNewTemplate?'+paramVal)\n        .then(res => {\n            dispatch(fetchDataIfNeeded(res.data));\n        })\n        .catch(error => {\n            \n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    fetchDataIfNeeded: () => {\n        dispatchProps.fetchDataIfNeeded(stateProps.templateSpecId, stateProps.templateJobId);\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(CreateJDLink);"]},"metadata":{},"sourceType":"module"}