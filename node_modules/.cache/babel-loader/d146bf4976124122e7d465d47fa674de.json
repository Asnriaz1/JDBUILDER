{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\Advertise\\\\Profile\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./style\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Avatar from '@material-ui/core/Avatar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CvPreview extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      userid,\n      profileData\n    } = this.props;\n    return profileData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.previewWrapper,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.cvAvatar,\n            src: profileData.personal_info.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cvHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: profileData.personal_info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profileData.personal_info.headline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: profileData.personal_info.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: profileData.personal_info.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: classes.cvHeading,\n            children: \"Matched Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), profileData.skills ? profileData.skills.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cvSkills,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this)) : \"\", /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: classes.unmatchHeading,\n            children: \"Unmatched Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), profileData.missing ? profileData.missing.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cvunmatchedSkills,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }, this)) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.cvSummary,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: classes.cvHeading,\n                children: \"Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: profileData.personal_info.summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.space\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.cvEmployment,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: classes.cvHeading,\n                children: \"Employment History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), profileData.experiences.jobs ? profileData.experiences.jobs.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.employmentHistory,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [item.title, \" , \", item.company]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.locationmark,\n                    children: item.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.date_range\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.details,\n                    children: item.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 49\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this)) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.space\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.cvEducation,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: classes.cvHeading,\n                children: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), profileData.experiences.education ? profileData.experiences.education.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.cvEducation,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [item.degree, \" , \", item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.locationmark,\n                    children: item.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.date_range\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 49\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 45\n              }, this)) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : \"No result found.\";\n  }\n\n}\n\nexport default withStyles(styles)(CvPreview);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Advertise/Profile/component.js"],"names":["React","Component","styles","withStyles","Grid","Avatar","LinearProgress","ReactMarkdown","CvPreview","componentDidMount","props","fetchDataIfNeeded","render","classes","userid","profileData","previewWrapper","cvAvatar","personal_info","image","cvHeader","name","headline","email","phone","cvHeading","skills","map","item","index","cvSkills","unmatchHeading","missing","cvunmatchedSkills","cvSummary","summary","space","cvEmployment","experiences","jobs","employmentHistory","title","company","locationmark","location","date_range","details","description","cvEducation","education","degree"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { styles } from \"./style\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\n\r\n\r\nclass CvPreview extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.fetchDataIfNeeded();\r\n    }\r\n    render() {\r\n        const {\r\n            classes,\r\n            userid,\r\n            profileData\r\n        } = this.props;\r\n\r\n        return (\r\n            profileData ?\r\n            <div className={classes.previewWrapper}>\r\n                    <Grid container>\r\n                        <Grid item lg={3}>\r\n                            <img className={classes.cvAvatar} src={profileData.personal_info.image} alt=\"\"/>\r\n                        </Grid>\r\n                        <Grid item lg={9}>\r\n                            <div className={classes.cvHeader}>\r\n                                <h1>{profileData.personal_info.name}</h1>\r\n                                <h3>{profileData.personal_info.headline}</h3>\r\n                                <p>{profileData.personal_info.email}</p>\r\n                                <p>{profileData.personal_info.phone}</p>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container>\r\n                        <Grid item lg={3}>\r\n                            <h1 className={classes.cvHeading}>Matched Skills</h1>\r\n                            {\r\n                                profileData.skills ? profileData.skills.map((item, index) => (\r\n                                        <div className={classes.cvSkills} key={index}>\r\n                                            <p>{item.name}</p>\r\n                                        </div>\r\n                                )) : \"\"\r\n                            }\r\n                            <h1 className={classes.unmatchHeading}>Unmatched Skills</h1>\r\n                            {\r\n                                profileData.missing ? profileData.missing.map((item, index) => (\r\n                                        <div className={classes.cvunmatchedSkills} key={index}>\r\n                                            <p>{item.name}</p>\r\n                                        </div>\r\n                                )) : \"\"\r\n                            }\r\n                        </Grid>\r\n                        <Grid item lg={9}>\r\n                            <div>\r\n                                <div className={classes.cvSummary}>\r\n                                    <h2 className={classes.cvHeading}>Summary</h2>\r\n                                    <p>{profileData.personal_info.summary}</p>\r\n                                </div>\r\n\r\n                                <div className={classes.space}>\r\n                                </div>\r\n\r\n                                <div className={classes.cvEmployment}>\r\n                                    <h2 className={classes.cvHeading}>Employment History</h2>\r\n                                    {\r\n                                        profileData.experiences.jobs ? profileData.experiences.jobs.map((item, index) => (\r\n                                            <Grid key={index}>\r\n                                                <div className={classes.employmentHistory} >\r\n                                                    <p>{item.title} , {item.company}</p>\r\n                                                    <span className={classes.locationmark}>{item.location}</span>\r\n                                                    <p>{item.date_range}</p>\r\n                                                    <div className={classes.details}>\r\n                                                            {item.description}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Grid>\r\n                                        )) : \"\"\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className={classes.space}>\r\n                                </div>\r\n\r\n                                <div className={classes.cvEducation}>\r\n                                    <h2 className={classes.cvHeading}>Education</h2>\r\n                                    {\r\n                                        profileData.experiences.education? profileData.experiences.education.map((item, index) => (\r\n                                            <Grid key={index}>\r\n                                                <div className={classes.cvEducation} >\r\n                                                    <p>{item.degree} , {item.name}</p>\r\n                                                    <span className={classes.locationmark}>{item.location}</span>\r\n                                                    <span>{item.date_range}</span>\r\n                                                  \r\n                                                </div>\r\n                                            </Grid>\r\n                                        )) : \"\"\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n            </div> : \"No result found.\"\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CvPreview);"]},"metadata":{},"sourceType":"module"}