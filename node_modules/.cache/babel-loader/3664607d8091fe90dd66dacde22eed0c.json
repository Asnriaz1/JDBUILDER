{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\CollaboratorAndPreview\\\\AddCollaboration\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\nimport axios from \"axios\";\nimport { BASE_URL_COL } from \"../../../../../api/config\";\nimport { getAppStoreValue } from \"../../../../common/Helpers\";\nconst accessToken = getAppStoreValue(\"access_token\");\n\nclass AddCollaboration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collaborators: []\n    };\n  }\n\n  componentDidMount() {\n    const url = `${BASE_URL_COL}/User/GetAllCollaboratorsForBuilder?JobCode=JDB1346`;\n    axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.data).then(data => {\n      this.setState({\n        collaborators: data\n      });\n      console.log(this.state.collaborators);\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      textFieldChangeHandler,\n      fields,\n      addCollaboratorHandler,\n      addedCollaborator\n    } = this.props;\n    ;\n    return React.createElement(\"div\", {\n      className: classes.addcollaboraterwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: addCollaboratorHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, fields.EmailField.label), React.createElement(CustomTextValidator, {\n      id: fields.EmailField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.EmailField.placeholder,\n      name: fields.EmailField.name,\n      value: fields.EmailField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.EmailField.name, value);\n      },\n      validators: [\"required\", \"matchRegexp:^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$\"],\n      errorMessages: [\"Required\", \"Please enter a valid email\"],\n      className: classes.collaboratorfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, fields.NameField.label), React.createElement(CustomTextValidator, {\n      id: fields.NameField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.NameField.placeholder,\n      name: fields.NameField.name,\n      value: fields.NameField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.NameField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.collaboratorfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      className: classes.addcollaborationbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, addedCollaborator.Collab_email ? \"Update\" : \"Add\")), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, addedCollaborator ? React.createElement(\"div\", {\n      className: classes.collaboratorinfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, addedCollaborator.Collab_Name), React.createElement(\"span\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, addedCollaborator.Collab_email)) : \"\")), this.state.collaborators ? this.state.collaborators.map((data, index) => React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Added Collabborators\"), React.createElement(\"p\", {\n      className: classes.collaboratorsName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, data.name)), React.createElement(\"p\", {\n      className: classes.collaboratorsEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, data.email)))) : [])));\n  }\n\n}\n\nexport default withStyles(styles)(AddCollaboration);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/AddCollaboration/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","axios","BASE_URL_COL","getAppStoreValue","accessToken","AddCollaboration","constructor","props","state","collaborators","componentDidMount","url","get","headers","Authorization","then","response","data","setState","console","log","render","classes","textFieldChangeHandler","fields","addCollaboratorHandler","addedCollaborator","addcollaboraterwrapper","EmailField","label","name","placeholder","value","collaboratorfields","NameField","addcollaborationbtn","Collab_email","collaboratorinfo","Collab_Name","map","index","collaboratorsName","collaboratorsEmail","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\nimport axios from \"axios\";\nimport { BASE_URL_COL } from \"../../../../../api/config\";\nimport {getAppStoreValue} from \"../../../../common/Helpers\";\n\nconst accessToken = getAppStoreValue(\"access_token\")\n\nclass AddCollaboration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collaborators: [],\n            \n        };\n\n    }\n    componentDidMount() {\n        const url = `${BASE_URL_COL}/User/GetAllCollaboratorsForBuilder?JobCode=JDB1346`;\n        axios.get(url,\n            {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`\n                \n         }}).then(response => response.data)\n            .then((data) => {\n                this.setState({ collaborators: data })\n                console.log(this.state.collaborators)\n            })\n    }\n    render() {\n        const {\n            classes,\n            textFieldChangeHandler,\n            fields,\n            addCollaboratorHandler,\n            addedCollaborator\n        } = this.props;\n       ;\n        return (\n            <div className={classes.addcollaboraterwrapper}>\n                <ValidatorForm\n                    onSubmit={addCollaboratorHandler}\n                    autoComplete=\"off\"\n                >\n                    <Grid container>\n                        <Grid item xs={12} md={8}>\n                            <span>{fields.EmailField.label}</span>\n                            <CustomTextValidator\n                                id={fields.EmailField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.EmailField.placeholder}\n                                name={fields.EmailField.name}\n                                value={fields.EmailField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.EmailField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\n                                    \"required\",\n                                    \"matchRegexp:^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$\"\n                                ]}\n                                errorMessages={[\n                                    \"Required\",\n                                    \"Please enter a valid email\"\n                                ]}\n                                className={classes.collaboratorfields}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={4}>\n                            <span>{fields.NameField.label}</span>\n                            <CustomTextValidator\n                                id={fields.NameField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.NameField.placeholder}\n                                name={fields.NameField.name}\n                                value={fields.NameField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.NameField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.collaboratorfields}\n                            />\n                        </Grid>\n\n\n                        <Grid item xs={12} md={12}>\n                            <Button color=\"primary\" variant=\"contained\" type=\"submit\" className={classes.addcollaborationbtn}>{addedCollaborator.Collab_email ? \"Update\" : \"Add\"}</Button>\n                        </Grid>\n\n                        <Grid container>\n                            <Grid item lg={12}>\n                            {\n                            addedCollaborator ?\n                                <div className={classes.collaboratorinfo}>\n                                    <span className=\"name\" >{addedCollaborator.Collab_Name}</span>\n                                    <span className=\"email\" >{addedCollaborator.Collab_email}</span>\n                                </div> : \"\"\n                        }\n                            </Grid>\n                        </Grid>\n                      \n        \n                        {\n                        this.state.collaborators ? this.state.collaborators.map((data, index) => (\n                            \n                         <Grid item xs={4} md={4} key={index}>\n                          <h1>Added Collabborators</h1>\n                         <p className={classes.collaboratorsName}>Name:<span>{data.name}</span></p>\n                         <p className={classes.collaboratorsEmail}>Email:<span>{data.email}</span></p>\n                        </Grid>\n                         )) : []}\n\n\n                    </Grid>\n                </ValidatorForm>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(AddCollaboration);"]},"metadata":{},"sourceType":"module"}