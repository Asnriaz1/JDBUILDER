{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import ResetPasswordPage from\"./component\";import{textFieldResetChangeHandler,saveResetPasswordError,setResetPasswordMassage}from\"../actions\";import{handleLoadingSpinnerClose,handleLoadingSpinnerOpenWithOptions}from\"../../common/ReduxBased/LoadingSpinner/actions\";import instance,{BASE_URL_SQL}from\"../../../api/config\";var mapStateToProps=function mapStateToProps(state){return{fields:state.SIGNUP.forms.resetPasswordForm.fields,error:state.SIGNUP.UISettings.resetPasswordError,resetPasswordMessage:state.SIGNUP.UISettings.resetPasswordMessage};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{textFieldChangeHandler:function textFieldChangeHandler(name,e){if(typeof e.value!==\"string\"){e.value=\"\";}dispatch(textFieldResetChangeHandler(name,e));},submitResetFormHandler:function submitResetFormHandler(email){dispatch(handleLoadingSpinnerOpenWithOptions(true,\"Sending Email...\",\"large\"));instance.get(BASE_URL_SQL+'PasswordReset?Email='+email).then(function(res){dispatch(saveResetPasswordError(res.data.message));dispatch(handleLoadingSpinnerClose());}).catch(function(error){dispatch(handleLoadingSpinnerClose());});},submitNewPasswordHandler:function submitNewPasswordHandler(token,PasswordField,ConfirmPasswordField){var data={Password:PasswordField,R_Password:ConfirmPasswordField};dispatch(handleLoadingSpinnerOpenWithOptions(true,\"Updating Password...\",\"large\"));instance.put(BASE_URL_SQL+'PasswordReset/Reset',data,{headers:{authorization:\"Bearer \".concat(token)}}).then(function(res){dispatch(handleLoadingSpinnerClose());dispatch(setResetPasswordMassage(res.data.message));}).catch(function(error){dispatch(handleLoadingSpinnerClose());});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{submitResetFormHandler:function submitResetFormHandler(){dispatchProps.submitResetFormHandler(stateProps.fields.EmailField.value);},submitNewPasswordHandler:function submitNewPasswordHandler(token){dispatchProps.submitNewPasswordHandler(token,stateProps.fields.PasswordField.value,stateProps.fields.ConfirmPasswordField.value);}},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(ResetPasswordPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Signup/ResetPassword/container.js"],"names":["connect","ResetPasswordPage","textFieldResetChangeHandler","saveResetPasswordError","setResetPasswordMassage","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","instance","BASE_URL_SQL","mapStateToProps","state","fields","SIGNUP","forms","resetPasswordForm","error","UISettings","resetPasswordError","resetPasswordMessage","mapDispatchToProps","dispatch","props","textFieldChangeHandler","name","e","value","submitResetFormHandler","email","get","then","res","data","message","catch","submitNewPasswordHandler","token","PasswordField","ConfirmPasswordField","Password","R_Password","put","headers","authorization","mergeProps","stateProps","dispatchProps","ownProps","EmailField"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport ResetPasswordPage from \"./component\";\nimport {\n    textFieldResetChangeHandler,\n    saveResetPasswordError,\n    setResetPasswordMassage\n} from \"../actions\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../common/ReduxBased/LoadingSpinner/actions\";\n\nimport instance, { BASE_URL_SQL } from \"../../../api/config\";\n\nconst mapStateToProps = state => ({\n    fields: state.SIGNUP.forms.resetPasswordForm.fields,\n    error: state.SIGNUP.UISettings.resetPasswordError,\n    resetPasswordMessage: state.SIGNUP.UISettings.resetPasswordMessage\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldResetChangeHandler(name, e));\n    },\n    submitResetFormHandler: (email) => {\n        \n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Email...\", \"large\"));\n        instance.get(BASE_URL_SQL+'PasswordReset?Email='+email)\n        .then(res => {\n            dispatch(saveResetPasswordError(res.data.message))\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    },\n    submitNewPasswordHandler: (token, PasswordField, ConfirmPasswordField) => {\n        let data = {\n            Password: PasswordField ,\n            R_Password: ConfirmPasswordField\n        }\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Updating Password...\", \"large\"));\n\n        instance.put(BASE_URL_SQL+'PasswordReset/Reset', data,\n        {\n            headers: {\n                authorization: `Bearer ${token}`\n            }\n        })\n        .then(res => {\n            dispatch(handleLoadingSpinnerClose());\n            dispatch(setResetPasswordMassage(res.data.message))\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    submitResetFormHandler: () => {\n        dispatchProps.submitResetFormHandler(stateProps.fields.EmailField.value);\n    },\n    submitNewPasswordHandler: (token) => {\n        dispatchProps.submitNewPasswordHandler(token, stateProps.fields.PasswordField.value, stateProps.fields.ConfirmPasswordField.value);\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ResetPasswordPage);"]},"metadata":{},"sourceType":"module"}