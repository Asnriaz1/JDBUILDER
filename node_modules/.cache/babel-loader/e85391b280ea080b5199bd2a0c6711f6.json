{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\CollaboratorAndPreview\\\\AddCollaboration\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\nimport axios from \"axios\";\nimport { BASE_URL_COL } from \"../../../../../api/config\";\nimport { getAppStoreValue } from \"../../../../common/Helpers\";\nimport ls from 'local-storage';\nconst accessToken = getAppStoreValue(\"access_token\");\n\nclass AddCollaboration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collaborators: []\n    };\n  }\n\n  componentDidMount() {\n    let jobCode = ls.get('jobCode');\n    console.log(jobCode);\n    const url = `${BASE_URL_COL}/User/GetAllCollaboratorsForBuilder?JobCode=` + {\n      jobCode\n    };\n    axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.data).then(data => {\n      this.setState({\n        collaborators: data\n      });\n      console.log(this.state.collaborators);\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      textFieldChangeHandler,\n      fields,\n      addCollaboratorHandler,\n      addedCollaborator,\n      jobCode\n    } = this.props;\n    ;\n    return React.createElement(\"div\", {\n      className: classes.addcollaboraterwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: addCollaboratorHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, fields.EmailField.label), React.createElement(CustomTextValidator, {\n      id: fields.EmailField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.EmailField.placeholder,\n      name: fields.EmailField.name,\n      value: fields.EmailField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.EmailField.name, value);\n      },\n      validators: [\"required\", \"matchRegexp:^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$\"],\n      errorMessages: [\"Required\", \"Please enter a valid email\"],\n      className: classes.collaboratorfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, fields.NameField.label), React.createElement(CustomTextValidator, {\n      id: fields.NameField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.NameField.placeholder,\n      name: fields.NameField.name,\n      value: fields.NameField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.NameField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.collaboratorfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      className: classes.addcollaborationbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, addedCollaborator.Collab_email ? \"Update\" : \"Add\")), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Added Collaborators\"), this.state.collaborators ? this.state.collaborators.map((data, index) => React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      md: 4,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.collaboratorsName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, data.name)), React.createElement(\"p\", {\n      className: classes.collaboratorsEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, data.email)))) : [])), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Invited Collaborators\"), addedCollaborator ? React.createElement(\"div\", {\n      className: classes.collaboratorinfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, addedCollaborator.Collab_Name), React.createElement(\"span\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, addedCollaborator.Collab_email)) : \"\")))));\n  }\n\n}\n\nexport default withStyles(styles)(AddCollaboration);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/AddCollaboration/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","axios","BASE_URL_COL","getAppStoreValue","ls","accessToken","AddCollaboration","constructor","props","state","collaborators","componentDidMount","jobCode","get","console","log","url","headers","Authorization","then","response","data","setState","render","classes","textFieldChangeHandler","fields","addCollaboratorHandler","addedCollaborator","addcollaboraterwrapper","EmailField","label","name","placeholder","value","collaboratorfields","NameField","addcollaborationbtn","Collab_email","map","index","collaboratorsName","collaboratorsEmail","email","collaboratorinfo","Collab_Name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL_COL } from \"../../../../../api/config\";\r\nimport {getAppStoreValue} from \"../../../../common/Helpers\";\r\nimport ls from 'local-storage';\r\n\r\nconst accessToken = getAppStoreValue(\"access_token\")\r\n\r\nclass AddCollaboration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collaborators: [],\r\n            \r\n        };\r\n\r\n    }\r\n    componentDidMount() {\r\n        let jobCode = ls.get('jobCode');\r\n        console.log(jobCode);\r\n        const url = `${BASE_URL_COL}/User/GetAllCollaboratorsForBuilder?JobCode=`+{jobCode};\r\n        axios.get(url,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                \r\n         }}).then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({ collaborators: data })\r\n                console.log(this.state.collaborators)\r\n            })\r\n    }\r\n    render() {\r\n        const {\r\n            classes,\r\n            textFieldChangeHandler,\r\n            fields,\r\n            addCollaboratorHandler,\r\n            addedCollaborator,\r\n            jobCode\r\n        } = this.props;\r\n       ;\r\n        return (\r\n            <div className={classes.addcollaboraterwrapper}>\r\n                <ValidatorForm\r\n                    onSubmit={addCollaboratorHandler}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={8}>\r\n                            <span>{fields.EmailField.label}</span>\r\n                            <CustomTextValidator\r\n                                id={fields.EmailField.name}\r\n                                validations={true}\r\n                                fullWidth={true}\r\n                                type=\"text\"\r\n                                placeholder={fields.EmailField.placeholder}\r\n                                name={fields.EmailField.name}\r\n                                value={fields.EmailField.value}\r\n                                onChange={value => {\r\n                                    textFieldChangeHandler(\r\n                                        fields.EmailField.name,\r\n                                        value\r\n                                    );\r\n                                }}\r\n                                validators={[\r\n                                    \"required\",\r\n                                    \"matchRegexp:^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$\"\r\n                                ]}\r\n                                errorMessages={[\r\n                                    \"Required\",\r\n                                    \"Please enter a valid email\"\r\n                                ]}\r\n                                className={classes.collaboratorfields}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4}>\r\n                            <span>{fields.NameField.label}</span>\r\n                            <CustomTextValidator\r\n                                id={fields.NameField.name}\r\n                                validations={true}\r\n                                fullWidth={true}\r\n                                type=\"text\"\r\n                                placeholder={fields.NameField.placeholder}\r\n                                name={fields.NameField.name}\r\n                                value={fields.NameField.value}\r\n                                onChange={value => {\r\n                                    textFieldChangeHandler(\r\n                                        fields.NameField.name,\r\n                                        value\r\n                                    );\r\n                                }}\r\n                                validators={[\"required\"]}\r\n                                errorMessages={[\"Required\"]}\r\n                                className={classes.collaboratorfields}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                            <Button color=\"primary\" variant=\"contained\" type=\"submit\" className={classes.addcollaborationbtn}>{addedCollaborator.Collab_email ? \"Update\" : \"Add\"}</Button>\r\n                        </Grid>\r\n\r\n                        <Grid container>\r\n                      \r\n                        <Grid item lg={12}>\r\n                        <h3>Added Collaborators</h3>\r\n                        {\r\n                        this.state.collaborators ? this.state.collaborators.map((data, index) => (\r\n                            \r\n                         <Grid item xs={4} md={4} key={index}>\r\n                          \r\n                         <p className={classes.collaboratorsName}>Name:<span>{data.name}</span></p>\r\n                         <p className={classes.collaboratorsEmail}>Email:<span>{data.email}</span></p>\r\n                        </Grid>\r\n                         )) : []}\r\n                        </Grid>\r\n                     \r\n                        </Grid>\r\n                     \r\n\r\n                        <Grid container>\r\n                            <Grid item lg={12}>\r\n                            <h3>Invited Collaborators</h3>\r\n                            {\r\n                            addedCollaborator ?\r\n                                <div className={classes.collaboratorinfo}>\r\n                                    <span className=\"name\" >{addedCollaborator.Collab_Name}</span>\r\n                                    <span className=\"email\" >{addedCollaborator.Collab_email}</span>\r\n                                </div> : \"\"\r\n                        }\r\n                            </Grid>\r\n                        </Grid>\r\n                      \r\n        \r\n                   \r\n\r\n                    </Grid>\r\n                </ValidatorForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddCollaboration);"]},"metadata":{},"sourceType":"module"}