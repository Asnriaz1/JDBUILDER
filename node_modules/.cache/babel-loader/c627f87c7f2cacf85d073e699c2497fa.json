{"ast":null,"code":"import { connect } from \"react-redux\";\nimport AddCollaboration from \"./component\";\nimport { textFieldChangeHandler, saveAddedCollaborators } from \"../actions\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n  fields: state.ADD_COLLABORATOR.forms.addCollaboratorForm.fields,\n  addedCollaborator: state.ADD_COLLABORATOR.data.addedCollaborator,\n  JDB: state.JOBOPENING.forms.jobOpeningForm.jobCodeField,\n  TitleField: state.JOBOPENING.forms.jobOpeningForm.jobTitleField\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldChangeHandler(name, e));\n  },\n  addCollaboratorHandler: (EmailField, NameField) => {\n    let jobCode = ls.get('jobCode');\n    let data = {\n      Collab_email: EmailField,\n      Collab_Name: NameField,\n      Job_Title: this.stateProps.TitleField,\n      Job_Code: jobCode\n    };\n    dispatch(saveAddedCollaborators(data));\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  addCollaboratorHandler: () => {\n    dispatchProps.addCollaboratorHandler(stateProps.fields.EmailField.value, stateProps.fields.NameField.value);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddCollaboration);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/AddCollaboration/container.js"],"names":["connect","AddCollaboration","textFieldChangeHandler","saveAddedCollaborators","ls","mapStateToProps","state","fields","ADD_COLLABORATOR","forms","addCollaboratorForm","addedCollaborator","data","JDB","JOBOPENING","jobOpeningForm","jobCodeField","TitleField","jobTitleField","mapDispatchToProps","dispatch","props","name","e","value","addCollaboratorHandler","EmailField","NameField","jobCode","get","Collab_email","Collab_Name","Job_Title","stateProps","Job_Code","mergeProps","dispatchProps","ownProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,SACIC,sBADJ,EAEIC,sBAFJ,QAGO,YAHP;AAIA,OAAOC,EAAP,MAAe,eAAf;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,MAAM,EAAED,KAAK,CAACE,gBAAN,CAAuBC,KAAvB,CAA6BC,mBAA7B,CAAiDH,MAD3B;AAE9BI,EAAAA,iBAAiB,EAAEL,KAAK,CAACE,gBAAN,CAAuBI,IAAvB,CAA4BD,iBAFjB;AAG9BE,EAAAA,GAAG,EAAEP,KAAK,CAACQ,UAAN,CAAiBL,KAAjB,CAAuBM,cAAvB,CAAsCC,YAHb;AAI9BC,EAAAA,UAAU,EAAEX,KAAK,CAACQ,UAAN,CAAiBL,KAAjB,CAAuBM,cAAvB,CAAsCG;AAJpB,CAAL,CAA7B;;AAOA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7CnB,EAAAA,sBAAsB,EAAE,CAACoB,IAAD,EAAOC,CAAP,KAAa;AACjC,QAAI,OAAOA,CAAC,CAACC,KAAT,KAAmB,QAAvB,EAAiC;AAC7BD,MAAAA,CAAC,CAACC,KAAF,GAAU,EAAV;AACH;;AACDJ,IAAAA,QAAQ,CAAClB,sBAAsB,CAACoB,IAAD,EAAOC,CAAP,CAAvB,CAAR;AACH,GAN4C;AAO7CE,EAAAA,sBAAsB,EAAE,CAACC,UAAD,EAAaC,SAAb,KAA2B;AAE/C,QAAIC,OAAO,GAAGxB,EAAE,CAACyB,GAAH,CAAO,SAAP,CAAd;AAEA,QAAIjB,IAAI,GAAG;AACPkB,MAAAA,YAAY,EAAEJ,UADP;AAEPK,MAAAA,WAAW,EAAEJ,SAFN;AAGPK,MAAAA,SAAS,EAAE,KAAKC,UAAL,CAAgBhB,UAHpB;AAIPiB,MAAAA,QAAQ,EAAEN;AAJH,KAAX;AAMAR,IAAAA,QAAQ,CAACjB,sBAAsB,CAACS,IAAD,CAAvB,CAAR;AACH;AAlB4C,CAAtB,CAA3B;;AAqBA,MAAMuB,UAAU,GAAG,CAACF,UAAD,EAAaG,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGJ,UADsD;AAEzD,KAAGG,aAFsD;AAGzDX,EAAAA,sBAAsB,EAAE,MAAM;AAC1BW,IAAAA,aAAa,CAACX,sBAAd,CAAqCQ,UAAU,CAAC1B,MAAX,CAAkBmB,UAAlB,CAA6BF,KAAlE,EAAyES,UAAU,CAAC1B,MAAX,CAAkBoB,SAAlB,CAA4BH,KAArG;AACH,GALwD;AAMzD,KAAGa;AANsD,CAA1C,CAAnB;;AASA,eAAerC,OAAO,CAClBK,eADkB,EAElBc,kBAFkB,EAGlBgB,UAHkB,CAAP,CAIblC,gBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport AddCollaboration from \"./component\";\nimport {\n    textFieldChangeHandler,\n    saveAddedCollaborators\n} from \"../actions\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n    fields: state.ADD_COLLABORATOR.forms.addCollaboratorForm.fields,\n    addedCollaborator: state.ADD_COLLABORATOR.data.addedCollaborator,\n    JDB :state.JOBOPENING.forms.jobOpeningForm.jobCodeField,\n    TitleField: state.JOBOPENING.forms.jobOpeningForm.jobTitleField,\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldChangeHandler(name, e));\n    },\n    addCollaboratorHandler: (EmailField, NameField) => {\n\n        let jobCode = ls.get('jobCode');\n\n        let data = {\n            Collab_email: EmailField,\n            Collab_Name: NameField,\n            Job_Title: this.stateProps.TitleField,\n            Job_Code: jobCode\n        }\n        dispatch(saveAddedCollaborators(data))\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    addCollaboratorHandler: () => {\n        dispatchProps.addCollaboratorHandler(stateProps.fields.EmailField.value, stateProps.fields.NameField.value)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(AddCollaboration);"]},"metadata":{},"sourceType":"module"}