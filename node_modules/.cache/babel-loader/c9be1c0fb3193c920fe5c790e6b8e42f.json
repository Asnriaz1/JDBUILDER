{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import CompanySettingGeneral from\"./component\";import{handleLoadingSpinnerClose,handleLoadingSpinnerOpenWithOptions}from\"../../../../../common/ReduxBased/LoadingSpinner/actions\";import instance,{BASE_URL}from\"../../../../../../api/config\";import{textFieldResetChangeHandler,saveCompanyGeneralInfo as _saveCompanyGeneralInfo,saveCompanyGeneralInfoData}from\"../actions\";var mapStateToProps=function mapStateToProps(state){return{fields:state.COMPANY_INFO.forms.companyInfoForm.fields,generalInfoMessage:state.COMPANY_INFO.UISettings.generalInfoMessage};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{textFieldChangeHandler:function textFieldChangeHandler(name,e){if(typeof e.value!==\"string\"){e.value=\"\";}dispatch(textFieldResetChangeHandler(name,e.value));},saveCompanyGeneralInfo:function saveCompanyGeneralInfo(NameField,NumberField,CountryField,ProvinceField,CityField){var data={Name:NameField,Contact:NumberField,CountryName:CountryField,StateName:ProvinceField,CityName:CityField};dispatch(handleLoadingSpinnerOpenWithOptions(true,\"updating general info\",\"large\"));instance.put(BASE_URL+'User/Dashboard/Company/UpdateCompanyGeneral',data).then(function(res){dispatch(_saveCompanyGeneralInfo(res.data.message));dispatch(handleLoadingSpinnerClose());}).catch(function(error){dispatch(handleLoadingSpinnerClose());});},fetchDataIfNeeded:function fetchDataIfNeeded(){instance.get(BASE_URL+'User/Dashboard/Company/GetCompanyGeneral').then(function(res){dispatch(saveCompanyGeneralInfoData(res.data));}).catch(function(error){});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{saveCompanyGeneralInfo:function saveCompanyGeneralInfo(){dispatchProps.saveCompanyGeneralInfo(stateProps.fields.NameField.value,stateProps.fields.NumberField.value,stateProps.fields.CountryField.value,stateProps.fields.ProvinceField.value,stateProps.fields.CityField.value);}},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(CompanySettingGeneral);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/AboutCompany/CompanySettings/General/container.js"],"names":["connect","CompanySettingGeneral","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","instance","BASE_URL","textFieldResetChangeHandler","saveCompanyGeneralInfo","saveCompanyGeneralInfoData","mapStateToProps","state","fields","COMPANY_INFO","forms","companyInfoForm","generalInfoMessage","UISettings","mapDispatchToProps","dispatch","props","textFieldChangeHandler","name","e","value","NameField","NumberField","CountryField","ProvinceField","CityField","data","Name","Contact","CountryName","StateName","CityName","put","then","res","message","catch","error","fetchDataIfNeeded","get","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport CompanySettingGeneral from \"./component\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport instance, { BASE_URL } from \"../../../../../../api/config\";\n\nimport {\n    textFieldResetChangeHandler,\n    saveCompanyGeneralInfo,\n    saveCompanyGeneralInfoData\n} from \"../actions\";\n\nconst mapStateToProps = state => ({\n    fields: state.COMPANY_INFO.forms.companyInfoForm.fields,\n    generalInfoMessage:state.COMPANY_INFO.UISettings.generalInfoMessage\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldResetChangeHandler(name, e.value));\n    },\n    saveCompanyGeneralInfo: (NameField, NumberField, CountryField, ProvinceField, CityField) => {\n\n        let data = {\n            Name: NameField,\n            Contact: NumberField,\n            CountryName: CountryField,\n            StateName: ProvinceField,\n            CityName: CityField\n        }\n        \n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"updating general info\", \"large\"));\n        instance.put(BASE_URL+'User/Dashboard/Company/UpdateCompanyGeneral', data)\n        .then(res => {\n            dispatch(saveCompanyGeneralInfo(res.data.message));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    },\n    fetchDataIfNeeded: () => {\n        instance.get(BASE_URL+'User/Dashboard/Company/GetCompanyGeneral')\n        .then(res => {\n            dispatch(saveCompanyGeneralInfoData(res.data));\n        })\n        .catch(error => {\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    saveCompanyGeneralInfo: () => {\n        dispatchProps.saveCompanyGeneralInfo(stateProps.fields.NameField.value, stateProps.fields.NumberField.value, stateProps.fields.CountryField.value, stateProps.fields.ProvinceField.value, stateProps.fields.CityField.value)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(CompanySettingGeneral);"]},"metadata":{},"sourceType":"module"}