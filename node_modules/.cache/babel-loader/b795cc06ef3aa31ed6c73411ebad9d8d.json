{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Dashboard\\\\Candidates\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, CircularProgress, Box } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { NavLink } from \"react-router-dom\";\nimport LinkedInLogo from \"../../../../resources/images/social/linkedin.png\";\nimport PlatformsLogo from \"../../../../resources/images/social/platforms.png\";\nimport SocialImg from \"../../../../resources/images/social/social.png\";\nimport AlertDialog from \"../../../common/ReduxBased/confirmationDialog/container\";\nimport ContactViaEmail from \"../../JDBuilding/Advertise/ContactViaEmail/container\";\n\nclass Candidates extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      userid: \"\",\n      sendEmailOpen: false,\n      currentUserVal: \"\"\n    };\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n\n    this.showAlertDialog = (value, id) => {\n      this.setState({\n        open: value,\n        userid: id\n      });\n    };\n\n    this.showEmailSendAlertDialog = (value, data) => {\n      this.setState({\n        sendEmailOpen: value,\n        currentUserVal: data\n      });\n    };\n\n    this.sendEmailToCandidate = () => {\n      let userData = this.state.currentUserVal;\n      this.props.sendEmailToCandidate(userData);\n      this.setState({\n        sendEmailOpen: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      candidateList\n    } = this.props;\n    return React.createElement(React.Fragment, null, this.state.open ? React.createElement(AlertDialog, {\n      customClass: classes.removeSubActionMainDialog,\n      maxWidth: 'md',\n      open: this.state.open,\n      showTitle: false,\n      message: React.createElement(CvPreview, {\n        userid: this.state.userid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      applyButtonText: \"Done\",\n      hideApplyButton: true,\n      cancelAlertDialog: () => this.showAlertDialog(false),\n      closeAlertDialog: () => this.showAlertDialog(false),\n      applyAlertDialog: () => this.showAlertDialog(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }) : null, this.state.sendEmailOpen ? React.createElement(AlertDialog, {\n      customClass: classes.removeSubActionMainDialog,\n      maxWidth: 'md',\n      open: this.state.sendEmailOpen,\n      showTitle: true,\n      title: \"Send email to candidate\",\n      message: React.createElement(ContactViaEmail, {\n        currentUserVal: this.state.currentUserVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      applyButtonText: \"Send\",\n      cancelAlertDialog: () => this.showEmailSendAlertDialog(false),\n      closeAlertDialog: () => this.showEmailSendAlertDialog(false),\n      applyAlertDialog: () => this.sendEmailToCandidate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: classes.additionalinfowrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.advertiseHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Suggested Candidate from Top Hiring Platform\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"View all\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.suggestedCandidateWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, candidateList.map((item, index) => React.createElement(\"div\", {\n      className: classes.suggestedCandidate,\n      key: item.candidate_Guid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.suggestedCandidateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, item.candidate_Name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.job_Title)), React.createElement(\"div\", {\n      className: classes.suggestedCandidatePercentage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.matchpercentageWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Matching Percentage\"), React.createElement(Box, {\n      position: \"relative\",\n      display: \"inline-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      variant: \"determinate\",\n      value: item.candidate_Matched_Stats.candidate_Matched_Percentage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: classes.matchpercentage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, item.candidate_Matched_Stats.candidate_Matched_Percentage))), React.createElement(\"div\", {\n      className: classes.suggestedCandidateContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => this.showEmailSendAlertDialog(true, item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Contact via email\"), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => this.showAlertDialog(true, item.candidate_Guid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"View Profile\"))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Candidates);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/Candidates/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","CircularProgress","Box","AddIcon","NavLink","LinkedInLogo","PlatformsLogo","SocialImg","AlertDialog","ContactViaEmail","Candidates","state","open","userid","sendEmailOpen","currentUserVal","componentDidMount","props","fetchDataIfNeeded","showAlertDialog","value","id","setState","showEmailSendAlertDialog","data","sendEmailToCandidate","userData","render","classes","candidateList","removeSubActionMainDialog","additionalinfowrapper","advertiseHeader","suggestedCandidateWrapper","map","item","index","suggestedCandidate","candidate_Guid","suggestedCandidateTitle","candidate_Name","job_Title","suggestedCandidatePercentage","matchpercentageWrapper","candidate_Matched_Stats","candidate_Matched_Percentage","matchpercentage","suggestedCandidateContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, CircularProgress, Box } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LinkedInLogo from \"../../../../resources/images/social/linkedin.png\";\r\nimport PlatformsLogo from \"../../../../resources/images/social/platforms.png\";\r\nimport SocialImg from \"../../../../resources/images/social/social.png\";\r\nimport AlertDialog from \"../../../common/ReduxBased/confirmationDialog/container\";\r\nimport ContactViaEmail from \"../../JDBuilding/Advertise/ContactViaEmail/container\";\r\n\r\nclass Candidates extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        userid: \"\",\r\n        sendEmailOpen: false,\r\n        currentUserVal: \"\"\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.fetchDataIfNeeded();\r\n    }\r\n\r\n    showAlertDialog = (value, id) => {\r\n        this.setState({\r\n            open: value,\r\n            userid: id\r\n        })\r\n    }\r\n\r\n    showEmailSendAlertDialog = (value, data) => {\r\n        this.setState({\r\n            sendEmailOpen: value,\r\n            currentUserVal: data\r\n        })\r\n    }\r\n\r\n    sendEmailToCandidate = () => {\r\n        let userData = this.state.currentUserVal;\r\n        this.props.sendEmailToCandidate(userData);\r\n        this.setState({\r\n            sendEmailOpen: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            candidateList\r\n        } = this.props;\r\n        return (\r\n            <>\r\n               {\r\n                   this.state.open ? \r\n                   <AlertDialog\r\n                    customClass={classes.removeSubActionMainDialog}\r\n                    maxWidth={'md'}\r\n                    open={this.state.open}\r\n                    showTitle={false}\r\n                    message={<CvPreview userid={this.state.userid}/>}\r\n                    applyButtonText={\"Done\"}\r\n                    hideApplyButton={true}\r\n                    cancelAlertDialog={() => this.showAlertDialog(false)}\r\n                    closeAlertDialog={() => this.showAlertDialog(false)}\r\n                    applyAlertDialog={() => this.showAlertDialog(false)}\r\n                /> : null }\r\n\r\n                {\r\n                   this.state.sendEmailOpen ? \r\n                   <AlertDialog\r\n                    customClass={classes.removeSubActionMainDialog}\r\n                    maxWidth={'md'}\r\n                    open={this.state.sendEmailOpen}\r\n                    showTitle={true}\r\n                    title={\"Send email to candidate\"}\r\n                    message={<ContactViaEmail currentUserVal={this.state.currentUserVal}/>}\r\n                    applyButtonText={\"Send\"}\r\n                    cancelAlertDialog={() => this.showEmailSendAlertDialog(false)}\r\n                    closeAlertDialog={() => this.showEmailSendAlertDialog(false)}\r\n                    applyAlertDialog={() => this.sendEmailToCandidate()}\r\n                /> : null }\r\n\r\n                <div className={classes.additionalinfowrapper}>\r\n                    {/* <div className=\"actionbtn\">\r\n                        <Button variant=\"outlined\" className={classes.searchsubmitbtn} startIcon={<AddIcon />} >\r\n                            Add Collaborators\r\n                        </Button>\r\n                        <Button variant=\"outlined\" className={classes.searchsubmitbtn} >\r\n                            Preview\r\n                        </Button>\r\n                    </div> */}\r\n\r\n                    <Grid container>\r\n\r\n                        <Grid item lg={9}>\r\n                            <div className={classes.advertiseHeader}>\r\n                                <h3>Suggested Candidate from Top Hiring Platform</h3>\r\n                                <span>View all</span>\r\n                            </div>\r\n                            <div >\r\n                                <div className={classes.suggestedCandidateWrapper} >\r\n                                    {\r\n                                        candidateList.map((item, index) => (\r\n                                            <div className={classes.suggestedCandidate} key={item.candidate_Guid}>\r\n\r\n                                                <div className={classes.suggestedCandidateTitle} >\r\n                                                    <h3>{item.candidate_Name}</h3>\r\n                                                    <p>{item.job_Title}</p>\r\n                                                </div>\r\n\r\n                                                <div className={classes.suggestedCandidatePercentage}>\r\n\r\n                                                    {/* <CircularProgress variant=\"determinate\" value={75}  /> */}\r\n                                                    <div className={classes.matchpercentageWrapper} >\r\n                                                        <p>Matching Percentage</p>\r\n                                                        <Box position=\"relative\" display=\"inline-flex\" >\r\n                                                            <CircularProgress variant=\"determinate\" value={item.candidate_Matched_Stats.candidate_Matched_Percentage} />\r\n\r\n                                                        </Box>\r\n                                                        <p className={classes.matchpercentage} >{item.candidate_Matched_Stats.candidate_Matched_Percentage}</p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className={classes.suggestedCandidateContact}>\r\n                                                    <Button variant=\"outlined\" color=\"primary\" onClick={() => this.showEmailSendAlertDialog(true, item)}>Contact via email</Button>\r\n                                                    <Button variant=\"outlined\" color=\"primary\" onClick={() => this.showAlertDialog(true, item.candidate_Guid)}>View Profile</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                </div>\r\n                                <div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                      </Grid>\r\n\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Candidates);"]},"metadata":{},"sourceType":"module"}