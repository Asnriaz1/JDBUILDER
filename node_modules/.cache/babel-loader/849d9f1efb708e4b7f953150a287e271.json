{"ast":null,"code":"import { connect } from \"react-redux\";\nimport AdditionalInfoMetaFields from \"./component\";\nimport { textFieldChangeHandler, selectFieldChangeHandler, submitSkillFormHandler, saveUpdatedSkillTitle, submitLanguageFormHandler, recommendedSkillActiveHandler, removeSkillHandler, removeLanguageHandler } from \"../actions\";\nimport instance, { SKILLS_URL } from \"../../../../api/config\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\n\nconst mapStateToProps = state => ({\n  fields: state.ADDITIONALINFO.forms.additionalinfoForm.fields,\n  skillsData: state.ADDITIONALINFO.data.skillsData,\n  languagesData: state.ADDITIONALINFO.data.languagesData,\n  recommendedSkills: state.ADDITIONALINFO.data.recommendedSkills\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldChangeHandler(name, e.value));\n  },\n  selectFieldChangeHandler: (name, e) => {\n    dispatch(selectFieldChangeHandler(name, e));\n  },\n  submitSkillFormHandler: (skillsField, skillsLevelField, skillsImportanceField, skillsData) => {\n    let newSkill = {\n      id: skillsField,\n      title: skillsField,\n      level: skillsLevelField[0].value,\n      importance: skillsImportanceField[0].value\n    };\n    let isNewSkill = true;\n    isNewSkill = skillsData.some(item => skillsField[0] === item.title[0]);\n\n    if (skillsData.length > 0 && isNewSkill) {\n      return;\n    }\n\n    dispatch(submitSkillFormHandler(newSkill));\n  },\n  submitLanguageFormHandler: (languageField, languageLevelField, languageImportanceField, languagesData) => {\n    let newLanguage = {\n      id: languageField[0].id,\n      title: languageField[0].value,\n      level: languageLevelField[0].value,\n      importance: languageImportanceField[0].value\n    };\n    dispatch(submitLanguageFormHandler(newLanguage));\n  },\n  fetchDataIfNeeded: () => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n    instance.get(SKILLS_URL).then(res => {\n      dispatch(saveUpdatedSkillTitle(res.data.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  },\n  recommendedSkillActiveHandler: value => {\n    let data = {\n      value: value.title,\n      label: value.title,\n      id: value.id\n    };\n    let level = {\n      value: value.level,\n      label: value.level\n    };\n    let importance = {\n      value: value.importance,\n      label: value.importance\n    };\n    dispatch(selectFieldChangeHandler('skillsField', data.value));\n    dispatch(selectFieldChangeHandler('skillsLevelField', level));\n    dispatch(selectFieldChangeHandler('skillsImportanceField', importance)); // dispatch(recommendedSkillActiveHandler(value));\n  },\n  removeSkillHandler: value => {\n    dispatch(removeSkillHandler(value));\n  },\n  removeLanguageHandler: value => {\n    dispatch(removeLanguageHandler(value));\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  submitSkillFormHandler: () => {\n    dispatchProps.submitSkillFormHandler(stateProps.fields.skillsField.value, stateProps.fields.skillsLevelField.value, stateProps.fields.skillsImportanceField.value, stateProps.skillsData);\n  },\n  submitLanguageFormHandler: () => {\n    dispatchProps.submitLanguageFormHandler(stateProps.fields.languageField.value, stateProps.fields.languageLevelField.value, stateProps.fields.languageImportanceField.value, stateProps.languagesData);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AdditionalInfoMetaFields);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/AdditionalInfo/MetaFields/container.js"],"names":["connect","AdditionalInfoMetaFields","textFieldChangeHandler","selectFieldChangeHandler","submitSkillFormHandler","saveUpdatedSkillTitle","submitLanguageFormHandler","recommendedSkillActiveHandler","removeSkillHandler","removeLanguageHandler","instance","SKILLS_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","mapStateToProps","state","fields","ADDITIONALINFO","forms","additionalinfoForm","skillsData","data","languagesData","recommendedSkills","mapDispatchToProps","dispatch","props","name","e","value","skillsField","skillsLevelField","skillsImportanceField","newSkill","id","title","level","importance","isNewSkill","some","item","length","languageField","languageLevelField","languageImportanceField","newLanguage","fetchDataIfNeeded","get","then","res","catch","error","label","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport AdditionalInfoMetaFields from \"./component\";\nimport {\n    textFieldChangeHandler,\n    selectFieldChangeHandler,\n    submitSkillFormHandler,\n    saveUpdatedSkillTitle,\n    submitLanguageFormHandler,\n    recommendedSkillActiveHandler,\n    removeSkillHandler,\n    removeLanguageHandler\n} from \"../actions\";\n\nimport instance, { SKILLS_URL } from \"../../../../api/config\";\n\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\n\n\nconst mapStateToProps = state => ({\n    fields: state.ADDITIONALINFO.forms.additionalinfoForm.fields,\n    skillsData: state.ADDITIONALINFO.data.skillsData,\n    languagesData: state.ADDITIONALINFO.data.languagesData,\n    recommendedSkills: state.ADDITIONALINFO.data.recommendedSkills,\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldChangeHandler(name, e.value));\n    },\n    selectFieldChangeHandler: (name, e) => {\n        dispatch(selectFieldChangeHandler(name, e));\n    },\n    submitSkillFormHandler: (skillsField, skillsLevelField, skillsImportanceField, skillsData) => {\n        let newSkill = {\n            id: skillsField,\n            title: skillsField,\n            level: skillsLevelField[0].value,\n            importance: skillsImportanceField[0].value,\n        }\n        let isNewSkill = true\n        isNewSkill = skillsData.some(item => skillsField[0] === item.title[0])\n\n        if(skillsData.length > 0 && isNewSkill) {\n            return\n        }\n        dispatch(submitSkillFormHandler(newSkill));\n    },\n    submitLanguageFormHandler: (languageField, languageLevelField, languageImportanceField, languagesData) => {\n        let newLanguage = {\n            id: languageField[0].id,\n            title: languageField[0].value,\n            level: languageLevelField[0].value,\n            importance: languageImportanceField[0].value,\n        }\n        dispatch(submitLanguageFormHandler(newLanguage));\n    },\n\n    fetchDataIfNeeded: () => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n        instance.get(SKILLS_URL)\n        .then(res => {\n            dispatch(saveUpdatedSkillTitle(res.data.data));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    },\n\n    recommendedSkillActiveHandler: (value) => {\n        let data = {\n            value: value.title,\n            label: value.title,\n            id: value.id\n        }\n        let level = {\n            value: value.level,\n            label: value.level\n        }\n        let importance = {\n            value: value.importance,\n            label: value.importance\n        }\n        dispatch(selectFieldChangeHandler('skillsField', data.value));\n        dispatch(selectFieldChangeHandler('skillsLevelField', level));\n        dispatch(selectFieldChangeHandler('skillsImportanceField', importance));\n        // dispatch(recommendedSkillActiveHandler(value));\n    },\n    removeSkillHandler: (value) => {\n        dispatch(removeSkillHandler(value));\n    },\n    removeLanguageHandler: (value) => {\n        dispatch(removeLanguageHandler(value));\n    }\n\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    submitSkillFormHandler: () => {\n        dispatchProps.submitSkillFormHandler(stateProps.fields.skillsField.value, stateProps.fields.skillsLevelField.value, stateProps.fields.skillsImportanceField.value, stateProps.skillsData)\n    },\n    submitLanguageFormHandler: () => {\n        dispatchProps.submitLanguageFormHandler(stateProps.fields.languageField.value, stateProps.fields.languageLevelField.value, stateProps.fields.languageImportanceField.value, stateProps.languagesData)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(AdditionalInfoMetaFields);"]},"metadata":{},"sourceType":"module"}