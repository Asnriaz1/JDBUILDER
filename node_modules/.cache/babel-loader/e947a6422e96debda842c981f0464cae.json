{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{styles}from\"./styles\";import{withStyles}from\"@material-ui/core/styles\";import CustomTextValidator from\"../../../../common/ReduxBased/CustomTextValidator/component\";import{Grid,Tooltip,Zoom}from\"@material-ui/core\";import ExpandMoreIcon from\"@material-ui/icons/ExpandMore\";import CheckCircleIcon from\"@material-ui/icons/CheckCircle\";import MUIEditor,{MUIEditorState,toolbarControlTypes,toHTML}from'react-mui-draft-wysiwyg';import ReactSelectValidator from\"../../../../common/ReduxBased/CustomReactSelectValidator/ReactSelectValidator\";import{FormControlLabel,Switch,Radio,RadioGroup,FormLabel}from'@material-ui/core';import{ContentState,convertToRaw,convertFromRaw}from'draft-js';import{convertToHTML,convertFromHTML}from'draft-convert';import{Divider,ExpansionPanel,ExpansionPanelDetails,ExpansionPanelSummary}from\"@material-ui/core\";var editorConfig={};var rawContent={blocks:[],entityMap:{}};var JobOpeningMetaFields=/*#__PURE__*/function(_Component){_inherits(JobOpeningMetaFields,_Component);function JobOpeningMetaFields(props){var _this;_classCallCheck(this,JobOpeningMetaFields);_this=_possibleConstructorReturn(this,_getPrototypeOf(JobOpeningMetaFields).call(this,props));_this.componentDidMount=function(){window.scrollTo(0,null);// this.props.fetchDataIfNeeded();\nvar convertedData=convertFromHTML(_this.props.rolesResHTMLData);var convertedRawData=convertToRaw(convertedData);var rawContents={blocks:_toConsumableArray(convertedRawData.blocks),entityMap:{}};_this.setState({editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(rawContents))});var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);_this.props.saveUpdatedRolesResEditor(rawContents);};_this.componentWillUnmount=function(){var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);};_this.onChange=function(newState){_this.setState({editorState:newState});};_this.appendRolesToEditor=function(value,index){_this.props.rolesActiveHandler(index);var oldData=convertToRaw(_this.state.editorState.getCurrentContent());var newItem={data:{},depth:0,entityRanges:[],inlineStyleRanges:[],key:oldData.blocks.length+\"roles\",text:value,type:'paragraph'};oldData=[].concat(_toConsumableArray(oldData.blocks),[newItem]);var rawContents={blocks:_toConsumableArray(oldData),entityMap:{}};_this.setState({editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(rawContents))});var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);_this.props.saveUpdatedRolesResEditor(rawContents);};_this.appendResHandler=function(value,index){_this.props.resActiveHandler(index);var oldData=convertToRaw(_this.state.editorState.getCurrentContent());var data=toHTML(_this.state.editorState.getCurrentContent());var newItem={data:{},depth:0,entityRanges:[],inlineStyleRanges:[],key:oldData.blocks.length+\"res\",text:value,type:'paragraph'};oldData=[].concat(_toConsumableArray(oldData.blocks),[newItem]);var rawContents={blocks:_toConsumableArray(oldData),entityMap:{}};_this.setState({editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(rawContents))});var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);_this.props.saveUpdatedRolesResEditor(rawContents);};_this.state={editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(_this.props.rawContentRolesRes))};return _this;}_createClass(JobOpeningMetaFields,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,fields=_this$props.fields,textFieldChangeHandler=_this$props.textFieldChangeHandler,addRoleIsExpanded=_this$props.addRoleIsExpanded,toggleAddRoleExpansionPanel=_this$props.toggleAddRoleExpansionPanel,addResIsExpanded=_this$props.addResIsExpanded,toggleAddResExpansionPanel=_this$props.toggleAddResExpansionPanel,rolesData=_this$props.rolesData,resData=_this$props.resData,selectFieldChangeHandler=_this$props.selectFieldChangeHandler,radioChangeHandler=_this$props.radioChangeHandler,switchChangeHandler=_this$props.switchChangeHandler;var config={toolbar:{controls:[toolbarControlTypes.bold,toolbarControlTypes.italic,toolbarControlTypes.underline,toolbarControlTypes.unorderedList,toolbarControlTypes.orderedList]},editor:{className:'texteditor'}};return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classes.metafieldwrapper},React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,md:8},React.createElement(\"span\",{className:classes.metatitle},fields.jobTitleField.label),React.createElement(CustomTextValidator,{id:fields.jobTitleField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.jobTitleField.placeholder,name:fields.jobTitleField.name,value:fields.jobTitleField.value,onChange:function onChange(value){textFieldChangeHandler(fields.jobTitleField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:\"jobtitlefield\"})),React.createElement(Grid,{item:true,xs:12,md:4},React.createElement(\"span\",{className:classes.metatitle},fields.jobCodeField.label),React.createElement(CustomTextValidator,{id:fields.jobCodeField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.jobCodeField.placeholder,name:fields.jobCodeField.name,value:fields.jobCodeField.value,onChange:function onChange(value){textFieldChangeHandler(fields.jobCodeField.name,value);},disabled:true,validators:[\"required\"],errorMessages:[\"Required\"]}))),React.createElement(\"div\",{className:classes.rolesandreswrapper},React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,md:8},React.createElement(\"span\",{className:classes.metatitle},\"Roles and Responsibilities\"),React.createElement(\"div\",{className:classes.texteditorwrapper},React.createElement(MUIEditor,{editorState:this.state.editorState,onChange:this.onChange,config:config}))),React.createElement(Grid,{item:true,xs:12,md:4},React.createElement(ExpansionPanel,{className:classes.ExpansionPanel,defaultExpanded:false,expanded:addRoleIsExpanded,onChange:function onChange(){return toggleAddRoleExpansionPanel(addRoleIsExpanded);}},React.createElement(ExpansionPanelSummary,{className:classes.ExpansionPanelSummary,expandIcon:React.createElement(ExpandMoreIcon,{className:classes.ExpandMoreIcon}),\"aria-controls\":\"panel1a-content\",id:\"panel1a-header\"},React.createElement(\"label\",{className:classes.expansionPanelTitle},\"Add Role\")),React.createElement(Divider,{className:classes.ExpansionDivider}),React.createElement(ExpansionPanelDetails,{className:classes.ExpansionPanelDetails},React.createElement(\"div\",{className:classes.suggesteditems},rolesData.map(function(item,index){return React.createElement(Tooltip,{key:index,title:item.desc,arrow:true,placement:\"left\",TransitionComponent:Zoom,TransitionProps:{timeout:600}},React.createElement(\"div\",{className:\"item\",onClick:function onClick(){return _this2.appendRolesToEditor(item.desc,index);}},React.createElement(CheckCircleIcon,{className:item.isActive?classes.addeditembg:\"\"}),React.createElement(\"span\",{className:\"description\"},item.desc)));})))),React.createElement(ExpansionPanel,{className:classes.ExpansionPanel,defaultExpanded:false,expanded:addResIsExpanded,onChange:function onChange(){return toggleAddResExpansionPanel(addResIsExpanded);}},React.createElement(ExpansionPanelSummary,{className:classes.ExpansionPanelSummary,expandIcon:React.createElement(ExpandMoreIcon,{className:classes.ExpandMoreIcon}),\"aria-controls\":\"panel1a-content\",id:\"panel1a-header\"},React.createElement(\"label\",{className:classes.expansionPanelTitle},\"Add Responsibilities\")),React.createElement(Divider,{className:classes.ExpansionDivider}),React.createElement(ExpansionPanelDetails,{className:classes.ExpansionPanelDetails},React.createElement(\"div\",{className:classes.suggesteditems},resData.map(function(item,index){return React.createElement(Tooltip,{key:index,title:item.desc,arrow:true,placement:\"left\",TransitionComponent:Zoom,TransitionProps:{timeout:600}},React.createElement(\"div\",{className:\"item\",onClick:function onClick(){return _this2.appendResHandler(item.desc,index);}},React.createElement(CheckCircleIcon,{className:item.isActive?classes.addeditembg:\"\"}),React.createElement(\"span\",null,item.desc)));}))))))),React.createElement(\"div\",{className:classes.sectiontitle},React.createElement(\"span\",null,\"Employment Detail\")),React.createElement(\"div\",{className:classes.distancewrapper},React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,md:6},React.createElement(\"span\",{className:classes.metatitle},fields.industryField.label),React.createElement(ReactSelectValidator,{id:fields.industryField.name,name:fields.industryField.name,value:fields.industryField.value,placeholder:fields.industryField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.industryField.name,value);},isSearchable:true,validators:[\"required\"],errorMessages:[\"Required\"],options:fields.industryField.options,className:\"jobtitlefield\"})),React.createElement(Grid,{item:true,xs:12,md:6},React.createElement(\"span\",{className:classes.metatitle},fields.functionField.label),React.createElement(ReactSelectValidator,{id:fields.functionField.name,name:fields.functionField.name,value:fields.functionField.value,placeholder:fields.functionField.placeholder,isClearable:true,validators:[\"required\"],errorMessages:[\"Required\"],onChange:function onChange(value){selectFieldChangeHandler(fields.functionField.name,value);},isSearchable:true,options:fields.functionField.options})))),React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,md:5},React.createElement(\"span\",{className:classes.metatitle},fields.employmenTypeField.label),React.createElement(ReactSelectValidator,{id:fields.employmenTypeField.name,name:fields.employmenTypeField.name,value:fields.employmenTypeField.value,placeholder:fields.employmenTypeField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.employmenTypeField.name,value);},isSearchable:true,validators:[\"required\"],errorMessages:[\"Required\"],options:fields.employmenTypeField.options,className:\"jobtitlefield\"})),React.createElement(Grid,{item:true,xs:12,md:2,className:classes.yeartooltips},React.createElement(\"span\",{className:classes.metatitle},fields.minYearField.label),React.createElement(CustomTextValidator,{id:fields.minYearField.name,validations:true,fullWidth:true,type:\"number\",placeholder:fields.minYearField.placeholder,name:fields.minYearField.name,value:fields.minYearField.value,onChange:function onChange(value){textFieldChangeHandler(fields.minYearField.name,value);},inputProps:{min:\"0\",max:\"30\"},validators:[\"required\"],errorMessages:[\"Required\"]}),React.createElement(Tooltip,{title:\"Minimum Required Experience\",arrow:true,placement:\"top\"},React.createElement(\"span\",{className:\"ask\"},\"?\"))),React.createElement(Grid,{item:true,xs:12,md:2,className:classes.yeartooltips},React.createElement(\"span\",{className:classes.metatitle},fields.maxYearField.label),React.createElement(CustomTextValidator,{id:fields.maxYearField.name,validations:true,fullWidth:true,type:\"number\",placeholder:fields.maxYearField.placeholder,name:fields.maxYearField.name,value:fields.maxYearField.value,onChange:function onChange(value){textFieldChangeHandler(fields.maxYearField.name,value);},inputProps:{min:\"0\",max:\"30\"},validators:[\"required\"],errorMessages:[\"Required\"]}),React.createElement(Tooltip,{title:\"Maximum Required Experience\",arrow:true,placement:\"top\"},React.createElement(\"span\",{className:\"ask\"},\"?\"))),React.createElement(Grid,{item:true,xs:12,md:3},React.createElement(\"span\",{className:classes.metatitle},fields.positionField.label),React.createElement(CustomTextValidator,{id:fields.positionField.name,validations:true,fullWidth:true,type:\"number\",placeholder:fields.positionField.placeholder,name:fields.positionField.name,value:fields.positionField.value,onChange:function onChange(value){textFieldChangeHandler(fields.positionField.name,value);},inputProps:{min:\"1\",max:\"30\"},validators:[\"required\"],errorMessages:[\"Required\"]})),React.createElement(Grid,{item:true,xs:12},React.createElement(\"span\",{style:{marginTop:13,display:\"block\"}})),React.createElement(Grid,{item:true,xs:12,md:6},React.createElement(\"span\",{className:classes.metatitle},fields.AddressField.label),React.createElement(CustomTextValidator,{id:fields.AddressField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.AddressField.placeholder,name:fields.AddressField.name,value:fields.AddressField.value,onChange:function onChange(value){textFieldChangeHandler(fields.AddressField.name,value);},validators:[\"required\"],errorMessages:[\"Required\"],className:\"jobtitlefield\"})),React.createElement(Grid,{item:true,xs:12,md:6},React.createElement(\"span\",{className:classes.metatitle},fields.QualificationField.label),React.createElement(ReactSelectValidator,{id:fields.QualificationField.name,name:fields.QualificationField.name,value:fields.QualificationField.value,placeholder:fields.QualificationField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.QualificationField.name,value);},isSearchable:true,options:fields.QualificationField.options}))),React.createElement(\"div\",{className:classes.switchfield},React.createElement(\"span\",null,fields.remoteWorkingField.label),React.createElement(FormControlLabel,{control:React.createElement(Switch,{checked:fields.remoteWorkingField.value,onChange:function onChange(e){return switchChangeHandler(fields.remoteWorkingField.name,e);},name:fields.remoteWorkingField.name,color:\"primary\"}),label:\"\"})),React.createElement(\"div\",null,React.createElement(FormLabel,{component:\"legend\"},\"Salary Type\"),React.createElement(RadioGroup,{value:fields.salaryTypeField.value,onChange:radioChangeHandler},React.createElement(FormControlLabel,{value:\"hourly\",control:React.createElement(Radio,{color:\"primary\"}),label:\"Hourly\"}),fields.salaryTypeField.value===\"hourly\"?React.createElement(CustomTextValidator,{id:fields.hourlyMaxRateField.name,validations:true,fullWidth:true,type:\"number\",placeholder:fields.hourlyMaxRateField.placeholder,name:fields.hourlyMaxRateField.name,value:fields.hourlyMaxRateField.value,onChange:function onChange(value){textFieldChangeHandler(fields.hourlyMaxRateField.name,value);},inputProps:{min:\"1\",max:\"10000\"},validators:[\"required\"],errorMessages:[\"Required\"],className:classes.radioFields}):null,React.createElement(FormControlLabel,{value:\"monthly\",control:React.createElement(Radio,{color:\"primary\"}),label:\"Monthly\"}),fields.salaryTypeField.value===\"monthly\"?React.createElement(\"div\",{style:{display:\"inline-block\"}},React.createElement(ReactSelectValidator,{id:fields.monthlySalaryRangField.name,name:fields.monthlySalaryRangField.name,value:fields.monthlySalaryRangField.value,placeholder:fields.monthlySalaryRangField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.monthlySalaryRangField.name,value);},isSearchable:true,options:fields.monthlySalaryRangField.options,className:classes.radioFields}),React.createElement(ReactSelectValidator,{id:fields.monthlyCurrencyField.name,name:fields.monthlyCurrencyField.name,value:fields.monthlyCurrencyField.value,placeholder:fields.monthlyCurrencyField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.monthlyCurrencyField.name,value);},isSearchable:true,options:fields.monthlyCurrencyField.options,className:classes.radioFields})):null,React.createElement(FormControlLabel,{value:\"yearly\",control:React.createElement(Radio,{color:\"primary\"}),label:\"Yearly\"}),fields.salaryTypeField.value===\"yearly\"?React.createElement(\"div\",{style:{display:\"inline-block\"}},React.createElement(ReactSelectValidator,{id:fields.yearlySalaryRangField.name,name:fields.yearlySalaryRangField.name,value:fields.yearlySalaryRangField.value,placeholder:fields.yearlySalaryRangField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.yearlySalaryRangField.name,value);},isSearchable:true,options:fields.yearlySalaryRangField.options,className:classes.radioFields}),React.createElement(ReactSelectValidator,{id:fields.yearlyCurrencyField.name,name:fields.yearlyCurrencyField.name,value:fields.yearlyCurrencyField.value,placeholder:fields.yearlyCurrencyField.placeholder,isClearable:true,onChange:function onChange(value){selectFieldChangeHandler(fields.yearlyCurrencyField.name,value);},isSearchable:true,options:fields.yearlyCurrencyField.options,className:classes.radioFields})):null)),React.createElement(\"div\",{className:classes.switchfield},React.createElement(\"span\",null,fields.showSalaryField.label),React.createElement(FormControlLabel,{control:React.createElement(Switch,{checked:fields.showSalaryField.value,onChange:function onChange(e){return switchChangeHandler(fields.showSalaryField.name,e);},name:fields.showSalaryField.name,color:\"primary\"}),label:\"\"}))));}}]);return JobOpeningMetaFields;}(Component);export default withStyles(styles)(JobOpeningMetaFields);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/JobOpening/MetaFields/component.js"],"names":["React","Component","styles","withStyles","CustomTextValidator","Grid","Tooltip","Zoom","ExpandMoreIcon","CheckCircleIcon","MUIEditor","MUIEditorState","toolbarControlTypes","toHTML","ReactSelectValidator","FormControlLabel","Switch","Radio","RadioGroup","FormLabel","ContentState","convertToRaw","convertFromRaw","convertToHTML","convertFromHTML","Divider","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","editorConfig","rawContent","blocks","entityMap","JobOpeningMetaFields","props","componentDidMount","window","scrollTo","convertedData","rolesResHTMLData","convertedRawData","rawContents","setState","editorState","createWithContent","currentContentAsHTML","state","getCurrentContent","saveUpdatedRolesResAsHTML","saveUpdatedRolesResEditor","componentWillUnmount","onChange","newState","appendRolesToEditor","value","index","rolesActiveHandler","oldData","newItem","data","depth","entityRanges","inlineStyleRanges","key","length","text","type","appendResHandler","resActiveHandler","rawContentRolesRes","classes","fields","textFieldChangeHandler","addRoleIsExpanded","toggleAddRoleExpansionPanel","addResIsExpanded","toggleAddResExpansionPanel","rolesData","resData","selectFieldChangeHandler","radioChangeHandler","switchChangeHandler","config","toolbar","controls","bold","italic","underline","unorderedList","orderedList","editor","className","metafieldwrapper","metatitle","jobTitleField","label","name","placeholder","jobCodeField","rolesandreswrapper","texteditorwrapper","expansionPanelTitle","ExpansionDivider","suggesteditems","map","item","desc","timeout","isActive","addeditembg","sectiontitle","distancewrapper","industryField","options","functionField","employmenTypeField","yeartooltips","minYearField","min","max","maxYearField","positionField","marginTop","display","AddressField","QualificationField","switchfield","remoteWorkingField","e","salaryTypeField","hourlyMaxRateField","radioFields","monthlySalaryRangField","monthlyCurrencyField","yearlySalaryRangField","yearlyCurrencyField","showSalaryField"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\nimport { Grid, Tooltip, Zoom } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport MUIEditor, { MUIEditorState, toolbarControlTypes, toHTML } from 'react-mui-draft-wysiwyg'\nimport ReactSelectValidator from \"../../../../common/ReduxBased/CustomReactSelectValidator/ReactSelectValidator\";\nimport { FormControlLabel, Switch, Radio, RadioGroup, FormLabel } from '@material-ui/core';\nimport { ContentState, convertToRaw, convertFromRaw } from 'draft-js'\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\n\nimport {\n    Divider,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n} from \"@material-ui/core\";\n\nconst editorConfig = {}\n  const rawContent = {\n    blocks: [],\n    entityMap: {},\n  }\n\nclass JobOpeningMetaFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editorState: MUIEditorState.createWithContent(\n                editorConfig,\n                convertFromRaw(this.props.rawContentRolesRes),\n              )\n        }\n    }\n\n    componentDidMount = () => {\n        window.scrollTo(0, null);\n        // this.props.fetchDataIfNeeded();\n\n        let convertedData = convertFromHTML(this.props.rolesResHTMLData);\n        let convertedRawData = convertToRaw(convertedData);\n\n        const rawContents = {\n            blocks: [...convertedRawData.blocks],\n            entityMap: {},\n        }\n        this.setState({\n            editorState: MUIEditorState.createWithContent(\n                editorConfig,\n                convertFromRaw(rawContents),\n              )\n        })\n\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\n        this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);\n\n        this.props.saveUpdatedRolesResEditor(rawContents);\n    }\n\n    componentWillUnmount = () => {\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\n        this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);\n    }\n   \n    onChange = (newState) => {\n        this.setState({\n            editorState: newState\n        })\n      }\n\n    appendRolesToEditor = (value, index) => {\n\n        this.props.rolesActiveHandler(index);\n        let oldData = convertToRaw(this.state.editorState.getCurrentContent());\n\n        let newItem = {\n            data: {},\n            depth: 0,\n            entityRanges: [],\n            inlineStyleRanges: [],\n            key: oldData.blocks.length+\"roles\",\n            text: value,\n            type: 'paragraph',\n          };\n        oldData = [...oldData.blocks, newItem]\n        const rawContents = {\n            blocks: [...oldData],\n            entityMap: {},\n        }\n        this.setState({\n            editorState: MUIEditorState.createWithContent(\n                editorConfig,\n                convertFromRaw(rawContents),\n              )\n        })\n\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\n        this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);\n\n        this.props.saveUpdatedRolesResEditor(rawContents);\n    }\n\n    appendResHandler = (value, index) => {\n\n        this.props.resActiveHandler(index);\n        let oldData = convertToRaw(this.state.editorState.getCurrentContent());\n        let data = toHTML(this.state.editorState.getCurrentContent());\n\n        let newItem = {\n            data: {},\n            depth: 0,\n            entityRanges: [],\n            inlineStyleRanges: [],\n            key: oldData.blocks.length+\"res\",\n            text: value,\n            type: 'paragraph',\n          };\n        oldData = [...oldData.blocks, newItem]\n        const rawContents = {\n            blocks: [...oldData],\n            entityMap: {},\n        }\n        this.setState({\n            editorState: MUIEditorState.createWithContent(\n                editorConfig,\n                convertFromRaw(rawContents),\n              )\n        })\n\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\n        this.props.saveUpdatedRolesResAsHTML(currentContentAsHTML);\n\n        this.props.saveUpdatedRolesResEditor(rawContents);\n    }\n\n    render() {\n        const {\n            classes,\n            fields,\n            textFieldChangeHandler,\n            addRoleIsExpanded,\n            toggleAddRoleExpansionPanel,\n            addResIsExpanded,\n            toggleAddResExpansionPanel,\n            rolesData,\n            resData,\n            selectFieldChangeHandler,\n            radioChangeHandler,\n            switchChangeHandler\n        } = this.props;\n        const config = {\n            toolbar: {\n               controls: [\n                   toolbarControlTypes.bold,\n                   toolbarControlTypes.italic,\n                   toolbarControlTypes.underline,\n                   toolbarControlTypes.unorderedList,\n                   toolbarControlTypes.orderedList,\n                 ],\n               },\n               editor: {\n                className: 'texteditor',\n              },\n        }; \n        return (\n            <>\n                <div className={classes.metafieldwrapper}>\n                    <Grid container>\n                        <Grid item xs={12} md={8}>\n                            <span className={classes.metatitle}>{fields.jobTitleField.label}</span>\n                            <CustomTextValidator\n                                id={fields.jobTitleField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.jobTitleField.placeholder}\n                                name={fields.jobTitleField.name}\n                                value={fields.jobTitleField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.jobTitleField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className=\"jobtitlefield\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={4}>\n                            <span className={classes.metatitle}>{fields.jobCodeField.label}</span>\n                            <CustomTextValidator\n                                id={fields.jobCodeField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.jobCodeField.placeholder}\n                                name={fields.jobCodeField.name}\n                                value={fields.jobCodeField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.jobCodeField.name,\n                                        value\n                                    );\n                                }}\n                                disabled={true}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <div className={classes.rolesandreswrapper}>\n                    <Grid container>\n                        <Grid item xs={12} md={8}>\n                            <span className={classes.metatitle}>Roles and Responsibilities</span>\n                            <div className={classes.texteditorwrapper}>\n                                <MUIEditor editorState={this.state.editorState} \n                                    onChange={this.onChange}\n                                    config={config}\n                                />\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} md={4}>\n                            <ExpansionPanel\n                                className={classes.ExpansionPanel}\n                                defaultExpanded={false}\n                                expanded={addRoleIsExpanded}\n                                onChange={() => toggleAddRoleExpansionPanel(addRoleIsExpanded)}\n                            >\n                                <ExpansionPanelSummary\n                                    className={classes.ExpansionPanelSummary}\n                                    expandIcon={<ExpandMoreIcon className={classes.ExpandMoreIcon}/>}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <label className={classes.expansionPanelTitle}>Add Role</label>\n                                </ExpansionPanelSummary>\n                                <Divider className={classes.ExpansionDivider}/>\n                                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                                    <div className={classes.suggesteditems}>\n                                        {\n                                            rolesData.map((item, index) => (\n                                                <Tooltip key={index} title={item.desc} arrow placement=\"left\" TransitionComponent={Zoom} TransitionProps={{ timeout: 600 }} >\n                                                <div className=\"item\"  onClick={() => this.appendRolesToEditor(item.desc, index)}>\n                                                    <CheckCircleIcon className={item.isActive ? classes.addeditembg : \"\"}/>\n                                                    <span className=\"description\">{item.desc}</span>\n                                                </div>\n                                                </Tooltip>\n                                            ))\n                                        }\n                                    </div>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n\n\n                            <ExpansionPanel\n                                className={classes.ExpansionPanel}\n                                defaultExpanded={false}\n                                expanded={addResIsExpanded}\n                                onChange={() => toggleAddResExpansionPanel(addResIsExpanded)}\n                            >\n                                <ExpansionPanelSummary\n                                    className={classes.ExpansionPanelSummary}\n                                    expandIcon={<ExpandMoreIcon className={classes.ExpandMoreIcon}/>}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <label className={classes.expansionPanelTitle}>Add Responsibilities</label>\n                                </ExpansionPanelSummary>\n                                <Divider className={classes.ExpansionDivider}/>\n                                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                                    <div className={classes.suggesteditems}>\n                                        {\n                                            resData.map((item, index) => (\n                                                <Tooltip key={index} title={item.desc} arrow placement=\"left\" TransitionComponent={Zoom} TransitionProps={{ timeout: 600 }}>\n                                                <div className=\"item\" onClick={() => this.appendResHandler(item.desc, index)}>\n                                                    <CheckCircleIcon className={item.isActive ? classes.addeditembg : \"\"}/>\n                                                    <span>{item.desc}</span>\n                                                </div>\n                                                </Tooltip>\n                                            ))\n                                        }\n                                    </div>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    </Grid>\n                    </div>\n\n                    {/* employment details starts here  */}\n                    <div className={classes.sectiontitle}>\n                        <span>Employment Detail</span>\n                    </div>\n                    <div className={classes.distancewrapper}>\n                        <Grid container>\n                        <Grid item xs={12} md={6}>\n                            <span className={classes.metatitle}>{fields.industryField.label}</span>\n                            <ReactSelectValidator\n                                    id={fields.industryField.name}\n                                    name={fields.industryField.name}\n                                    value={fields.industryField.value}\n                                    placeholder={fields.industryField.placeholder}\n                                    isClearable={true}\n                                    onChange={value => {\n                                        selectFieldChangeHandler(\n                                            fields.industryField.name,\n                                            value\n                                        );\n                                    }}\n                                    isSearchable={true}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    options={fields.industryField.options}\n                                    className=\"jobtitlefield\"\n                                />\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <span className={classes.metatitle}>{fields.functionField.label}</span>\n                            <ReactSelectValidator\n                                    id={fields.functionField.name}\n                                    name={fields.functionField.name}\n                                    value={fields.functionField.value}\n                                    placeholder={fields.functionField.placeholder}\n                                    isClearable={true}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    onChange={value => {\n                                        selectFieldChangeHandler(\n                                            fields.functionField.name,\n                                            value\n                                        );\n                                    }}\n                                    isSearchable={true}\n                                    options={fields.functionField.options}\n                                />\n                        </Grid>\n                    </Grid>\n                    </div>\n\n                    <Grid container>\n                        <Grid item xs={12} md={5}>\n                            <span className={classes.metatitle}>{fields.employmenTypeField.label}</span>\n                            <ReactSelectValidator\n                                    id={fields.employmenTypeField.name}\n                                    name={fields.employmenTypeField.name}\n                                    value={fields.employmenTypeField.value}\n                                    placeholder={fields.employmenTypeField.placeholder}\n                                    isClearable={true}\n                                    onChange={value => {\n                                        selectFieldChangeHandler(\n                                            fields.employmenTypeField.name,\n                                            value\n                                        );\n                                    }}\n                                    isSearchable={true}\n                                    validators={[\"required\"]}\n                                    errorMessages={[\"Required\"]}\n                                    options={fields.employmenTypeField.options}\n                                    className=\"jobtitlefield\"\n                                />\n                        </Grid>\n\n                        <Grid item xs={12} md={2} className={classes.yeartooltips}>\n                            <span className={classes.metatitle}>{fields.minYearField.label}</span>\n                            <CustomTextValidator\n                                id={fields.minYearField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"number\"\n                                placeholder={fields.minYearField.placeholder}\n                                name={fields.minYearField.name}\n                                value={fields.minYearField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.minYearField.name,\n                                        value\n                                    );\n                                }}\n                                inputProps={{ min: \"0\", max: \"30\", }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                            />\n                            <Tooltip title=\"Minimum Required Experience\" arrow placement=\"top\">\n                                <span className=\"ask\">?</span>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs={12} md={2} className={classes.yeartooltips}>\n                            <span className={classes.metatitle}>{fields.maxYearField.label}</span>\n                            <CustomTextValidator\n                                id={fields.maxYearField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"number\"\n                                placeholder={fields.maxYearField.placeholder}\n                                name={fields.maxYearField.name}\n                                value={fields.maxYearField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.maxYearField.name,\n                                        value\n                                    );\n                                }}\n                                inputProps={{ min: \"0\", max: \"30\", }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                            />\n                            <Tooltip title=\"Maximum Required Experience\" arrow placement=\"top\">\n                                <span className=\"ask\">?</span>\n                            </Tooltip>\n                        </Grid>\n\n                        <Grid item xs={12} md={3}>\n                            <span className={classes.metatitle}>{fields.positionField.label}</span>\n                            <CustomTextValidator\n                                id={fields.positionField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"number\"\n                                placeholder={fields.positionField.placeholder}\n                                name={fields.positionField.name}\n                                value={fields.positionField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.positionField.name,\n                                        value\n                                    );\n                                }}\n                                inputProps={{ min: \"1\", max: \"30\", }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <span style={{marginTop: 13, display: \"block\"}}></span>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <span className={classes.metatitle}>{fields.AddressField.label}</span>\n                            <CustomTextValidator\n                                id={fields.AddressField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.AddressField.placeholder}\n                                name={fields.AddressField.name}\n                                value={fields.AddressField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.AddressField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className=\"jobtitlefield\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <span className={classes.metatitle}>{fields.QualificationField.label}</span>\n                            <ReactSelectValidator\n                                    id={fields.QualificationField.name}\n                                    name={fields.QualificationField.name}\n                                    value={fields.QualificationField.value}\n                                    placeholder={fields.QualificationField.placeholder}\n                                    isClearable={true}\n                                    onChange={value => {\n                                        selectFieldChangeHandler(\n                                            fields.QualificationField.name,\n                                            value\n                                        );\n                                    }}\n                                    isSearchable={true}\n                                    options={fields.QualificationField.options}\n                                />\n                        </Grid>\n                        \n                    </Grid>\n\n                    {/* salary details start here  */}\n                    <div className={classes.switchfield}>\n                    <span>{fields.remoteWorkingField.label}</span>\n                    <FormControlLabel\n                        control={\n                        <Switch\n                            checked={fields.remoteWorkingField.value}\n                            onChange={(e) => switchChangeHandler(fields.remoteWorkingField.name, e)}\n                            name={fields.remoteWorkingField.name}\n                            color=\"primary\"\n                        />\n                        }\n                        label=\"\"\n                    />\n                    </div>\n\n                    <div>\n                            <FormLabel component=\"legend\">Salary Type</FormLabel>\n                            <RadioGroup\n                                value={fields.salaryTypeField.value} \n                                onChange={radioChangeHandler}\n                            >\n                                <FormControlLabel value=\"hourly\" control={<Radio color=\"primary\" />} label=\"Hourly\" />\n                                {\n                                    fields.salaryTypeField.value === \"hourly\" ? \n                                <CustomTextValidator\n                                id={fields.hourlyMaxRateField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"number\"\n                                placeholder={fields.hourlyMaxRateField.placeholder}\n                                name={fields.hourlyMaxRateField.name}\n                                value={fields.hourlyMaxRateField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.hourlyMaxRateField.name,\n                                        value\n                                    );\n                                }}\n                                inputProps={{ min: \"1\", max: \"10000\", }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.radioFields}\n                            /> : null }\n                                \n                                <FormControlLabel value=\"monthly\" control={<Radio color=\"primary\" />} label=\"Monthly\" />\n\n                                {\n                                    fields.salaryTypeField.value === \"monthly\" ? \n                                <div style={{display: \"inline-block\"}}>\n                                    <ReactSelectValidator\n                                        id={fields.monthlySalaryRangField.name}\n                                        name={fields.monthlySalaryRangField.name}\n                                        value={fields.monthlySalaryRangField.value}\n                                        placeholder={fields.monthlySalaryRangField.placeholder}\n                                        isClearable={true}\n                                        onChange={value => {\n                                            selectFieldChangeHandler(\n                                                fields.monthlySalaryRangField.name,\n                                                value\n                                            );\n                                        }}\n                                        isSearchable={true}\n                                        options={fields.monthlySalaryRangField.options}\n                                        className={classes.radioFields}\n                                    />\n\n                                    <ReactSelectValidator\n                                        id={fields.monthlyCurrencyField.name}\n                                        name={fields.monthlyCurrencyField.name}\n                                        value={fields.monthlyCurrencyField.value}\n                                        placeholder={fields.monthlyCurrencyField.placeholder}\n                                        isClearable={true}\n                                        onChange={value => {\n                                            selectFieldChangeHandler(\n                                                fields.monthlyCurrencyField.name,\n                                                value\n                                            );\n                                        }}\n                                        isSearchable={true}\n                                        options={fields.monthlyCurrencyField.options}\n                                        className={classes.radioFields}\n                                    />\n                                </div> : null }\n\n                                <FormControlLabel value=\"yearly\" control={<Radio color=\"primary\" />} label=\"Yearly\" />\n                                {\n                                    fields.salaryTypeField.value === \"yearly\" ? \n                                <div style={{display: \"inline-block\"}}>\n                                    <ReactSelectValidator\n                                        id={fields.yearlySalaryRangField.name}\n                                        name={fields.yearlySalaryRangField.name}\n                                        value={fields.yearlySalaryRangField.value}\n                                        placeholder={fields.yearlySalaryRangField.placeholder}\n                                        isClearable={true}\n                                        onChange={value => {\n                                            selectFieldChangeHandler(\n                                                fields.yearlySalaryRangField.name,\n                                                value\n                                            );\n                                        }}\n                                        isSearchable={true}\n                                        options={fields.yearlySalaryRangField.options}\n                                        className={classes.radioFields}\n                                    />\n\n                                    <ReactSelectValidator\n                                        id={fields.yearlyCurrencyField.name}\n                                        name={fields.yearlyCurrencyField.name}\n                                        value={fields.yearlyCurrencyField.value}\n                                        placeholder={fields.yearlyCurrencyField.placeholder}\n                                        isClearable={true}\n                                        onChange={value => {\n                                            selectFieldChangeHandler(\n                                                fields.yearlyCurrencyField.name,\n                                                value\n                                            );\n                                        }}\n                                        isSearchable={true}\n                                        options={fields.yearlyCurrencyField.options}\n                                        className={classes.radioFields}\n                                    />\n                                </div> : null }\n                            </RadioGroup>\n                    </div>\n\n                    <div className={classes.switchfield}>\n                    <span>{fields.showSalaryField.label}</span>\n                    <FormControlLabel\n                        control={\n                        <Switch\n                            checked={fields.showSalaryField.value}\n                            onChange={(e) => switchChangeHandler(fields.showSalaryField.name, e)}\n                            name={fields.showSalaryField.name}\n                            color=\"primary\"\n                        />\n                        }\n                        label=\"\"\n                    />\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(JobOpeningMetaFields);"]},"metadata":{},"sourceType":"module"}