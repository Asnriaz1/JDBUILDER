{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\common\\\\ReduxBased\\\\LoadingSpinner\\\\component.js\";\nimport React, { Component } from \"react\";\nimport { Paper, CircularProgress, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./styles\";\nimport PropTypes from \"prop-types\";\n\nclass LoadingSpinner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.loadingRef = React.createRef();\n    this.state = {\n      sizeVariants: {\n        large: {\n          spinnerSize: 50,\n          variant: \"h3\"\n        },\n        default: {\n          spinnerSize: 40,\n          variant: \"h4\"\n        },\n        small: {\n          spinnerSize: 30,\n          variant: \"h5\"\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      classes,\n      size\n    } = this.props;\n    if (size !== \"large\") this.loadingRef.current.parentNode.classList.add(classes.onParentDiv);\n  }\n\n  componentWillUnmount() {\n    const {\n      classes,\n      size\n    } = this.props;\n    if (size !== \"large\") this.loadingRef.current.parentNode.classList.remove(classes.onParentDiv);\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      size,\n      text,\n      ...rest\n    } = this.props;\n    const {\n      spinnerSize,\n      variant\n    } = this.state.sizeVariants[size];\n    const currentParentDiv = size === \"large\" //if size = large -> position=fixed, else -> position=absolute\n    ? `${classes.parentDiv} ${classes.largeParentDiv}` : `${classes.parentDiv} ${classes.defaultParentDiv}`;\n    const showLoading = loading ? \"show\" : \"\";\n    return React.createElement(Paper, {\n      ref: this.loadingRef,\n      component: \"div\",\n      className: `${currentParentDiv} ${showLoading}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.loadingContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CircularProgress, Object.assign({\n      size: spinnerSize,\n      className: classes.loading,\n      color: \"primary\"\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), !!text ? React.createElement(Typography, {\n      variant: variant,\n      className: `${classes.textContent} ${classes[size]}`,\n      color: \"primary\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, text) : null));\n  }\n\n}\n\nLoadingSpinner.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired\n};\nLoadingSpinner.defaultProps = {\n  loading: false,\n  text: \"Loading...\",\n  size: \"large\"\n};\nexport default withStyles(styles)(LoadingSpinner);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/common/ReduxBased/LoadingSpinner/component.js"],"names":["React","Component","Paper","CircularProgress","Typography","withStyles","styles","PropTypes","LoadingSpinner","loadingRef","createRef","state","sizeVariants","large","spinnerSize","variant","default","small","componentDidMount","classes","size","props","current","parentNode","classList","add","onParentDiv","componentWillUnmount","remove","render","loading","text","rest","currentParentDiv","parentDiv","largeParentDiv","defaultParentDiv","showLoading","loadingContent","textContent","propTypes","bool","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Paper, CircularProgress, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./styles\";\nimport PropTypes from \"prop-types\";\n\nclass LoadingSpinner extends Component {\n\tloadingRef = React.createRef();\n\tstate = {\n\t\tsizeVariants: {\n\t\t\tlarge: { spinnerSize: 50, variant: \"h3\" },\n\t\t\tdefault: { spinnerSize: 40, variant: \"h4\" },\n\t\t\tsmall: { spinnerSize: 30, variant: \"h5\" }\n\t\t}\n\t};\n\tcomponentDidMount() {\n\t\tconst { classes, size } = this.props;\n\t\tif (size !== \"large\") this.loadingRef.current.parentNode.classList.add(classes.onParentDiv);\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { classes, size } = this.props;\n\t\tif (size !== \"large\") this.loadingRef.current.parentNode.classList.remove(classes.onParentDiv);\n\t}\n\trender() {\n\t\tconst { classes, loading, size, text, ...rest } = this.props;\n\t\tconst { spinnerSize, variant } = this.state.sizeVariants[size];\n\t\tconst currentParentDiv =\n\t\t\tsize === \"large\" //if size = large -> position=fixed, else -> position=absolute\n\t\t\t\t? `${classes.parentDiv} ${classes.largeParentDiv}`\n\t\t\t\t: `${classes.parentDiv} ${classes.defaultParentDiv}`;\n\t\tconst showLoading = loading ? \"show\" : \"\";\n\t\treturn (\n\t\t\t<Paper ref={this.loadingRef} component=\"div\" className={`${currentParentDiv} ${showLoading}`}>\n\t\t\t\t<div className={classes.loadingContent}>\n\t\t\t\t\t<CircularProgress size={spinnerSize} className={classes.loading} color=\"primary\" {...rest} />\n\t\t\t\t\t{!!text ? (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\tclassName={`${classes.textContent} ${classes[size]}`}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tnoWrap>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</Paper>\n\t\t);\n\t}\n}\n\nLoadingSpinner.propTypes = {\n\tloading: PropTypes.bool.isRequired,\n\ttext: PropTypes.string.isRequired,\n\tsize: PropTypes.string.isRequired\n};\n\nLoadingSpinner.defaultProps = {\n\tloading: false,\n\ttext: \"Loading...\",\n\tsize: \"large\"\n};\n\nexport default withStyles(styles)(LoadingSpinner);\n"]},"metadata":{},"sourceType":"module"}