{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Assistant\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Popper } from \"@material-ui/core\";\nimport RobotImg from \"../../../resources/images/robot.png\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { Animated } from \"react-animated-css\";\n\nclass Assistant extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      anchorEl: null,\n      menu: 0,\n      question: [{\n        data: [{\n          id: 10,\n          title: \"How to make my JD more readable?\",\n          answer: \"Try adding one liners e.g (Write android apps). Avoid using compound and long sentences.\"\n        }, {\n          id: 11,\n          title: \"How to increase score of my JD?\",\n          answer: \"Avoid adding vastly different skills e.g mix web and backend. Be Specific and keep it short.\"\n        }, {\n          id: 12,\n          title: \"How to increase chances of finding a right candidate?\",\n          answer: \"Try recommended skills and roles. Avoid adding non standard.\"\n        }, {\n          id: 13,\n          title: \"How long the JD should be?\",\n          answer: \"One A4 page max 240 words. 1500-2000 characters.\"\n        }]\n      }, {\n        data: [{\n          id: 110,\n          title: \"What should be the title?\",\n          answer: \"Be specific like Android developer or frontend developer. Avoid generalized terms e.g software engineer.\"\n        }, {\n          id: 111,\n          title: \"What should be the salary range?\",\n          answer: \"Depending on level PKR 50,000 - 200,000. Quote higher for a rare skill. If remote then same range or different if hiring as contractor.\"\n        }, {\n          id: 112,\n          title: \"Should I allow remote work or not?\",\n          answer: \"If a person has good work system or if you have hosted servers then yes. In case of on site or federated data then no.\"\n        }]\n      }, {\n        data: [{\n          id: 1110,\n          title: \"How can i find a right candidate?\",\n          answer: \"Pick from recommended skills.\"\n        }, {\n          id: 1111,\n          title: \"How to maximise reach?\",\n          answer: \"Add standard used words as in everyday language.\"\n        }]\n      }],\n      asked: []\n    };\n\n    this.popupOpenHandler = e => {\n      this.setState({\n        open: !this.state.open,\n        anchorEl: e.target\n      });\n    };\n\n    this.menuHandler = value => {\n      this.setState({\n        menu: value\n      });\n    };\n\n    this.addAskedHandler = value => {\n      let data = value;\n      this.setState({\n        asked: [...this.state.asked, data]\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.needhelpwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Animated, {\n      animationIn: \"bounceInLeft\",\n      animationOut: \"zoomOutDown\",\n      animationInDuration: 10000,\n      animationOutDuration: 10000,\n      isVisible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: RobotImg,\n      alt: \"\",\n      className: classes.robotimage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Popper, {\n      className: classes.assistantpoper,\n      id: \"assistantopen\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.open,\n      placement: \"left-end\",\n      transition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.assistantwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.assitantheader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ClearIcon, {\n      onClick: this.popupOpenHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Tal\")), React.createElement(\"div\", {\n      className: classes.assistantbody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"robot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: RobotImg,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"hello\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Hi there, thanks for reaching out! I am Tal.\"), React.createElement(\"div\", {\n      className: classes.assistantmenuwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: e => this.menuHandler(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"JD Optimisation\"), React.createElement(\"span\", {\n      onClick: e => this.menuHandler(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"JD Template\"), React.createElement(\"span\", {\n      onClick: e => this.menuHandler(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Candidate\")), React.createElement(\"div\", {\n      className: classes.assistantcardwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.question[this.state.menu].data.map((item, index) => React.createElement(\"div\", {\n      key: index,\n      className: classes.assistantquestion,\n      onClick: e => this.addAskedHandler(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, item.title))), React.createElement(\"div\", {\n      className: classes.assistantcardwrapperquestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.asked.map((item, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, item.title), React.createElement(\"span\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, item.answer))))))), React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.needhelpwrapperbtn,\n      onClick: e => this.popupOpenHandler(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Need Help?\"));\n  }\n\n}\n\nexport default withStyles(styles)(Assistant);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Assistant/component.js"],"names":["React","Component","styles","withStyles","Button","Popper","RobotImg","ClearIcon","Animated","Assistant","state","open","anchorEl","menu","question","data","id","title","answer","asked","popupOpenHandler","e","setState","target","menuHandler","value","addAskedHandler","render","classes","props","needhelpwrapper","robotimage","assistantpoper","assistantwrapper","assitantheader","assistantbody","assistantmenuwrapper","assistantcardwrapper","map","item","index","assistantquestion","assistantcardwrapperquestions","needhelpwrapperbtn"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Popper } from \"@material-ui/core\";\nimport RobotImg from \"../../../resources/images/robot.png\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {Animated} from \"react-animated-css\";\n\nclass Assistant extends Component {\n    state = {\n        open: false,\n        anchorEl: null,\n        menu: 0,\n        question: [\n            {\n                data: [\n                    {\n                        id: 10,\n                        title: \"How to make my JD more readable?\",\n                        answer: \"Try adding one liners e.g (Write android apps). Avoid using compound and long sentences.\"\n                    },\n                    {\n                        id: 11,\n                        title: \"How to increase score of my JD?\",\n                        answer: \"Avoid adding vastly different skills e.g mix web and backend. Be Specific and keep it short.\"\n                    },\n                    {\n                        id: 12,\n                        title: \"How to increase chances of finding a right candidate?\",\n                        answer: \"Try recommended skills and roles. Avoid adding non standard.\"\n                    },\n                    {\n                        id: 13,\n                        title: \"How long the JD should be?\",\n                        answer: \"One A4 page max 240 words. 1500-2000 characters.\"\n                    }\n                ]\n            },\n            {\n                data: [\n                    {\n                        id: 110,\n                        title: \"What should be the title?\",\n                        answer: \"Be specific like Android developer or frontend developer. Avoid generalized terms e.g software engineer.\"\n                    },\n                    {\n                        id: 111,\n                        title: \"What should be the salary range?\",\n                        answer: \"Depending on level PKR 50,000 - 200,000. Quote higher for a rare skill. If remote then same range or different if hiring as contractor.\"\n                    },\n                    {\n                        id: 112,\n                        title: \"Should I allow remote work or not?\",\n                        answer: \"If a person has good work system or if you have hosted servers then yes. In case of on site or federated data then no.\"\n                    }\n                ]\n            },\n            {\n                data: [\n                    {\n                        id: 1110,\n                        title: \"How can i find a right candidate?\",\n                        answer: \"Pick from recommended skills.\"\n                    },\n                    {\n                        id: 1111,\n                        title: \"How to maximise reach?\",\n                        answer: \"Add standard used words as in everyday language.\"\n                    }\n                ]\n            }\n        ],\n        asked: [\n        ]\n    }\n\n    popupOpenHandler = (e) => {\n        this.setState({\n            open: !this.state.open,\n            anchorEl: e.target\n        })\n    }\n\n    menuHandler = (value) => {\n        this.setState({\n            menu: value\n        })\n    }\n\n    addAskedHandler = (value) => {\n        let data = value;\n        this.setState({\n            asked: [...this.state.asked, data]\n        })\n    }\n    render() {\n        const {\n            classes,\n            } = this.props;\n        return (\n            \n            <div className={classes.needhelpwrapper}>\n                <Animated animationIn=\"bounceInLeft\" animationOut=\"zoomOutDown\" animationInDuration={10000} animationOutDuration={10000} isVisible={true}>\n                    <img src={RobotImg} alt=\"\" className={classes.robotimage} />\n                </Animated>\n                \n                <Popper className={classes.assistantpoper} id={\"assistantopen\"} anchorEl={this.state.anchorEl} open={this.state.open} placement={\"left-end\"} transition>\n                    <div className={classes.assistantwrapper}>\n                        <div className={classes.assitantheader}>\n                            <ClearIcon onClick={this.popupOpenHandler}/>\n                            <span>Tal</span>\n                        </div>\n                        <div className={classes.assistantbody}>\n                            <div className=\"robot\">\n                                <img src={RobotImg} alt=\"\" />\n                            </div>\n                            <span className=\"hello\" >Hi there, thanks for reaching out! I am Tal.</span>\n                            <div className={classes.assistantmenuwrapper}>\n                                <span onClick={(e) => this.menuHandler(0)}>JD Optimisation</span>\n                                <span onClick={(e) => this.menuHandler(1)}>JD Template</span>\n                                <span onClick={(e) => this.menuHandler(2)}>Candidate</span>\n                            </div>\n                            <div className={classes.assistantcardwrapper}>\n                                {\n                                    this.state.question[this.state.menu].data.map((item, index) => (\n                                        <div key={index} className={classes.assistantquestion} onClick={(e) => this.addAskedHandler(item)}>\n                                            {item.title}\n                                        </div>\n                                    ))\n                                }\n                            </div>\n\n                            <div className={classes.assistantcardwrapperquestions}>\n                                {\n                                    this.state.asked.map((item, index) => (\n                                            <div key={index}>\n                                                <span className=\"right\">{item.title}</span>\n                                                <span className=\"left\">{item.answer}</span>\n                                            </div>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </Popper>\n                <Button variant=\"outlined\" className={classes.needhelpwrapperbtn} onClick={(e) => this.popupOpenHandler(e)}>\n                    Need Help?\n                </Button>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Assistant);"]},"metadata":{},"sourceType":"module"}