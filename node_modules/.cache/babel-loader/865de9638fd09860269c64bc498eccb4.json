{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{styles}from\"./styles\";import{withStyles}from\"@material-ui/core/styles\";import{Grid,Button,Tooltip,MenuItem}from\"@material-ui/core\";import CustomTextValidator from\"../../../../common/ReduxBased/CustomTextValidator/component\";import ReactSelectValidator from\"../../../../common/ReduxBased/CustomReactSelectValidator/ReactSelectValidator\";import CancelIcon from'@material-ui/icons/Cancel';import CheckCircleIcon from'@material-ui/icons/CheckCircle';import{ValidatorForm}from\"react-material-ui-form-validator\";import axios from'axios';var AdditionalInfoMetaFields=/*#__PURE__*/function(_Component){_inherits(AdditionalInfoMetaFields,_Component);function AdditionalInfoMetaFields(){var _getPrototypeOf2;var _this;_classCallCheck(this,AdditionalInfoMetaFields);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AdditionalInfoMetaFields)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.submitSkillFormHandler=function(){_this.props.submitSkillFormHandler();};_this.submitLanguageFormHandler=function(){_this.props.submitLanguageFormHandler();};_this.componentDidMount=function(){_this.props.fetchDataIfNeeded();};return _this;}_createClass(AdditionalInfoMetaFields,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,fields=_this$props.fields,selectFieldChangeHandler=_this$props.selectFieldChangeHandler,textFieldChangeHandler=_this$props.textFieldChangeHandler,skillsData=_this$props.skillsData,languagesData=_this$props.languagesData,recommendedSkills=_this$props.recommendedSkills,submitLanguageFormHandler=_this$props.submitLanguageFormHandler,recommendedSkillActiveHandler=_this$props.recommendedSkillActiveHandler,removeSkillHandler=_this$props.removeSkillHandler,removeLanguageHandler=_this$props.removeLanguageHandler;return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classes.metafieldwrapper},React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,md:8},React.createElement(Grid,{container:true,item:true,xs:12,md:12},React.createElement(Grid,{item:true,xs:12,md:4,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},fields.skillsField.label)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},fields.skillsLevelField.label)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},fields.skillsImportanceField.label))),React.createElement(ValidatorForm,{onSubmit:this.submitSkillFormHandler// autoComplete=\"off\"\n},React.createElement(Grid,{container:true,item:true,xs:12,md:12,className:classes.boxDistance},React.createElement(Grid,{item:true,xs:12,md:4,className:classes.additionalInfofields},React.createElement(ReactSelectValidator,{id:fields.skillsField.name,fullWidth:true,isClearable:true,placeholder:fields.skillsField.placeholder,name:fields.skillsField.name,value:fields.skillsField.value,onChange:function onChange(value){selectFieldChangeHandler(fields.skillsField.name,value);},options:fields.skillsField.options,isSearchable:true,className:\"skillsField\"})),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(ReactSelectValidator,{id:fields.skillsLevelField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.skillsLevelField.placeholder,name:fields.skillsLevelField.name,value:fields.skillsLevelField.value,onChange:function onChange(value){selectFieldChangeHandler(fields.skillsLevelField.name,value);},options:fields.skillsLevelField.options,validators:[\"required\"],errorMessages:[\"Required\"],className:\"skillsLevelField\"})),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(ReactSelectValidator,{id:fields.skillsImportanceField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.skillsImportanceField.placeholder,name:fields.skillsImportanceField.name,value:fields.skillsImportanceField.value,onChange:function onChange(value){selectFieldChangeHandler(fields.skillsImportanceField.name,value);},options:fields.skillsImportanceField.options,validators:[\"required\"],errorMessages:[\"Required\"],className:\"skillsImportanceField\"})),React.createElement(Grid,{item:true,xs:12,md:1,className:classes.additionalInfofields},React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\"},\"Add\")))),skillsData.map(function(item,index){return React.createElement(Grid,{container:true,item:true,xs:12,md:12,key:index},React.createElement(Grid,{item:true,xs:12,md:4,className:classes.additionalInfofields},React.createElement(\"div\",null,React.createElement(\"span\",null,item.title))),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},item.level)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfoLastfield},React.createElement(\"span\",{className:classes.metatitle},item.importance),React.createElement(CancelIcon,{onClick:function onClick(e){return removeSkillHandler(item.id);}})));}),React.createElement(Grid,{container:true,item:true,xs:12,md:12,className:classes.additionalInfoLanguage},React.createElement(Grid,{item:true,xs:12,md:4,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},fields.languageField.label)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},fields.languageLevelField.label)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},fields.languageImportanceField.label))),React.createElement(ValidatorForm,{onSubmit:this.submitLanguageFormHandler// autoComplete=\"off\"\n},React.createElement(Grid,{container:true,item:true,xs:12,md:12,className:classes.boxDistance},React.createElement(Grid,{item:true,xs:12,md:4,className:classes.additionalInfofields},React.createElement(ReactSelectValidator,{id:fields.languageField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.languageField.placeholder,name:fields.languageField.name,value:fields.languageField.value,onChange:function onChange(value){selectFieldChangeHandler(fields.languageField.name,value);},options:fields.languageField.options,validators:[\"required\"],errorMessages:[\"Required\"],className:\"skillsField\"})),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(ReactSelectValidator,{id:fields.languageLevelField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.languageLevelField.placeholder,name:fields.languageLevelField.name,value:fields.languageLevelField.value,onChange:function onChange(value){selectFieldChangeHandler(fields.languageLevelField.name,value);},options:fields.languageLevelField.options,validators:[\"required\"],errorMessages:[\"Required\"],className:\"skillsLevelField\"})),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(ReactSelectValidator,{id:fields.languageImportanceField.name,validations:true,fullWidth:true,type:\"text\",placeholder:fields.languageImportanceField.placeholder,name:fields.languageImportanceField.name,value:fields.languageImportanceField.value,onChange:function onChange(value){selectFieldChangeHandler(fields.languageImportanceField.name,value);},options:fields.languageImportanceField.options,validators:[\"required\"],errorMessages:[\"Required\"],className:\"languageImportanceField\"})),React.createElement(Grid,{item:true,xs:12,md:1,className:classes.additionalInfofields},React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\"},\"Add\")))),languagesData.map(function(item,index){return React.createElement(Grid,{container:true,item:true,xs:12,md:12},React.createElement(Grid,{item:true,xs:12,md:4,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},item.title)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfofields},React.createElement(\"span\",{className:classes.metatitle},item.level)),React.createElement(Grid,{item:true,xs:12,md:3,className:classes.additionalInfoLastfield},React.createElement(\"span\",{className:classes.metatitle},item.importance),React.createElement(CancelIcon,{onClick:function onClick(e){return removeLanguageHandler(item.id);}})));})),React.createElement(Grid,{item:true,xs:12,md:4},React.createElement(Grid,{container:true,item:true,xs:12,md:12},React.createElement(\"div\",{className:classes.additionalInfoRecommendedSkills},React.createElement(\"span\",{className:\"title\"},\"Recommended Skills\"),recommendedSkills.map(function(item,index){return React.createElement(Tooltip,{title:React.createElement(React.Fragment,null,React.createElement(\"p\",{color:\"inherit\"},item.title),React.createElement(\"b\",null,\"Level: \"),item.level,\" \",React.createElement(\"br\",null),React.createElement(\"b\",null,\"Importance: \"),\" \",item.importance),key:index,arrow:true},React.createElement(\"div\",{onClick:function onClick(){return recommendedSkillActiveHandler(item);}},React.createElement(CheckCircleIcon,{className:classes.svgbgactive}),React.createElement(\"span\",{className:classes.svgbgactive},item.title)));})))))));}}]);return AdditionalInfoMetaFields;}(Component);export default withStyles(styles)(AdditionalInfoMetaFields);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/AdditionalInfo/MetaFields/component.js"],"names":["React","Component","styles","withStyles","Grid","Button","Tooltip","MenuItem","CustomTextValidator","ReactSelectValidator","CancelIcon","CheckCircleIcon","ValidatorForm","axios","AdditionalInfoMetaFields","submitSkillFormHandler","props","submitLanguageFormHandler","componentDidMount","fetchDataIfNeeded","classes","fields","selectFieldChangeHandler","textFieldChangeHandler","skillsData","languagesData","recommendedSkills","recommendedSkillActiveHandler","removeSkillHandler","removeLanguageHandler","metafieldwrapper","additionalInfofields","metatitle","skillsField","label","skillsLevelField","skillsImportanceField","boxDistance","name","placeholder","value","options","map","item","index","title","level","additionalInfoLastfield","importance","e","id","additionalInfoLanguage","languageField","languageLevelField","languageImportanceField","additionalInfoRecommendedSkills","svgbgactive"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, Tooltip, MenuItem } from \"@material-ui/core\";\r\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\r\nimport ReactSelectValidator from \"../../../../common/ReduxBased/CustomReactSelectValidator/ReactSelectValidator\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport axios from 'axios';\r\n\r\nclass AdditionalInfoMetaFields extends Component {\r\n\r\n\r\n    submitSkillFormHandler = () => {\r\n        this.props.submitSkillFormHandler();\r\n    }\r\n    submitLanguageFormHandler = () => {\r\n        this.props.submitLanguageFormHandler();\r\n    }\r\n    componentDidMount = () => {\r\n        this.props.fetchDataIfNeeded();\r\n    }\r\n  \r\n    render() {\r\n        const {\r\n            classes,\r\n            fields,\r\n            selectFieldChangeHandler,\r\n            textFieldChangeHandler,\r\n            skillsData,\r\n            languagesData,\r\n            recommendedSkills,\r\n            submitLanguageFormHandler,\r\n            recommendedSkillActiveHandler,\r\n            removeSkillHandler,\r\n            removeLanguageHandler\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.metafieldwrapper}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={8} >\r\n                            <Grid container item xs={12} md={12}>\r\n                                <Grid item xs={12} md={4} className={classes.additionalInfofields}>\r\n                                    <span className={classes.metatitle}>{fields.skillsField.label}</span>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                    <span className={classes.metatitle}>{fields.skillsLevelField.label}</span>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                    <span className={classes.metatitle}>{fields.skillsImportanceField.label}</span>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <ValidatorForm\r\n                                onSubmit={this.submitSkillFormHandler}\r\n                            // autoComplete=\"off\"\r\n                            >\r\n                                <Grid container item xs={12} md={12} className={classes.boxDistance}>\r\n\r\n                                    <Grid item xs={12} md={4} className={classes.additionalInfofields} >\r\n\r\n                                        <ReactSelectValidator\r\n                                            id={fields.skillsField.name}\r\n                                            fullWidth={true}\r\n                                            isClearable={true}\r\n                                            placeholder={fields.skillsField.placeholder}\r\n                                            name={fields.skillsField.name}\r\n                                            value={fields.skillsField.value}\r\n                                            onChange={value => {\r\n                                                selectFieldChangeHandler(\r\n                                                    fields.skillsField.name,\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            options={fields.skillsField.options}\r\n                                            isSearchable={true}\r\n                                            className=\"skillsField\"\r\n                                        />\r\n                                          \r\n                                      \r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                        <ReactSelectValidator\r\n                                            id={fields.skillsLevelField.name}\r\n                                            validations={true}\r\n                                            fullWidth={true}\r\n                                            type=\"text\"\r\n                                            placeholder={fields.skillsLevelField.placeholder}\r\n                                            name={fields.skillsLevelField.name}\r\n                                            value={fields.skillsLevelField.value}\r\n                                            onChange={value => {\r\n                                                selectFieldChangeHandler(\r\n                                                    fields.skillsLevelField.name,\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            options={fields.skillsLevelField.options}\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"Required\"]}\r\n                                            className=\"skillsLevelField\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                        <ReactSelectValidator\r\n                                            id={fields.skillsImportanceField.name}\r\n                                            validations={true}\r\n                                            fullWidth={true}\r\n                                            type=\"text\"\r\n                                            placeholder={fields.skillsImportanceField.placeholder}\r\n                                            name={fields.skillsImportanceField.name}\r\n                                            value={fields.skillsImportanceField.value}\r\n                                            onChange={value => {\r\n                                                selectFieldChangeHandler(\r\n                                                    fields.skillsImportanceField.name,\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            options={fields.skillsImportanceField.options}\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"Required\"]}\r\n                                            className=\"skillsImportanceField\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={1} className={classes.additionalInfofields}>\r\n                                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                            Add\r\n                                    </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ValidatorForm>\r\n\r\n\r\n\r\n                            {\r\n                                skillsData.map((item, index) => (\r\n\r\n                                    <Grid container item xs={12} md={12} key={index}>\r\n                                        <Grid item xs={12} md={4} className={classes.additionalInfofields}>\r\n                                            <div >\r\n                                                <span >{item.title}</span>\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                            <span className={classes.metatitle}>{item.level}</span>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={3} className={classes.additionalInfoLastfield}>\r\n                                            <span className={classes.metatitle}>{item.importance}</span>\r\n                                            <CancelIcon onClick={(e) => removeSkillHandler(item.id)} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                ))\r\n                            }\r\n\r\n\r\n\r\n                            <Grid container item xs={12} md={12} className={classes.additionalInfoLanguage}>\r\n\r\n                                <Grid item xs={12} md={4} className={classes.additionalInfofields}>\r\n                                    <span className={classes.metatitle}>{fields.languageField.label}</span>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                    <span className={classes.metatitle}>{fields.languageLevelField.label}</span>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                    <span className={classes.metatitle}>{fields.languageImportanceField.label}</span>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <ValidatorForm\r\n                                onSubmit={this.submitLanguageFormHandler}\r\n                            // autoComplete=\"off\"\r\n                            >\r\n                                <Grid container item xs={12} md={12} className={classes.boxDistance}>\r\n\r\n                                    <Grid item xs={12} md={4} className={classes.additionalInfofields}>\r\n                                        <ReactSelectValidator\r\n                                            id={fields.languageField.name}\r\n                                            validations={true}\r\n                                            fullWidth={true}\r\n                                            type=\"text\"\r\n                                            placeholder={fields.languageField.placeholder}\r\n                                            name={fields.languageField.name}\r\n                                            value={fields.languageField.value}\r\n                                            onChange={value => {\r\n                                                selectFieldChangeHandler(\r\n                                                    fields.languageField.name,\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            options={fields.languageField.options}\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"Required\"]}\r\n                                            className=\"skillsField\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                        <ReactSelectValidator\r\n                                            id={fields.languageLevelField.name}\r\n                                            validations={true}\r\n                                            fullWidth={true}\r\n                                            type=\"text\"\r\n                                            placeholder={fields.languageLevelField.placeholder}\r\n                                            name={fields.languageLevelField.name}\r\n                                            value={fields.languageLevelField.value}\r\n                                            onChange={value => {\r\n                                                selectFieldChangeHandler(\r\n                                                    fields.languageLevelField.name,\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            options={fields.languageLevelField.options}\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"Required\"]}\r\n                                            className=\"skillsLevelField\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                        <ReactSelectValidator\r\n                                            id={fields.languageImportanceField.name}\r\n                                            validations={true}\r\n                                            fullWidth={true}\r\n                                            type=\"text\"\r\n                                            placeholder={fields.languageImportanceField.placeholder}\r\n                                            name={fields.languageImportanceField.name}\r\n                                            value={fields.languageImportanceField.value}\r\n                                            onChange={value => {\r\n                                                selectFieldChangeHandler(\r\n                                                    fields.languageImportanceField.name,\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            options={fields.languageImportanceField.options}\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"Required\"]}\r\n                                            className=\"languageImportanceField\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={1} className={classes.additionalInfofields}>\r\n                                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                            Add\r\n                                    </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ValidatorForm>\r\n\r\n                            {\r\n                                languagesData.map((item, index) => (\r\n                                    <Grid container item xs={12} md={12}>\r\n                                        <Grid item xs={12} md={4} className={classes.additionalInfofields}>\r\n                                            <span className={classes.metatitle}>{item.title}</span>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={3} className={classes.additionalInfofields}>\r\n                                            <span className={classes.metatitle}>{item.level}</span>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={3} className={classes.additionalInfoLastfield}>\r\n                                            <span className={classes.metatitle}>{item.importance}</span>\r\n                                            <CancelIcon onClick={(e) => removeLanguageHandler(item.id)} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                ))\r\n                            }\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid item xs={12} md={4}>\r\n                            <Grid container item xs={12} md={12} >\r\n\r\n\r\n                                <div className={classes.additionalInfoRecommendedSkills}>\r\n                                    <span className=\"title\" >Recommended Skills</span>\r\n                                    {\r\n                                        recommendedSkills.map((item, index) => (\r\n                                            <Tooltip\r\n                                                title={\r\n                                                    <>\r\n                                                        <p color=\"inherit\">{item.title}</p>\r\n                                                        <b>Level: </b>{item.level} <br />\r\n                                                        <b>Importance: </b> {item.importance}\r\n                                                    </>\r\n                                                }\r\n                                                key={index}\r\n                                                arrow>\r\n                                                <div onClick={() => recommendedSkillActiveHandler(item)} >\r\n                                                    <CheckCircleIcon className={classes.svgbgactive} />\r\n                                                    <span className={classes.svgbgactive}>{item.title}</span>\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                        ))\r\n                                    }\r\n\r\n                                </div>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AdditionalInfoMetaFields);"]},"metadata":{},"sourceType":"module"}