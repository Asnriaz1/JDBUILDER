{"ast":null,"code":"import { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { LOGIN_PAGE_ERROR_HANDLER, LOGIN_SUBMIT_FORM_HANDLER } from \"../../../Login/actions\";\nimport ls from 'local-storage';\nimport { reverseString } from \"../../../common/Helpers\";\nimport instance, { BASE_URL, BASE_URL_SQL } from \"../../../../api/config\";\nexport const JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER = \"JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER\";\nexport const JD_TEMPLATE_SAVE_HANDLER = \"JD_TEMPLATE_SAVE_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER\";\nexport const textFieldChangeHandler = (name, value) => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER,\n    payload: value,\n    key: name\n  });\n};\nexport const summaryDataActiveHandler = value => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER,\n    payload: value\n  });\n};\nexport const saveUpdatedSummaryEditor = value => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER,\n    payload: value\n  });\n};\nexport const saveUpdatedSummaryAsHTML = value => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER,\n    payload: value\n  });\n};\nexport const loginandSubmitTemplateHandler = (value, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => dispatch => {\n  let resObj = {};\n  let keys_needed = [\"access_token\", \"userText\", \"userType\"];\n  dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Signing In\", \"large\"));\n  instance.post(BASE_URL_SQL + 'Login', value).then(res => {\n    if (res.data.statusCode === 404) {\n      dispatch({\n        type: LOGIN_PAGE_ERROR_HANDLER,\n        payload: res.data.error\n      });\n    }\n\n    dispatch(handleLoadingSpinnerClose());\n    keys_needed.map(item => {\n      resObj[reverseString(item)] = res.data[item];\n      return item;\n    });\n    resObj[reverseString(\"user_id\")] = res.data.userId;\n    resObj[reverseString(\"nameTitle\")] = res.data.userText ? res.data.userText : res.data.user_name.toUpperCase();\n    localStorage.setItem(reverseString(\"app_store\"), JSON.stringify(resObj));\n    dispatch({\n      type: LOGIN_SUBMIT_FORM_HANDLER,\n      payload: res.data\n    });\n    dispatch({\n      type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n      payload: false\n    });\n    let jobCode = res.data.jobCode;\n    ls.set('jobCode', jobCode);\n    let userId = res.data.userId; // ls.set('userId', userId);\n\n    let savedTempId = ls.get('suggestedTempId');\n    savedTempId = templateId ? templateId : savedTempId;\n    let selected_skills = selectedSkills ? selectedSkills.map(item => {\n      return {\n        _id: item.id,\n        level: item.level,\n        importance: item.importance,\n        title: item.title\n      };\n    }) : [];\n    let selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n      return {\n        _id: item.id,\n        level: item.level,\n        importance: item.importance,\n        title: item.title\n      };\n    }) : [];\n    let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\";\n    let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\";\n    var experience = {\n      \"min_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n      \"max_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value\n    };\n    let salary_range = {\n      min_sal: null,\n      max_sal: null\n    };\n\n    if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"yearly\") {\n      let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField[0].value.split('-');\n      salary_range.min_sal = min_max[0];\n      salary_range.max_sal = min_max[1];\n    } else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"hourly\") {\n      let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField[0].value.split('-');\n      salary_range.min_sal = min_max[0];\n      salary_range.max_sal = min_max[1];\n    } else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"monthly\") {\n      let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField[0].value.split('-');\n      salary_range.min_sal = parseInt(min_max[0]);\n      salary_range.max_sal = parseInt(min_max[1]);\n    }\n\n    var rolesDataFilter = this.state.JOBOPENING.data.rolesData.filter(item => {\n      return item.isActive == true;\n    }).map(item => item.id);\n    var resDataFilter = this.state.JOBOPENING.data.resData.filter(item => {\n      return item.isActive == true;\n    }).map(item => item.id); //sending call to save object\n\n    let dataObj = {\n      user_id: res.data.userId ? res.data.userId : userId,\n      job_code: jobCode,\n      template_id: savedTempId,\n      title: state.this.state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value,\n      //missing\n      _selected_rr: {\n        htmlstring: this.state.JOBOPENING.data.rolesResHTMLData,\n        rol: rolesDataFilter,\n        res: resDataFilter\n      },\n      _selected_skills: [...selected_skills],\n      _selected_languages: [...selected_languages],\n      exp: experience,\n      _selected_summary: {\n        htmlstring: rawContentSummaryAsHTML,\n        s_id: [\"5fbcf9c331d5edc5c9ae2a39\", \"5fbcf9c331d5edc5c9ae2a39\"]\n      },\n      _selected_industry: JDIndustry,\n      _selected_function: JDFunction,\n      employment_type: this.state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n      positions: this.state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n      salary_detail: {\n        sal_range: salary_range,\n        type: this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField,\n        currency: \"$\",\n        visible: true\n      },\n      remote_work: this.state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n      address: this.state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n      qualification: this.state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value\n    };\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n    instance.post(BASE_URL + 'Templates', dataObj).then(res => {\n      dispatch(handleLoadingSpinnerClose()); // window.location.replace('/create/advertise')\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }).catch(error => {\n    dispatch(handleLoadingSpinnerClose());\n  });\n};\nexport const submitTemplateHandler = (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => dispatch => {\n  //sending call to save object\n  let jobCode = ls.get('jobCode');\n  let userId = ls.get('userId');\n  let savedTempId = ls.get('suggestedTempId');\n  savedTempId = templateId ? templateId : savedTempId;\n  let selected_skills = selectedSkills ? selectedSkills.map(item => {\n    return {\n      _id: item.id,\n      level: item.level,\n      importance: item.importance,\n      title: item.title\n    };\n  }) : [];\n  let selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n    return {\n      _id: item.id,\n      level: item.level,\n      importance: item.importance,\n      title: item.title\n    };\n  }) : []; //JD industry\n\n  let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\";\n  let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\";\n  let dataObj = {\n    user_id: userId,\n    job_code: jobCode,\n    template_id: savedTempId,\n    title: \"User Onetime Templates\",\n    //missing\n    _selected_rr: {\n      htmlstring: rolesResHTMLData,\n      rol: [\"5fbcf9c331d5edc5c9ae2a39\"],\n      res: [\"5fbcf9c331d5edc5c9ae2a39\"]\n    },\n    _selected_skills: [...selected_skills],\n    _selected_languages: [...selected_languages],\n    exp: \"2-5\",\n    _selected_summary: {\n      htmlstring: rawContentSummaryAsHTML,\n      s_id: [\"5fbcf9c331d5edc5c9ae2a39\", \"5fbcf9c331d5edc5c9ae2a39\"]\n    },\n    _selected_industry: JDIndustry,\n    _selected_function: JDFunction,\n    employment_type: \"Full Time\",\n    positions: 5,\n    salary_detail: {\n      amount: 50,\n      type: \"hourly\",\n      currency: \"$\",\n      visible: true\n    },\n    remote_work: true\n  };\n  dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n  instance.post(BASE_URL + 'Templates', dataObj).then(res => {\n    dispatch(handleLoadingSpinnerClose()); // window.location.replace('/create/advertise')\n  }).catch(error => {\n    dispatch(handleLoadingSpinnerClose());\n  }); // instance.post(BASE_URL+'Templates', data)\n  // .then(res => {\n  //     if(res.status === 200) {\n  //         dispatch({\n  //             type: JD_TEMPLATE_SAVE_HANDLER,\n  //             payload: true,\n  //         });\n  //     }\n  // })\n  // .catch(error => {\n  // })\n};\nexport const fetchDataSummary = value => dispatch => {\n  let data = value.summary ? value.summary.map(item => {\n    return {\n      id: item.summary_id,\n      desc: item.title,\n      used: item.used,\n      isActive: false\n    };\n  }) : [];\n  dispatch({\n    type: JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER,\n    payload: data\n  });\n};\nexport const showLoginPopupHandler = value => dispatch => {\n  dispatch({\n    type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n    payload: value\n  });\n};","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Summary/actions.js"],"names":["handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","LOGIN_PAGE_ERROR_HANDLER","LOGIN_SUBMIT_FORM_HANDLER","ls","reverseString","instance","BASE_URL","BASE_URL_SQL","JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER","JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER","JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER","JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER","JD_TEMPLATE_SAVE_HANDLER","JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER","JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER","textFieldChangeHandler","name","value","dispatch","type","payload","key","summaryDataActiveHandler","saveUpdatedSummaryEditor","saveUpdatedSummaryAsHTML","loginandSubmitTemplateHandler","templateId","selectedSkills","selectedLanguages","JOindustryField","JOfunctionField","rolesResHTMLData","rawContentSummaryAsHTML","resObj","keys_needed","post","then","res","data","statusCode","error","map","item","userId","userText","user_name","toUpperCase","localStorage","setItem","JSON","stringify","jobCode","set","savedTempId","get","selected_skills","_id","id","level","importance","title","selected_languages","JDIndustry","JDFunction","experience","state","JOBOPENING","forms","jobOpeningForm","fields","minYearField","maxYearField","salary_range","min_sal","max_sal","salaryTypeField","min_max","yearlySalaryRangField","split","hourlyMaxRateField","monthlySalaryRangField","parseInt","rolesDataFilter","rolesData","filter","isActive","resDataFilter","resData","dataObj","user_id","job_code","template_id","this","jobTitleField","_selected_rr","htmlstring","rol","_selected_skills","_selected_languages","exp","_selected_summary","s_id","_selected_industry","_selected_function","employment_type","employmenTypeField","positions","positionField","salary_detail","sal_range","currency","visible","remote_work","remoteWorkingField","address","AddressField","qualification","QualificationField","catch","submitTemplateHandler","amount","fetchDataSummary","summary","summary_id","desc","used","showLoginPopupHandler"],"mappings":"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","sourcesContent":["import {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    LOGIN_PAGE_ERROR_HANDLER,\n    LOGIN_SUBMIT_FORM_HANDLER\n} from \"../../../Login/actions\";\nimport ls from 'local-storage'\n\nimport { reverseString } from \"../../../common/Helpers\";\nimport instance, { BASE_URL, BASE_URL_SQL } from \"../../../../api/config\"\nexport const JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER = \"JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER\";\nexport const JD_TEMPLATE_SAVE_HANDLER = \"JD_TEMPLATE_SAVE_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER\";\n\nexport const textFieldChangeHandler = (name, value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER,\n        payload: value,\n        key: name\n    });\n};\n\nexport const summaryDataActiveHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER,\n        payload: value,\n    });\n};\n\nexport const saveUpdatedSummaryEditor = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER,\n        payload: value,\n    });\n};\n\nexport const saveUpdatedSummaryAsHTML = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER,\n        payload: value,\n    });\n};\n\nexport const loginandSubmitTemplateHandler = (value, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => dispatch => {\n    let resObj = {};\n    let keys_needed = [\"access_token\", \"userText\", \"userType\"];\n\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Signing In\", \"large\"));\n    instance.post(BASE_URL_SQL + 'Login', value)\n        .then(res => {\n            if (res.data.statusCode === 404) {\n                dispatch({\n                    type: LOGIN_PAGE_ERROR_HANDLER,\n                    payload: res.data.error,\n                });\n            }\n            dispatch(handleLoadingSpinnerClose());\n            keys_needed.map(item => {\n                resObj[reverseString(item)] = res.data[item];\n                return item;\n            });\n            resObj[reverseString(\"user_id\")] = res.data.userId;\n            resObj[reverseString(\"nameTitle\")] = res.data.userText ? res.data.userText : res.data.user_name.toUpperCase();\n            localStorage.setItem(reverseString(\"app_store\"), JSON.stringify(resObj));\n            dispatch({\n                type: LOGIN_SUBMIT_FORM_HANDLER,\n                payload: res.data\n            });\n\n            dispatch({\n                type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n                payload: false,\n            });\n\n            let jobCode = res.data.jobCode;\n            ls.set('jobCode', jobCode);\n\n            let userId = res.data.userId;\n            // ls.set('userId', userId);\n\n            let savedTempId = ls.get('suggestedTempId')\n            savedTempId = templateId ? templateId : savedTempId\n\n            let selected_skills = selectedSkills ? selectedSkills.map(item => {\n                return {\n                    _id: item.id,\n                    level: item.level,\n                    importance: item.importance,\n                    title: item.title\n                }\n            }) : []\n\n            let selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n                return {\n                    _id: item.id,\n                    level: item.level,\n                    importance: item.importance,\n                    title: item.title\n                }\n            }) : []\n\n            let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\"\n            let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\"\n            var experience = {\n                \"min_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n                \"max_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value\n            }\n\n\n            let salary_range = {\n                min_sal: null,\n                max_sal: null\n            };\n            if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"yearly\") {\n\n                let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField[0].value.split('-');\n                salary_range.min_sal = min_max[0];\n                salary_range.max_sal = min_max[1];\n\n            }\n            else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"hourly\") {\n                let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField[0].value.split('-');\n                salary_range.min_sal = min_max[0];\n                salary_range.max_sal = min_max[1];\n            }\n            else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"monthly\") {\n\n                let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField[0].value.split('-');\n                salary_range.min_sal = parseInt(min_max[0]);\n                salary_range.max_sal = parseInt(min_max[1]);\n\n            }\n\n            var rolesDataFilter = this.state.JOBOPENING.data.rolesData.filter((item) => {\n                return item.isActive == true\n            }).map(item => item.id)\n\n            var resDataFilter = this.state.JOBOPENING.data.resData.filter((item) => {\n                return item.isActive == true\n            }).map(item => item.id)\n\n\n            //sending call to save object\n            let dataObj = {\n                user_id: res.data.userId ? res.data.userId : userId,\n                job_code: jobCode,\n                template_id: savedTempId,\n                title:state.this.state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value, //missing\n                _selected_rr: {\n                    htmlstring: this.state.JOBOPENING.data.rolesResHTMLData,\n                    rol: rolesDataFilter,\n                    res: resDataFilter\n                },\n                _selected_skills: [...selected_skills],\n                _selected_languages: [...selected_languages],\n                exp: experience,\n                _selected_summary:\n                {\n                    htmlstring: rawContentSummaryAsHTML,\n                    s_id: [\"5fbcf9c331d5edc5c9ae2a39\", \"5fbcf9c331d5edc5c9ae2a39\"]\n                }\n                ,\n                _selected_industry: JDIndustry,\n                _selected_function: JDFunction,\n                employment_type: this.state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n                positions: this.state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n                salary_detail: {\n                    sal_range: salary_range,\n                    type: this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField,\n                    currency: \"$\",\n                    visible: true\n                },\n                remote_work: this.state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n                address:this.state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n                qualification:this.state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n            }\n\n            dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n            instance.post(BASE_URL + 'Templates', dataObj)\n                .then(res => {\n                    dispatch(handleLoadingSpinnerClose());\n                    // window.location.replace('/create/advertise')\n                })\n                .catch(error => {\n                    dispatch(handleLoadingSpinnerClose());\n                })\n\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n}\n\nexport const submitTemplateHandler = (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => dispatch => {\n\n    //sending call to save object\n\n    let jobCode = ls.get('jobCode');\n\n    let userId = ls.get('userId');\n\n    let savedTempId = ls.get('suggestedTempId')\n    savedTempId = templateId ? templateId : savedTempId\n\n    let selected_skills = selectedSkills ? selectedSkills.map(item => {\n        return {\n            _id: item.id,\n            level: item.level,\n            importance: item.importance,\n            title: item.title\n        }\n    }) : []\n\n    let selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n        return {\n            _id: item.id,\n            level: item.level,\n            importance: item.importance,\n            title: item.title\n        }\n    }) : []\n\n    //JD industry\n    let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\"\n    let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\"\n\n    let dataObj = {\n        user_id: userId,\n        job_code: jobCode,\n        template_id: savedTempId,\n        title: \"User Onetime Templates\", //missing\n        _selected_rr: {\n            htmlstring: rolesResHTMLData,\n            rol: [\"5fbcf9c331d5edc5c9ae2a39\"],\n            res: [\"5fbcf9c331d5edc5c9ae2a39\"]\n        },\n        _selected_skills: [...selected_skills],\n        _selected_languages: [...selected_languages],\n        exp: \"2-5\",\n        _selected_summary:\n        {\n            htmlstring: rawContentSummaryAsHTML,\n            s_id: [\"5fbcf9c331d5edc5c9ae2a39\", \"5fbcf9c331d5edc5c9ae2a39\"]\n        }\n        ,\n        _selected_industry: JDIndustry,\n        _selected_function: JDFunction,\n        employment_type: \"Full Time\",\n        positions: 5,\n        salary_detail: {\n            amount: 50,\n            type: \"hourly\",\n            currency: \"$\",\n            visible: true\n        },\n        remote_work: true\n    }\n\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n    instance.post(BASE_URL + 'Templates', dataObj)\n        .then(res => {\n            dispatch(handleLoadingSpinnerClose());\n            // window.location.replace('/create/advertise')\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n\n    // instance.post(BASE_URL+'Templates', data)\n    // .then(res => {\n    //     if(res.status === 200) {\n    //         dispatch({\n    //             type: JD_TEMPLATE_SAVE_HANDLER,\n    //             payload: true,\n    //         });\n    //     }\n    // })\n    // .catch(error => {\n\n    // })\n};\n\nexport const fetchDataSummary = (value) => dispatch => {\n\n    let data = value.summary ? value.summary.map(item => {\n        return {\n            id: item.summary_id,\n            desc: item.title,\n            used: item.used,\n            isActive: false\n        }\n    }) : []\n\n    dispatch({\n        type: JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER,\n        payload: data,\n    });\n};\nexport const showLoginPopupHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n        payload: value,\n    });\n};"]},"metadata":{},"sourceType":"module"}