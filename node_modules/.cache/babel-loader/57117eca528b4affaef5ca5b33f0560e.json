{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\Advertise\\\\Profile\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./style\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Avatar from '@material-ui/core/Avatar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ReactMarkdown from 'react-markdown';\n\nclass CvPreview extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchDataIfNeeded();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      userid,\n      profileData\n    } = this.props;\n    return profileData ? React.createElement(\"div\", {\n      className: classes.previewWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.cvAvatar,\n      src: profileData.personal_info.image,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.cvHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, profileData.personal_info.name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, profileData.personal_info.headline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, profileData.personal_info.email), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, profileData.personal_info.phone)))), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.cvHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Matched Skills\"), profileData.skills ? profileData.skills.map((item, index) => React.createElement(\"div\", {\n      className: classes.cvSkills,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item.name))) : \"\", React.createElement(\"h1\", {\n      className: classes.unmatchHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Unmatched Skills\"), profileData.missing ? profileData.missing.map((item, index) => React.createElement(\"div\", {\n      className: classes.cvunmatchedSkills,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, item.name))) : \"\"), React.createElement(Grid, {\n      item: true,\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.cvSummary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: classes.cvHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Summary\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, profileData.personal_info.summary)), React.createElement(\"div\", {\n      className: classes.space,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.cvEmployment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: classes.cvHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Employment History\"), profileData.experiences.jobs ? profileData.experiences.jobs.map((item, index) => React.createElement(Grid, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.employmentHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item.title, \" , \", item.company), React.createElement(\"span\", {\n      className: classes.locationmark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, item.location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, item.date_range), React.createElement(\"div\", {\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, item.description)))) : \"\"), React.createElement(\"div\", {\n      className: classes.space,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.cvEducation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: classes.cvHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Education\"), profileData.experiences.education ? profileData.experiences.education.map((item, index) => React.createElement(Grid, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.cvEducation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, item.degree, \" , \", item.name), React.createElement(\"span\", {\n      className: classes.locationmark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, item.location), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, item.date_range)))) : \"\"))))) : \"No result found.\";\n  }\n\n}\n\nexport default withStyles(styles)(CvPreview);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Advertise/Profile/component.js"],"names":["React","Component","styles","withStyles","Grid","Avatar","LinearProgress","ReactMarkdown","CvPreview","componentDidMount","props","fetchDataIfNeeded","render","classes","userid","profileData","previewWrapper","cvAvatar","personal_info","image","cvHeader","name","headline","email","phone","cvHeading","skills","map","item","index","cvSkills","unmatchHeading","missing","cvunmatchedSkills","cvSummary","summary","space","cvEmployment","experiences","jobs","employmentHistory","title","company","locationmark","location","date_range","details","description","cvEducation","education","degree"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { styles } from \"./style\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Avatar from '@material-ui/core/Avatar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ReactMarkdown from 'react-markdown'\n\n\n\nclass CvPreview extends Component {\n\n    componentDidMount = () => {\n        this.props.fetchDataIfNeeded();\n    }\n    render() {\n        const {\n            classes,\n            userid,\n            profileData\n        } = this.props;\n\n        return (\n            profileData ?\n            <div className={classes.previewWrapper}>\n                    <Grid container>\n                        <Grid item lg={3}>\n                            <img className={classes.cvAvatar} src={profileData.personal_info.image} alt=\"\"/>\n                        </Grid>\n                        <Grid item lg={9}>\n                            <div className={classes.cvHeader}>\n                                <h1>{profileData.personal_info.name}</h1>\n                                <h3>{profileData.personal_info.headline}</h3>\n                                <p>{profileData.personal_info.email}</p>\n                                <p>{profileData.personal_info.phone}</p>\n                            </div>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container>\n                        <Grid item lg={3}>\n                            <h1 className={classes.cvHeading}>Matched Skills</h1>\n                            {\n                                profileData.skills ? profileData.skills.map((item, index) => (\n                                        <div className={classes.cvSkills} key={index}>\n                                            <p>{item.name}</p>\n                                        </div>\n                                )) : \"\"\n                            }\n                            <h1 className={classes.unmatchHeading}>Unmatched Skills</h1>\n                            {\n                                profileData.missing ? profileData.missing.map((item, index) => (\n                                        <div className={classes.cvunmatchedSkills} key={index}>\n                                            <p>{item.name}</p>\n                                        </div>\n                                )) : \"\"\n                            }\n                        </Grid>\n                        <Grid item lg={9}>\n                            <div>\n                                <div className={classes.cvSummary}>\n                                    <h2 className={classes.cvHeading}>Summary</h2>\n                                    <p>{profileData.personal_info.summary}</p>\n                                </div>\n\n                                <div className={classes.space}>\n                                </div>\n\n                                <div className={classes.cvEmployment}>\n                                    <h2 className={classes.cvHeading}>Employment History</h2>\n                                    {\n                                        profileData.experiences.jobs ? profileData.experiences.jobs.map((item, index) => (\n                                            <Grid key={index}>\n                                                <div className={classes.employmentHistory} >\n                                                    <p>{item.title} , {item.company}</p>\n                                                    <span className={classes.locationmark}>{item.location}</span>\n                                                    <p>{item.date_range}</p>\n                                                    <div className={classes.details}>\n                                                            {item.description}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n                                        )) : \"\"\n                                    }\n                                </div>\n\n                                <div className={classes.space}>\n                                </div>\n\n                                <div className={classes.cvEducation}>\n                                    <h2 className={classes.cvHeading}>Education</h2>\n                                    {\n                                        profileData.experiences.education? profileData.experiences.education.map((item, index) => (\n                                            <Grid key={index}>\n                                                <div className={classes.cvEducation} >\n                                                    <p>{item.degree} , {item.name}</p>\n                                                    <span className={classes.locationmark}>{item.location}</span>\n                                                    <span>{item.date_range}</span>\n                                                  \n                                                </div>\n                                            </Grid>\n                                        )) : \"\"\n                                    }\n                                </div>\n\n                            </div>\n                        </Grid>\n                    </Grid>\n            </div> : \"No result found.\"\n        )\n    }\n}\n\nexport default withStyles(styles)(CvPreview);"]},"metadata":{},"sourceType":"module"}