{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component,Fragment}from\"react\";import{withStyles}from\"@material-ui/core/styles\";import{styles}from\"./styles\";import{TextValidator}from\"react-material-ui-form-validator\";import NumberFormat from\"react-number-format\";import ReduxGeneralHOC from\"../../../HOCs/ReduxGeneralHOC/component\";import RoleBasedRenderHOC from\"../../../HOCs/RoleBasedRenderHOC/container\";import PhoneInput,{isValidPhoneNumber}from\"react-phone-number-input\";import ReactSelectValidator from\"../CustomReactSelectValidator/ReactSelectValidator\";import TextField from\"@material-ui/core/TextField\";var CustomTextValidator=/*#__PURE__*/function(_Component){_inherits(CustomTextValidator,_Component);function CustomTextValidator(props){var _this;_classCallCheck(this,CustomTextValidator);_this=_possibleConstructorReturn(this,_getPrototypeOf(CustomTextValidator).call(this,props));_this.state={hideValueAttr:props.hideValueAttr===undefined?false:props.hideValueAttr,returnType:props.returnType!==undefined&&props.returnType.indexOf([\"object\",\"string\"])?props.returnType:\"object\"};_this.changeField=_this.changeField.bind(_assertThisInitialized(_this));_this.blurField=_this.blurField.bind(_assertThisInitialized(_this));_this.keyDown=_this.keyDown.bind(_assertThisInitialized(_this));return _this;}_createClass(CustomTextValidator,[{key:\"changeField\",value:function changeField(e){if(this.props.returnType!==undefined){if(this.props.returnType===\"string\"){this.props.onChange(e.target.value);}else{this.props.onChange({value:e.target.value});}}else{if(!!e){this.props.onChange({value:!!e.target&&!!e.target.value?e.target.value:e});}}this.setState({hideValueAttr:this.props.hideValueAttr===undefined?true:this.props.hideValueAttr});}},{key:\"blurField\",value:function blurField(e){if(this.props.returnType!==undefined){if(this.props.returnType===\"text\"){this.props.onChange(e.target.value.trim());}else{this.props.onChange({value:e.target.value.trim()});}}else{this.props.onChange({value:e.target.value.trim()});}this.setState({hideValueAttr:false});}},{key:\"keyDown\",value:function keyDown(e){if(e.keyCode===13){this.props.onChange({value:e.target.value.trim()});}}},{key:\"render\",value:function render(){var _this$props=this.props,field=_this$props.field,value=_this$props.value,validation=_this$props.validation,InputProps=_this$props.InputProps,hideValueAttr=_this$props.hideValueAttr,returnType=_this$props.returnType,onChange=_this$props.onChange,rest=_objectWithoutProperties(_this$props,[\"field\",\"value\",\"validation\",\"InputProps\",\"hideValueAttr\",\"returnType\",\"onChange\"]);return React.createElement(Fragment,null,validation===false?React.createElement(TextField,Object.assign({InputProps:InputProps,value:value,onChange:this.changeField,onBlur:this.blurField},rest)):React.createElement(React.Fragment,null,this.state.hideValueAttr===true?React.createElement(Fragment,null,this.props.format!==undefined?React.createElement(React.Fragment,null,!!this.props.tel?React.createElement(React.Fragment,null,React.createElement(PhoneInput,Object.assign({country:\"PK\",placeholder:\"Enter phone number\"// value={ this.state.value }\n// onChange={ value => this.setState({ value }) }\n,onChange:this.changeField,error:value?isValidPhoneNumber(value)?undefined:\"Invalid phone number\":\"Phone number required\"},rest))):React.createElement(NumberFormat,Object.assign({customInput:TextValidator,onBlur:this.blurField},rest))):React.createElement(TextValidator,Object.assign({onBlur:this.blurField,onKeyDown:this.keyDown},rest,{validators:[],errorMessages:[]}))):React.createElement(Fragment,null,this.props.format!==undefined?React.createElement(React.Fragment,null,!!this.props.tel?React.createElement(React.Fragment,null,React.createElement(PhoneInput,Object.assign({country:\"PK\",placeholder:\"Enter phone number\",value:value// onChange={ value => this.setState({ value }) }\n,onChange:this.changeField,autoComplete:\"off\",error:value?isValidPhoneNumber(value)?undefined:\"Invalid phone number\":\"Phone number required\",countrySelectComponent:ReactSelectValidator,inputComponent:this},rest))):React.createElement(NumberFormat,Object.assign({customInput:TextValidator,value:value,onBlur:this.blurField,onChange:this.changeField},rest))):React.createElement(TextValidator,Object.assign({InputProps:InputProps,value:value===null?'':value,onChange:this.changeField},rest)))));}}]);return CustomTextValidator;}(Component);export default RoleBasedRenderHOC(ReduxGeneralHOC(withStyles(styles)(CustomTextValidator)));","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/common/ReduxBased/CustomTextValidator/component.js"],"names":["React","Component","Fragment","withStyles","styles","TextValidator","NumberFormat","ReduxGeneralHOC","RoleBasedRenderHOC","PhoneInput","isValidPhoneNumber","ReactSelectValidator","TextField","CustomTextValidator","props","state","hideValueAttr","undefined","returnType","indexOf","changeField","bind","blurField","keyDown","e","onChange","target","value","setState","trim","keyCode","field","validation","InputProps","rest","format","tel"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {styles} from \"./styles\";\nimport {TextValidator} from \"react-material-ui-form-validator\";\nimport PropTypes from \"prop-types\";\nimport NumberFormat from \"react-number-format\";\nimport ReduxGeneralHOC from \"../../../HOCs/ReduxGeneralHOC/component\";\nimport RoleBasedRenderHOC from \"../../../HOCs/RoleBasedRenderHOC/container\";\nimport PhoneInput, {isValidPhoneNumber} from \"react-phone-number-input\";\nimport ReactSelectValidator from \"../CustomReactSelectValidator/ReactSelectValidator\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass CustomTextValidator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hideValueAttr: props.hideValueAttr === undefined ? false : props.hideValueAttr,\n            returnType: props.returnType !== undefined && props.returnType.indexOf([\"object\", \"string\"]) ? props.returnType : \"object\"\n        };\n        this.changeField = this.changeField.bind(this);\n        this.blurField = this.blurField.bind(this);\n        this.keyDown = this.keyDown.bind(this);\n    }\n\n    changeField(e) {\n        if (this.props.returnType !== undefined) {\n            if (this.props.returnType === \"string\") {\n                this.props.onChange(e.target.value);\n            } else {\n                this.props.onChange({\n                    value: e.target.value\n                });\n            }\n        } else {\n            if (!!e) {\n                this.props.onChange({\n                    value: !!e.target && !!e.target.value ? e.target.value : e\n                });\n            }\n        }\n\n        this.setState({\n            hideValueAttr: this.props.hideValueAttr === undefined ? true : this.props.hideValueAttr\n        });\n    }\n\n    blurField(e) {\n        if (this.props.returnType !== undefined) {\n            if (this.props.returnType === \"text\") {\n                this.props.onChange(e.target.value.trim());\n            } else {\n                this.props.onChange({\n                    value: e.target.value.trim()\n                });\n            }\n        } else {\n            this.props.onChange({\n                value: e.target.value.trim()\n            });\n        }\n        this.setState({\n            hideValueAttr: false\n        });\n    }\n\n    keyDown(e) {\n        if(e.keyCode === 13){\n            this.props.onChange({\n                value: e.target.value.trim()\n            });\n        }\n    }\n\n    render() {\n        const {\n            field,\n            value,\n            validation,\n            InputProps,\n            hideValueAttr,\n            returnType,\n            // format,\n            onChange,\n            ...rest\n        } = this.props;\n        return (\n            <Fragment>\n                {validation === false ? (\n                    <TextField InputProps={InputProps} value={value} onChange={this.changeField}\n                               onBlur={this.blurField} {...rest} />\n                ) : (\n                    <>\n                        {this.state.hideValueAttr === true ? (\n                            <Fragment>\n                                {this.props.format !== undefined ? (\n                                    <>\n                                        {!!this.props.tel ? (\n                                            <>\n                                                <PhoneInput\n                                                    country='PK'\n                                                    placeholder='Enter phone number'\n                                                    // value={ this.state.value }\n                                                    // onChange={ value => this.setState({ value }) }\n                                                    onChange={this.changeField}\n                                                    error={value ? (isValidPhoneNumber(value) ? undefined : \"Invalid phone number\") : \"Phone number required\"}\n                                                    {...rest}\n                                                />\n                                            </>\n                                        ) : (\n                                            <NumberFormat customInput={TextValidator}\n                                                          onBlur={this.blurField} {...rest} />\n                                        )}\n                                    </>\n                                ) : (\n                                    <TextValidator onBlur={this.blurField} onKeyDown={this.keyDown} {...rest}\n                                                   validators={[]} errorMessages={[]}/>\n                                )}\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                {this.props.format !== undefined ? (\n                                    <>\n                                        {!!this.props.tel ? (\n                                            <>\n                                                <PhoneInput\n                                                    country='PK'\n                                                    placeholder='Enter phone number'\n                                                    value={value}\n                                                    // onChange={ value => this.setState({ value }) }\n                                                    onChange={this.changeField}\n                                                    autoComplete={\"off\"}\n                                                    error={value ? (isValidPhoneNumber(value) ? undefined : \"Invalid phone number\") : \"Phone number required\"}\n                                                    countrySelectComponent={ReactSelectValidator}\n                                                    inputComponent={this}\n                                                    {...rest}\n                                                />\n                                            </>\n                                        ) : (\n                                            <NumberFormat customInput={TextValidator} value={value}\n                                                          onBlur={this.blurField}\n                                                          onChange={this.changeField} {...rest} />\n                                        )}\n                                    </>\n                                ) : (\n                                    <TextValidator InputProps={InputProps} value={(value === null) ? '' : value} onChange={this.changeField}\n                                                    {...rest} />\n                                )}\n                            </Fragment>\n                        )}\n                    </>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nCustomTextValidator.propTypes = {\n    field: PropTypes.shape({\n        label: PropTypes.string,\n        placeholder: PropTypes.string.isRequired,\n        value: PropTypes.any,\n        hideValueAttr: PropTypes.bool, // For Form Validator Plugin.\n        error: PropTypes.object\n    }),\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    name: PropTypes.string.isRequired,\n    validators: PropTypes.array.isRequired,\n    errorMessages: PropTypes.array.isRequired\n};\n\nexport default RoleBasedRenderHOC(ReduxGeneralHOC(withStyles(styles)(CustomTextValidator)));\n"]},"metadata":{},"sourceType":"module"}