{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import CollaboratorAndPreview from\"./component\";import{handleLoadingSpinnerClose,handleLoadingSpinnerOpenWithOptions}from\"../../../common/ReduxBased/LoadingSpinner/actions\";import instance,{BASE_URL_COL}from\"../../../../api/config\";var mapStateToProps=function mapStateToProps(state){return{templateSpecId:state.JDLANDING.data.templateSpecId,templateId:state.JDLANDING.data.templateId,addedCollaborator:state.ADD_COLLABORATOR.data.addedCollaborator};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{sendCollaboration:function sendCollaboration(addedCollaborator){dispatch(handleLoadingSpinnerOpenWithOptions(true,\"Sending Invite...\",\"large\"));instance.post(BASE_URL_COL+'User/SendCollabInvite',addedCollaborator).then(function(res){dispatch(handleLoadingSpinnerClose());}).catch(function(error){dispatch(handleLoadingSpinnerClose());});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{sendCollaboration:function sendCollaboration(){dispatchProps.sendCollaboration(stateProps.addedCollaborator);}},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(CollaboratorAndPreview);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/container.js"],"names":["connect","CollaboratorAndPreview","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","instance","BASE_URL_COL","mapStateToProps","state","templateSpecId","JDLANDING","data","templateId","addedCollaborator","ADD_COLLABORATOR","mapDispatchToProps","dispatch","props","sendCollaboration","post","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"2JAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,aAAnC,CACA,OACIC,yBADJ,CAEIC,mCAFJ,KAGO,mDAHP,CAIA,MAAOC,CAAAA,QAAP,EAAmBC,YAAnB,KAAuC,wBAAvC,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,cAAc,CAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBF,cADP,CAE9BG,UAAU,CAAEJ,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBC,UAFH,CAG9BC,iBAAiB,CAAEL,KAAK,CAACM,gBAAN,CAAuBH,IAAvB,CAA4BE,iBAHjB,CAAL,EAA7B,CAMA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWC,KAAX,QAAsB,CAC7CC,iBAAiB,CAAE,2BAACL,iBAAD,CAAuB,CACtCG,QAAQ,CAACZ,mCAAmC,CAAC,IAAD,CAAO,mBAAP,CAA4B,OAA5B,CAApC,CAAR,CAEAC,QAAQ,CAACc,IAAT,CAAcb,YAAY,CAAC,uBAA3B,CAAoDO,iBAApD,EACCO,IADD,CACM,SAAAC,GAAG,CAAI,CACTL,QAAQ,CAACb,yBAAyB,EAA1B,CAAR,CACH,CAHD,EAICmB,KAJD,CAIO,SAAAC,KAAK,CAAI,CACZP,QAAQ,CAACb,yBAAyB,EAA1B,CAAR,CACH,CAND,EAOH,CAX4C,CAAtB,EAA3B,CAeA,GAAMqB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAaC,aAAb,CAA4BC,QAA5B,0BACZF,UADY,IAEZC,aAFY,EAGfR,iBAAiB,CAAE,4BAAM,CACrBQ,aAAa,CAACR,iBAAd,CAAgCO,UAAU,CAACZ,iBAA3C,EACH,CALc,EAMZc,QANY,GAAnB,CASA,cAAe1B,CAAAA,OAAO,CAClBM,eADkB,CAElBQ,kBAFkB,CAGlBS,UAHkB,CAAP,CAIbtB,sBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CollaboratorAndPreview from \"./component\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport instance, { BASE_URL_COL } from \"../../../../api/config\";\n\nconst mapStateToProps = state => ({\n    templateSpecId: state.JDLANDING.data.templateSpecId,\n    templateId: state.JDLANDING.data.templateId,\n    addedCollaborator: state.ADD_COLLABORATOR.data.addedCollaborator\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    sendCollaboration: (addedCollaborator) => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Invite...\", \"large\"));\n\n        instance.post(BASE_URL_COL+'User/SendCollabInvite', addedCollaborator)\n        .then(res => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n    \n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    sendCollaboration: () => {\n        dispatchProps.sendCollaboration(stateProps.addedCollaborator)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(CollaboratorAndPreview);"]},"metadata":{},"sourceType":"module"}