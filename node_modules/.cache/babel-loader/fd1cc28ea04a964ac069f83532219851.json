{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\Dashboard\\\\common\\\\Header\\\\component.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MessagesIcon from \"@material-ui/icons/Chat\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ArrowDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ThemesIcon from \"@material-ui/icons/ColorLens\";\nimport LogoutIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport SideBar from \"../../../../common/SideBar/component\";\nimport styles from \"./styles\"; //Local variables file\n\nimport { getAppStoreValue } from \"../../../../common/Helpers\";\nimport Logo from \"../../../../../resources/images/logo.png\";\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null,\n      sidebarOpen: false,\n      labelPopperEl: null,\n      openMoveFolder: false\n    };\n\n    this.handleProfileMenuOpen = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleMenuClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.gotoProfilePage = () => {\n      this.props.history.push(\"/profile\");\n      this.handleMenuClose();\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        sidebarOpen: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        sidebarOpen: false\n      });\n    };\n\n    this.handleLogout = () => {\n      this.props.logOut(this.props.history);\n    };\n\n    this.handleLabelPopper = event => {\n      this.setState({\n        labelPopperEl: event.currentTarget\n      });\n    };\n\n    this.handleMovePopper = event => {\n      this.setState({\n        labelPopperEl: event.currentTarget,\n        openMoveFolder: true\n      });\n    };\n\n    this.closeMovePopover = () => {\n      this.setState({\n        openMoveFolder: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      anchorEl,\n      sidebarOpen: open\n    } = this.state;\n    const {\n      classes,\n      openNotificationPopover,\n      currentSignalpage\n    } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n    const userType = \"user\";\n\n    const renderMenu = /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: isMenuOpen,\n      onClose: this.handleMenuClose,\n      className: classes.optionsMenu,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: this.gotoProfilePage,\n        children: [/*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), \"Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: this.handleMenuClose,\n        children: [/*#__PURE__*/_jsxDEV(ThemesIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), \"Themes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: this.handleLogout,\n        children: [/*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        classes: {\n          root: classes.headerBar\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            classes: {\n              root: classes.menuIcon\n            },\n            \"aria-label\": \"Open drawer\",\n            onClick: this.handleDrawerOpen,\n            edge: \"start\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: '/',\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: classes.headerlogo,\n              src: Logo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.grow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              classes: {\n                root: classes.iconButton\n              },\n              children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n                className: classes.headerBarIcons\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              classes: {\n                root: classes.iconButton\n              },\n              onClick: this.handleMovePopper,\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                badgeContent: 17,\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n                  className: classes.headerBarIcons\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              classes: {\n                root: classes.iconButton + ' ' + classes.ddButton\n              },\n              \"aria-owns\": isMenuOpen ? \"material-appbar\" : undefined,\n              \"aria-haspopup\": \"true\",\n              onClick: this.handleProfileMenuOpen,\n              color: \"inherit\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"inherit\",\n                noWrap: true,\n                children: `${getAppStoreValue(\"nameTitle\")}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), renderMenu, !!userType && /*#__PURE__*/_jsxDEV(SideBar, {\n        type: userType,\n        open: open,\n        onClose: this.handleDrawerClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Header);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/common/Header/component.js"],"names":["React","PropTypes","AppBar","Toolbar","IconButton","Typography","Badge","MenuItem","Menu","withStyles","MenuIcon","AccountCircle","NotificationsIcon","MessagesIcon","HelpIcon","ArrowDownIcon","Avatar","ThemesIcon","LogoutIcon","SideBar","styles","getAppStoreValue","Logo","NavLink","Header","Component","state","anchorEl","sidebarOpen","labelPopperEl","openMoveFolder","handleProfileMenuOpen","event","setState","currentTarget","handleMenuClose","gotoProfilePage","props","history","push","handleDrawerOpen","handleDrawerClose","handleLogout","logOut","handleLabelPopper","handleMovePopper","closeMovePopover","render","open","classes","openNotificationPopover","currentSignalpage","isMenuOpen","Boolean","userType","renderMenu","vertical","horizontal","optionsMenu","root","headerBar","menuIcon","headerlogo","grow","iconButton","headerBarIcons","ddButton","undefined","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MessagesIcon from \"@material-ui/icons/Chat\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ArrowDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ThemesIcon from \"@material-ui/icons/ColorLens\";\nimport LogoutIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport SideBar from \"../../../../common/SideBar/component\";\nimport styles from \"./styles\";\n//Local variables file\nimport {getAppStoreValue} from \"../../../../common/Helpers\";\nimport Logo from \"../../../../../resources/images/logo.png\";\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n    state = {\n        anchorEl: null,\n        sidebarOpen: false,\n        labelPopperEl: null,\n        openMoveFolder: false,\n    };\n\n    handleProfileMenuOpen = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    gotoProfilePage = () => {\n        this.props.history.push(\"/profile\")\n        this.handleMenuClose()\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({\n            sidebarOpen: true\n        });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({\n            sidebarOpen: false\n        });\n    };\n\n    handleLogout = () => {\n      this.props.logOut(this.props.history);\n    };\n\n\n  handleLabelPopper = (event) => {\n        this.setState({\n            labelPopperEl: event.currentTarget\n        });\n    };\n\n    handleMovePopper = (event) => {\n        this.setState({\n            labelPopperEl: event.currentTarget,\n            openMoveFolder: true\n        });\n    };\n    closeMovePopover = () => {\n        this.setState({\n            openMoveFolder: false\n        });\n    };\n    render() {\n        const {anchorEl, sidebarOpen: open} = this.state;\n        const {\n            classes,\n            openNotificationPopover,\n            currentSignalpage,\n        } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n\n        const userType = \"user\"\n\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{vertical: \"top\", horizontal: \"right\"}}\n                transformOrigin={{vertical: \"top\", horizontal: \"right\"}}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n                className={classes.optionsMenu}\n            >\n                <MenuItem onClick={this.gotoProfilePage}>\n                    <AccountCircle/>\n                    Profile\n                </MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>\n                    <ThemesIcon/>\n                    Themes\n                </MenuItem>\n                <MenuItem onClick={this.handleLogout}>\n                    <LogoutIcon/>\n                    Logout\n                </MenuItem>\n            </Menu>\n        );\n\n        return (\n            <div className={classes.root}>\n\n                <AppBar position='static' classes={{root: classes.headerBar}}>\n                    <Toolbar>\n                        <IconButton classes={{root: classes.menuIcon}} aria-label='Open drawer'\n                                    onClick={this.handleDrawerOpen} edge='start'>\n                            <MenuIcon/>\n                        </IconButton>\n                        <NavLink \n                            to={'/'}\n                        >\n                            <img className={classes.headerlogo} src={Logo} alt=\"\" />\n                        </NavLink>\n                        <div className={classes.grow}/>\n                        <div>\n                            <IconButton color='inherit' classes={{root: classes.iconButton}}>\n                                <HelpIcon className={classes.headerBarIcons}/>\n                            </IconButton>\n                            <IconButton\n                                color='inherit'\n                                classes={{root: classes.iconButton}}\n                                onClick={this.handleMovePopper}\n                            >\n                                <Badge badgeContent={17} color='secondary'>\n                                    <NotificationsIcon className={classes.headerBarIcons}/>\n                                </Badge>\n\n                            </IconButton>\n                            <IconButton\n                                classes={{root: classes.iconButton + ' ' + classes.ddButton}}\n                                aria-owns={isMenuOpen ? \"material-appbar\" : undefined}\n                                aria-haspopup='true'\n                                onClick={this.handleProfileMenuOpen}\n                                color='inherit'\n                            >\n                                {/* <AccountCircle className={classes.accountCircle} /> */}\n                                {/* <Avatar alt='Profile Picture' src={userImage} className={classes.avatarStyle}/> */}\n\n                                <Typography variant='subtitle2' color='inherit' noWrap>\n                                    {`${getAppStoreValue(\"nameTitle\")}`}\n                                </Typography>\n                                <ArrowDownIcon color='inherit'/>\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                {renderMenu}\n                {!!userType && <SideBar type={userType} open={open} onClose={this.handleDrawerClose}/>}\n            </div>\n        );\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Header);\n"]},"metadata":{},"sourceType":"module"}