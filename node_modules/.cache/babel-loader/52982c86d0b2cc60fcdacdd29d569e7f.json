{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import UserDashboardJobs from\"./component\";import instance,{BASE_URL}from\"../../../../api/config\";import{handleLoadingSpinnerClose,handleLoadingSpinnerOpenWithOptions}from\"../../../common/ReduxBased/LoadingSpinner/actions\";import{saveCompleteTemplates,saveIncompleteTemplates,saveIncollaborationTemplates,saveCollaborationCompleteTemplates}from\"./actions\";var mapStateToProps=function mapStateToProps(state){return{templatesData:state.JOBS_DASHBOARD.data.JDs};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{fetchDataIfNeeded:function fetchDataIfNeeded(){dispatch(handleLoadingSpinnerOpenWithOptions(true,\"Loading Templates...\",\"large\"));instance.get(BASE_URL+'User/JD/GetJDs?status=all').then(function(res){var completeTemplates=res.data.filter(function(item){return item.status===\"Complete\";});var incompletesTemplates=res.data.filter(function(item){return item.status===\"InComplete\";});var incollaborationTemplates=res.data.filter(function(item){return item.status===\"InCollaboration\";});var colcompleteTemplates=res.data.filter(function(item){return item.status===\"CollaborationComplete\";});dispatch(saveCompleteTemplates(completeTemplates));dispatch(saveIncompleteTemplates(incompletesTemplates));dispatch(saveIncollaborationTemplates(incollaborationTemplates));dispatch(saveCollaborationCompleteTemplates(colcompleteTemplates));dispatch(handleLoadingSpinnerClose());}).catch(function(error){dispatch(handleLoadingSpinnerClose());});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(UserDashboardJobs);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/Jobs/container.js"],"names":["connect","UserDashboardJobs","instance","BASE_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","saveCompleteTemplates","saveIncompleteTemplates","saveIncollaborationTemplates","saveCollaborationCompleteTemplates","mapStateToProps","state","templatesData","JOBS_DASHBOARD","data","JDs","mapDispatchToProps","dispatch","props","fetchDataIfNeeded","get","then","res","completeTemplates","filter","item","status","incompletesTemplates","incollaborationTemplates","colcompleteTemplates","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"2JAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,aAA9B,CACA,MAAOC,CAAAA,QAAP,EAAmBC,QAAnB,KAAmC,wBAAnC,CACA,OACIC,yBADJ,CAEIC,mCAFJ,KAGO,mDAHP,CAIA,OACIC,qBADJ,CAEIC,uBAFJ,CAGIC,4BAHJ,CAIIC,kCAJJ,KAKO,WALP,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,aAAa,CAAED,KAAK,CAACE,cAAN,CAAqBC,IAArB,CAA0BC,GADX,CAAL,EAA7B,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWC,KAAX,QAAsB,CAC7CC,iBAAiB,CAAE,4BAAM,CACrBF,QAAQ,CAACZ,mCAAmC,CAAC,IAAD,CAAO,sBAAP,CAA+B,OAA/B,CAApC,CAAR,CACAH,QAAQ,CAACkB,GAAT,CAAajB,QAAQ,CAAC,2BAAtB,EACCkB,IADD,CACM,SAAAC,GAAG,CAAI,CACT,GAAIC,CAAAA,iBAAiB,CAAGD,GAAG,CAACR,IAAJ,CAASU,MAAT,CAAgB,SAAAC,IAAI,CAAI,CAC5C,MAAOA,CAAAA,IAAI,CAACC,MAAL,GAAgB,UAAvB,CACH,CAFuB,CAAxB,CAIA,GAAIC,CAAAA,oBAAoB,CAAGL,GAAG,CAACR,IAAJ,CAASU,MAAT,CAAgB,SAAAC,IAAI,CAAI,CAC/C,MAAOA,CAAAA,IAAI,CAACC,MAAL,GAAgB,YAAvB,CACH,CAF0B,CAA3B,CAIA,GAAIE,CAAAA,wBAAwB,CAAGN,GAAG,CAACR,IAAJ,CAASU,MAAT,CAAgB,SAAAC,IAAI,CAAI,CACnD,MAAOA,CAAAA,IAAI,CAACC,MAAL,GAAgB,iBAAvB,CACH,CAF8B,CAA/B,CAIA,GAAIG,CAAAA,oBAAoB,CAAGP,GAAG,CAACR,IAAJ,CAASU,MAAT,CAAgB,SAAAC,IAAI,CAAI,CAC/C,MAAOA,CAAAA,IAAI,CAACC,MAAL,GAAgB,uBAAvB,CACH,CAF0B,CAA3B,CAIAT,QAAQ,CAACX,qBAAqB,CAACiB,iBAAD,CAAtB,CAAR,CACAN,QAAQ,CAACV,uBAAuB,CAACoB,oBAAD,CAAxB,CAAR,CACAV,QAAQ,CAACT,4BAA4B,CAACoB,wBAAD,CAA7B,CAAR,CACAX,QAAQ,CAACR,kCAAkC,CAACoB,oBAAD,CAAnC,CAAR,CACAZ,QAAQ,CAACb,yBAAyB,EAA1B,CAAR,CACH,CAvBD,EAwBC0B,KAxBD,CAwBO,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAACb,yBAAyB,EAA1B,CAAR,CACH,CA1BD,EA2BH,CA9B4C,CAAtB,EAA3B,CAiCA,GAAM4B,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAaC,aAAb,CAA4BC,QAA5B,0BACZF,UADY,IAEZC,aAFY,IAGZC,QAHY,GAAnB,CAMA,cAAenC,CAAAA,OAAO,CAClBU,eADkB,CAElBM,kBAFkB,CAGlBgB,UAHkB,CAAP,CAIb/B,iBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport UserDashboardJobs from \"./component\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    saveCompleteTemplates,\n    saveIncompleteTemplates,\n    saveIncollaborationTemplates,\n    saveCollaborationCompleteTemplates\n} from \"./actions\";\n\nconst mapStateToProps = state => ({\n    templatesData: state.JOBS_DASHBOARD.data.JDs\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    fetchDataIfNeeded: () => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Templates...\", \"large\"));\n        instance.get(BASE_URL+'User/JD/GetJDs?status=all')\n        .then(res => {\n            let completeTemplates = res.data.filter(item => {\n                return item.status === \"Complete\"\n            })\n\n            let incompletesTemplates = res.data.filter(item => {\n                return item.status === \"InComplete\"\n            })\n\n            let incollaborationTemplates = res.data.filter(item => {\n                return item.status === \"InCollaboration\"\n            })\n\n            let colcompleteTemplates = res.data.filter(item => {\n                return item.status === \"CollaborationComplete\"\n            })\n            \n            dispatch(saveCompleteTemplates(completeTemplates))\n            dispatch(saveIncompleteTemplates(incompletesTemplates))\n            dispatch(saveIncollaborationTemplates(incollaborationTemplates))\n            dispatch(saveCollaborationCompleteTemplates(colcompleteTemplates))\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(UserDashboardJobs);"]},"metadata":{},"sourceType":"module"}