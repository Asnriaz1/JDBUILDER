{"ast":null,"code":"import ls from 'local-storage';\nexport const JD_JOB_OPENING_TEXT_CHANGE_HANDLER = \"JD_JOB_OPENING_TEXT_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_SELECT_CHANGE_HANDLER = \"JD_JOB_OPENING_SELECT_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER = \"JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER\";\nexport const JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER = \"JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER\";\nexport const JD_JOB_OPENING_RADIO_CHANGE_HANDLER = \"JD_JOB_OPENING_RADIO_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_SWITCH_CHANGE_HANDLER = \"JD_JOB_OPENING_SWITCH_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER = \"JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER\";\nexport const JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER = \"JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER = \"JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER = \"JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER = \"JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER = \"JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER = \"JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER = \"JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_FUNCTION_HANDLER = \"JD_JOB_OPENING_SAVE_FUNCTION_HANDLER\";\nexport const textFieldChangeHandler = (name, value) => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n    payload: value,\n    key: name\n  });\n};\nexport const selectFieldChangeHandler = (name, value) => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_SELECT_CHANGE_HANDLER,\n    payload: value,\n    key: name\n  });\n};\nexport const toggleAddRoleExpansionPanel = value => dispatch => {\n  const newval = !value;\n  dispatch({\n    type: JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER,\n    payload: newval\n  });\n};\nexport const toggleAddResExpansionPanel = value => dispatch => {\n  const newval = !value;\n  dispatch({\n    type: JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER,\n    payload: newval\n  });\n};\nexport const radioChangeHandler = value => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_RADIO_CHANGE_HANDLER,\n    payload: value\n  });\n};\nexport const switchChangeHandler = (name, value) => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_SWITCH_CHANGE_HANDLER,\n    key: name,\n    payload: value\n  });\n};\nexport const rolesActiveHandler = value => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER,\n    payload: value\n  });\n};\nexport const resActiveHandler = value => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER,\n    payload: value\n  });\n};\nexport const saveUpdatedRolesResEditor = value => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER,\n    payload: value\n  });\n};\nexport const saveUpdatedRolesResAsHTML = value => dispatch => {\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER,\n    payload: value\n  });\n};\nexport const fetchDataIfNeeded = value => dispatch => {\n  let data = value;\n  let rolesData = data.roles.map(item => {\n    return {\n      id: item.role_id,\n      desc: item.title,\n      isActive: false\n    };\n  });\n  let resData = data.responsibilities ? data.responsibilities.map(item => {\n    return {\n      id: item.role_id,\n      desc: item.title,\n      isActive: false\n    };\n  }) : [];\n  let industriesData = data.industries ? data.industries.map(item => {\n    return {\n      id: item.id,\n      value: item.title,\n      label: item.title\n    };\n  }) : [];\n  let functionData = data.functions ? data.functions.map(item => {\n    return {\n      id: item.id,\n      value: item.title,\n      label: item.title\n    };\n  }) : [];\n  let experienceData = data.exp;\n  experienceData = experienceData.split(\"-\");\n\n  if (experienceData.length > 1) {\n    dispatch({\n      type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n      payload: experienceData[0],\n      key: \"minYearField\"\n    });\n    dispatch({\n      type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n      payload: experienceData[1],\n      key: \"maxYearField\"\n    });\n  } //save title\n\n\n  ls.set('jobTitle', data.title);\n  dispatch({\n    type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n    payload: data.title,\n    key: \"jobTitleField\"\n  }); //save new roles\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER,\n    payload: rolesData\n  }); //save new responsibilties\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER,\n    payload: resData\n  }); //save industries\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER,\n    payload: industriesData\n  }); //save function\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_FUNCTION_HANDLER,\n    payload: functionData\n  });\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER,\n    payload: value\n  });\n};\nexport const fetchDataSuggestedTemplate = value => dispatch => {\n  let data = value;\n  let rolesData = data.roles.map(item => {\n    return {\n      id: item.role_id,\n      desc: item.title,\n      isActive: false,\n      used: item.used\n    };\n  });\n  let resData = data.responsibilities ? data.responsibilities.map(item => {\n    return {\n      id: item.role_id,\n      desc: item.title,\n      isActive: false,\n      used: item.used\n    };\n  }) : [];\n  let industriesData = data.industries ? data.industries.map(item => {\n    return {\n      id: item.id,\n      value: item.title,\n      label: item.title\n    };\n  }) : [];\n  let functionData = data.functions ? data.functions.map(item => {\n    return {\n      id: item.id,\n      value: item.title,\n      label: item.title\n    };\n  }) : [];\n  let experienceData = data.exp;\n  console.log(experienceData); // experienceData = experienceData.split(\"-\")\n\n  if (experienceData != null) {\n    dispatch({\n      type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n      payload: experienceData.min_exp,\n      key: \"minYearField\"\n    });\n    dispatch({\n      type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n      payload: experienceData.max_exp,\n      key: \"maxYearField\"\n    });\n  } //save title\n\n\n  ls.set('jobTitle', data.title);\n  dispatch({\n    type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n    payload: data.title,\n    key: \"jobTitleField\"\n  }); //save new roles\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER,\n    payload: rolesData\n  }); //save new responsibilties\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER,\n    payload: resData\n  }); //save industries\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER,\n    payload: industriesData\n  }); //save function\n\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_FUNCTION_HANDLER,\n    payload: functionData\n  });\n  dispatch({\n    type: JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER,\n    payload: value\n  });\n};","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/JobOpening/actions.js"],"names":["ls","JD_JOB_OPENING_TEXT_CHANGE_HANDLER","JD_JOB_OPENING_SELECT_CHANGE_HANDLER","JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER","JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER","JD_JOB_OPENING_RADIO_CHANGE_HANDLER","JD_JOB_OPENING_SWITCH_CHANGE_HANDLER","JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER","JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER","JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER","JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER","JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER","JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER","JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER","JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER","JD_JOB_OPENING_SAVE_FUNCTION_HANDLER","textFieldChangeHandler","name","value","dispatch","type","payload","key","selectFieldChangeHandler","toggleAddRoleExpansionPanel","newval","toggleAddResExpansionPanel","radioChangeHandler","switchChangeHandler","rolesActiveHandler","resActiveHandler","saveUpdatedRolesResEditor","saveUpdatedRolesResAsHTML","fetchDataIfNeeded","data","rolesData","roles","map","item","id","role_id","desc","title","isActive","resData","responsibilities","industriesData","industries","label","functionData","functions","experienceData","exp","split","length","set","fetchDataSuggestedTemplate","used","console","log","min_exp","max_exp"],"mappings":"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","sourcesContent":["import ls from 'local-storage';\n\nexport const JD_JOB_OPENING_TEXT_CHANGE_HANDLER = \"JD_JOB_OPENING_TEXT_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_SELECT_CHANGE_HANDLER = \"JD_JOB_OPENING_SELECT_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER = \"JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER\";\nexport const JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER = \"JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER\";\nexport const JD_JOB_OPENING_RADIO_CHANGE_HANDLER = \"JD_JOB_OPENING_RADIO_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_SWITCH_CHANGE_HANDLER = \"JD_JOB_OPENING_SWITCH_CHANGE_HANDLER\";\nexport const JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER = \"JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER\";\nexport const JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER = \"JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER = \"JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER = \"JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER = \"JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER = \"JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER = \"JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER = \"JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER\";\nexport const JD_JOB_OPENING_SAVE_FUNCTION_HANDLER = \"JD_JOB_OPENING_SAVE_FUNCTION_HANDLER\";\n\nexport const textFieldChangeHandler = (name, value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n        payload: value,\n        key: name\n    });\n};\n\nexport const selectFieldChangeHandler = (name, value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_SELECT_CHANGE_HANDLER,\n        payload: value,\n        key: name\n    });\n};\n\nexport const toggleAddRoleExpansionPanel = (value) => dispatch => {\n\n    const newval = !value;\n\n    dispatch({\n        type: JD_JOB_OPENING_ADD_ROLE_EXPANSION_HANDLER,\n        payload: newval,\n    });\n};\n\nexport const toggleAddResExpansionPanel = (value) => dispatch => {\n\n    const newval = !value;\n\n    dispatch({\n        type: JD_JOB_OPENING_ADD_RES_EXPANSION_HANDLER,\n        payload: newval,\n    });\n};\n\nexport const radioChangeHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_RADIO_CHANGE_HANDLER,\n        payload: value,\n    });\n};\n\nexport const switchChangeHandler = (name , value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_SWITCH_CHANGE_HANDLER,\n        key: name,\n        payload: value,\n    });\n};\n\nexport const rolesActiveHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_EDITOR_ACTIVE_ROLE_HANDLER,\n        payload: value,\n    });\n};\n\nexport const resActiveHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_EDITOR_ACTIVE_RES_HANDLER,\n        payload: value,\n    });\n};\n\nexport const saveUpdatedRolesResEditor = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_HANDLER,\n        payload: value,\n    });\n};\n\nexport const saveUpdatedRolesResAsHTML = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_EDITOR_ROLES_RES_AS_HTML_HANDLER,\n        payload: value,\n    });\n};\n\nexport const fetchDataIfNeeded = (value) => dispatch => {\n    \n    let data = value;\n\n    let rolesData = data.roles.map(item => {\n        return {\n            id: item.role_id,\n            desc: item.title,\n            isActive: false\n        }\n    })\n\n    let resData = data.responsibilities ? data.responsibilities.map(item => {\n        return {\n            id: item.role_id,\n            desc: item.title,\n            isActive: false\n        }\n    }) : []\n\n    let industriesData = data.industries ? data.industries.map(item => {\n        return {\n            id: item.id,\n            value: item.title,\n            label: item.title\n        }\n    }) : []\n\n    let functionData = data.functions ? data.functions.map(item => {\n        return {\n            id: item.id,\n            value: item.title,\n            label: item.title\n        }\n    }) : []\n\n    let experienceData = data.exp;\n    experienceData = experienceData.split(\"-\")\n    if(experienceData.length > 1) {\n        dispatch({\n            type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n            payload: experienceData[0],\n            key: \"minYearField\"\n        });\n\n        dispatch({\n            type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n            payload: experienceData[1],\n            key: \"maxYearField\"\n        });\n    }\n\n    //save title\n    ls.set('jobTitle', data.title);\n    dispatch({\n        type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n        payload: data.title,\n        key: \"jobTitleField\"\n    });\n    \n\n    //save new roles\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER,\n        payload: rolesData,\n    })\n\n    //save new responsibilties\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER,\n        payload: resData,\n    })\n\n    //save industries\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER,\n        payload: industriesData,\n    })\n\n    //save function\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_FUNCTION_HANDLER,\n        payload: functionData,\n    })\n    \n    dispatch({\n        type: JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER,\n        payload: value,\n    });\n};\n\nexport const fetchDataSuggestedTemplate = (value) => dispatch => {\n    \n    let data = value;\n\n    let rolesData = data.roles.map(item => {\n        return {\n            id: item.role_id,\n            desc: item.title,\n            isActive: false,\n            used: item.used,\n        }\n    })\n\n    let resData = data.responsibilities ? data.responsibilities.map(item => {\n        return {\n            id: item.role_id,\n            desc: item.title,\n            isActive: false,\n            used: item.used\n        }\n    }) : []\n\n    let industriesData = data.industries ? data.industries.map(item => {\n        return {\n            id: item.id,\n            value: item.title,\n            label: item.title\n        }\n    }) : []\n\n    let functionData = data.functions ? data.functions.map(item => {\n        return {\n            id: item.id,\n            value: item.title,\n            label: item.title\n        }\n    }) : []\n     let experienceData = data.exp;\nconsole.log(experienceData)\n    // experienceData = experienceData.split(\"-\")\n    if(experienceData != null) {\n        dispatch({\n            type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n            payload: experienceData.min_exp,\n            key: \"minYearField\"\n        });\n\n        dispatch({\n            type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n            payload: experienceData.max_exp,\n            key: \"maxYearField\"\n        });\n    }\n\n    //save title\n    ls.set('jobTitle', data.title);\n    dispatch({\n        type: JD_JOB_OPENING_TEXT_CHANGE_HANDLER,\n        payload: data.title,\n        key: \"jobTitleField\"\n    });\n\n    //save new roles\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_NEW_ROLES_HANDLER,\n        payload: rolesData,\n    })\n\n    //save new responsibilties\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_NEW_RESPONSIBILITIES_HANDLER,\n        payload: resData,\n    })\n\n    //save industries\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_INDUSTRIES_HANDLER,\n        payload: industriesData,\n    })\n\n    //save function\n    dispatch({\n        type: JD_JOB_OPENING_SAVE_FUNCTION_HANDLER,\n        payload: functionData,\n    })\n    \n    dispatch({\n        type: JD_JOB_OPENING_SAVE_NEW_DATA_HANDLER,\n        payload: value,\n    });\n};"]},"metadata":{},"sourceType":"module"}