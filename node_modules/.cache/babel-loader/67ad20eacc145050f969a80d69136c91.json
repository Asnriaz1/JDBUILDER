{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\Signup\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignupPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginId: 1\n    };\n\n    this.selectedLogin = val => {\n      this.setState({\n        loginId: val\n      });\n    };\n\n    this.SubmitHandler = () => {\n      this.props.submitSignUpHandler();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      fields,\n      textFieldChangeHandler,\n      isSignUp,\n      error\n    } = this.props;\n    return isSignUp ? React.createElement(Redirect, {\n      to: \"/confirmation_pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.polygonbg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: classes.signupWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.signuptitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      className: classes.signupsubtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign up to Gigtal, using a valid email address.\"), React.createElement(ValidatorForm, {\n      onSubmit: this.SubmitHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CustomTextValidator, {\n      id: fields.EmailField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.EmailField.placeholder,\n      name: fields.EmailField.name,\n      value: fields.EmailField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.EmailField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.signupfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(CustomTextValidator, {\n      id: fields.userNameField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.userNameField.placeholder,\n      name: fields.userNameField.name,\n      value: fields.userNameField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.userNameField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.signupfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(CustomTextValidator, {\n      id: fields.PasswordField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"password\",\n      placeholder: fields.PasswordField.placeholder,\n      name: fields.PasswordField.name,\n      value: fields.PasswordField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.PasswordField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.signupfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(CustomTextValidator, {\n      id: fields.ConfirmPasswordField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"password\",\n      placeholder: fields.ConfirmPasswordField.placeholder,\n      name: fields.ConfirmPasswordField.name,\n      value: fields.ConfirmPasswordField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.ConfirmPasswordField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.signupfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), error ? React.createElement(\"span\", {\n      className: classes.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, error) : null, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      className: classes.signupSubmitBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.signUpOptionsRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"already have an account? \", React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Sign in\"), \" \"))))), React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      className: \"dNoneRightSignup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.signupRightWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signuprightwithbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapperborder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: classes.textAboveImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Join Hands With Us\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\")))))));\n  }\n\n}\n\nexport default withStyles(styles)(SignupPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Signup/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","Redirect","SignupPage","state","loginId","selectedLogin","val","setState","SubmitHandler","props","submitSignUpHandler","render","classes","fields","textFieldChangeHandler","isSignUp","error","polygonbg","signupWrapper","signuptitle","signupsubtitle","EmailField","name","placeholder","value","signupfields","userNameField","PasswordField","ConfirmPasswordField","signupSubmitBtn","signUpOptionsRight","signupRightWrapper","textAboveImage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignupPage extends Component {\r\n\r\n    state = {\r\n        loginId: 1,\r\n    }\r\n\r\n    selectedLogin = (val) => {\r\n        this.setState({\r\n            loginId: val\r\n        })\r\n    }\r\n    SubmitHandler = () => {\r\n        this.props.submitSignUpHandler();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {\r\n            classes,\r\n            fields,\r\n            textFieldChangeHandler,\r\n            isSignUp,\r\n            error\r\n        } = this.props;\r\n        return (\r\n            isSignUp ? \r\n            <Redirect to=\"/confirmation_pending\"/>\r\n            : <>\r\n                <div className={classes.polygonbg}>\r\n                <Grid container className={classes.signupWrapper}>\r\n                    {/* signup header starts here */}\r\n                    {/* signup header ends here */}\r\n\r\n                    <Grid item sm={4}>\r\n                        <h1 className={classes.signuptitle} >Sign Up</h1>\r\n\r\n                        {/* <div className={classes.selectLoginOpt}>\r\n                            <Button  className={this.state.loginId === 1 ? classes.professionalLogin : classes.corporateLogin} onClick={(e) => this.selectedLogin(1)}>\r\n                                Candidate\r\n                            </Button>\r\n                            \r\n                            <Button className={this.state.loginId === 2 ? classes.professionalLogin : classes.corporateLogin} onClick={(e) => this.selectedLogin(2)}>\r\n                                Corporate\r\n                            </Button>\r\n                        </div> */}\r\n                        {/* <h1  >Sign Up </h1> */}\r\n                        <p className={classes.signupsubtitle} >Sign up to Gigtal, using a valid email address.</p>\r\n                        <ValidatorForm\r\n                        onSubmit={this.SubmitHandler}\r\n                        autoComplete=\"off\"\r\n                        >\r\n\r\n                            <CustomTextValidator\r\n                            id={fields.EmailField.name}\r\n                            validations={true}\r\n                            fullWidth={true}\r\n                            type=\"text\"\r\n                            placeholder={fields.EmailField.placeholder}\r\n                            name={fields.EmailField.name}\r\n                            value={fields.EmailField.value}\r\n                            onChange={value => {\r\n                                textFieldChangeHandler(\r\n                                    fields.EmailField.name,\r\n                                    value\r\n                                );\r\n                            }}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Required\"]}\r\n                            className={classes.signupfields}\r\n                            />\r\n\r\n                            <CustomTextValidator\r\n                            id={fields.userNameField.name}\r\n                            validations={true}\r\n                            fullWidth={true}\r\n                            type=\"text\"\r\n                            placeholder={fields.userNameField.placeholder}\r\n                            name={fields.userNameField.name}\r\n                            value={fields.userNameField.value}\r\n                            onChange={value => {\r\n                                textFieldChangeHandler(\r\n                                    fields.userNameField.name,\r\n                                    value\r\n                                );\r\n                            }}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Required\"]}\r\n                            className={classes.signupfields}\r\n                            />\r\n\r\n                            <CustomTextValidator\r\n                                id={fields.PasswordField.name}\r\n                                validations={true}\r\n                                fullWidth={true}\r\n                                type=\"password\"\r\n                                placeholder={fields.PasswordField.placeholder}\r\n                                name={fields.PasswordField.name}\r\n                                value={fields.PasswordField.value}\r\n                                onChange={value => {\r\n                                    textFieldChangeHandler(\r\n                                        fields.PasswordField.name,\r\n                                        value\r\n                                    );\r\n                                }}\r\n                                validators={[\"required\"]}\r\n                                errorMessages={[\"Required\"]}\r\n                                className={classes.signupfields}\r\n                            />\r\n\r\n                            <CustomTextValidator\r\n                            id={fields.ConfirmPasswordField.name}\r\n                            validations={true}\r\n                            fullWidth={true}\r\n                            type=\"password\"\r\n                            placeholder={fields.ConfirmPasswordField.placeholder}\r\n                            name={fields.ConfirmPasswordField.name}\r\n                            value={fields.ConfirmPasswordField.value}\r\n                            onChange={value => {\r\n                                textFieldChangeHandler(\r\n                                    fields.ConfirmPasswordField.name,\r\n                                    value\r\n                                );\r\n                            }}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Required\"]}\r\n                            className={classes.signupfields}\r\n                            />\r\n\r\n                            {\r\n                                error ? <span className={classes.error}>{error}</span> : null\r\n                            }\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.signupSubmitBtn} >\r\n                                Sign Up\r\n                            </Button>\r\n                            <div >\r\n                                <div className={classes.signUpOptionsRight}>\r\n                                <span >already have an account? <a href=\"/login\">Sign in</a> </span>\r\n                                </div> \r\n                               \r\n\r\n                            \r\n                        </div>\r\n\r\n                        </ValidatorForm>\r\n                    </Grid>\r\n                    <Grid item sm={2}>\r\n                    </Grid>\r\n                    <Grid item sm={6} className=\"dNoneRightSignup\">\r\n                        <div className={classes.signupRightWrapper}>\r\n                            <div className=\"signuprightwithbg\">\r\n                                <div className=\"wrapperborder\"></div>\r\n                                <h1 className={classes.textAboveImage}>Join Hands With Us</h1>\r\n                                {/* <img src={SignUpRightImg} /> */}\r\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Grid>\r\n                   \r\n                </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SignupPage);"]},"metadata":{},"sourceType":"module"}