{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\Login\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Redirect, NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.SubmitHandler = () => {\n      // window.location.replace(\"/candidate\")\n      this.props.submitFormHandler();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      fields,\n      textFieldChangeHandler,\n      isLogin,\n      isPopup,\n      error,\n      submitandSaveBtn\n    } = this.props;\n    return isLogin ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isPopup ? \"\" : classes.polygonbg,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: isPopup ? \"\" : classes.loginWrapper,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: isPopup ? 12 : 4,\n            className: isPopup ? \"\" : classes.loginContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Log In \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n              onSubmit: submitandSaveBtn ? submitandSaveBtn : this.SubmitHandler,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(CustomTextValidator, {\n                id: fields.EmailField.name,\n                validations: true,\n                fullWidth: true,\n                type: \"text\",\n                placeholder: fields.EmailField.placeholder,\n                name: fields.EmailField.name,\n                value: fields.EmailField.value,\n                onChange: value => {\n                  textFieldChangeHandler(fields.EmailField.name, value);\n                },\n                validators: [\"required\"],\n                errorMessages: [\"Required\"],\n                className: classes.loginfields\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CustomTextValidator, {\n                id: fields.PasswordField.name,\n                validations: true,\n                fullWidth: true,\n                type: \"password\",\n                placeholder: fields.PasswordField.placeholder,\n                name: fields.PasswordField.name,\n                value: fields.PasswordField.value,\n                onChange: value => {\n                  textFieldChangeHandler(fields.PasswordField.name, value);\n                },\n                validators: [\"required\"],\n                errorMessages: [\"Required\"],\n                className: classes.loginfields\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this), error ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.error,\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.passwordOptions,\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  className: classes.rememberMECheckbox,\n                  value: \"end\",\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 42\n                  }, this),\n                  label: \"Remember me\",\n                  labelPlacement: \"end\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: '/resetpassword',\n                  className: classes.forgetPassword,\n                  children: \"Forget your password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                className: classes.loginSubmitBtn,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.passwordOptions,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.passwordOptionsLeft,\n                  children: [\"Don't have account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/signup\",\n                    children: \"Sign up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 96\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            className: \"dNoneRightLogin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default withStyles(styles)(LoginPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Login/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","FormControlLabel","Checkbox","Redirect","NavLink","LoginPage","SubmitHandler","props","submitFormHandler","render","classes","fields","textFieldChangeHandler","isLogin","isPopup","error","submitandSaveBtn","polygonbg","loginWrapper","loginContainer","EmailField","name","placeholder","value","loginfields","PasswordField","passwordOptions","rememberMECheckbox","forgetPassword","loginSubmitBtn","passwordOptionsLeft"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Redirect, NavLink } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n    SubmitHandler = () => {\n        // window.location.replace(\"/candidate\")\n        this.props.submitFormHandler()\n    }\n\n    render() {\n        const { \n            classes,\n            fields,\n            textFieldChangeHandler, \n            isLogin, \n            isPopup,\n            error,\n            submitandSaveBtn\n        } = this.props;\n\n        return (\n            isLogin ? <Redirect to=\"/user\"/> :\n            <>\n            <div className={isPopup ? \"\" :classes.polygonbg}>\n                 <Grid container className={isPopup ? \"\" : classes.loginWrapper} justify=\"center\">\n                    <Grid item xs={12} sm={12} md={isPopup ? 12 : 4} className={isPopup ? \"\" : classes.loginContainer}>\n                        <h1  >Log In </h1>\n                        <ValidatorForm\n                        onSubmit={submitandSaveBtn ? submitandSaveBtn : this.SubmitHandler}\n                        autoComplete=\"off\"\n                        >\n\n                            <CustomTextValidator\n                                id={fields.EmailField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"text\"\n                                placeholder={fields.EmailField.placeholder}\n                                name={fields.EmailField.name}\n                                value={fields.EmailField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.EmailField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.loginfields}\n                            />\n\n                            <CustomTextValidator\n                                id={fields.PasswordField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"password\"\n                                placeholder={fields.PasswordField.placeholder}\n                                name={fields.PasswordField.name}\n                                value={fields.PasswordField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.PasswordField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.loginfields}\n                            />\n                            {\n                                error ? <span className={classes.error}>{error}</span> : null\n                            }\n                              <div className={classes.passwordOptions}>\n                              <FormControlLabel className={classes.rememberMECheckbox}\n                                value=\"end\"\n                                control={<Checkbox color=\"primary\" />}\n                                label=\"Remember me\"\n                                labelPlacement=\"end\"\n                                />\n                            <NavLink to={'/resetpassword'} className={classes.forgetPassword}>Forget your password</NavLink>\n\n                            \n                        </div>\n\n                           \n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.loginSubmitBtn} >\n                                Login\n                            </Button>\n                            <div className={classes.passwordOptions}>\n                                <p className={classes.passwordOptionsLeft}>Don't have account? <a href=\"/signup\">Sign up</a> </p>\n                        </div>\n                        </ValidatorForm>\n                    </Grid>\n                    <Grid item sm={2}>\n                    </Grid>\n                    <Grid item sm={6} className=\"dNoneRightLogin\">\n                    </Grid>\n                  \n                </Grid>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(LoginPage);"]},"metadata":{},"sourceType":"module"}