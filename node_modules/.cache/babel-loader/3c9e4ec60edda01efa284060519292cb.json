{"ast":null,"code":"import { connect } from \"react-redux\";\nimport DashboardLanding from \"./component\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { saveJDCount } from \"./actions\";\n\nconst mapStateToProps = state => ({\n  jdCount: state.LANDING_DASHBOARD.data.jdCount\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  fetchDataIfNeeded: () => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n    instance.get(BASE_URL + 'User/JD/GetJDCount').then(res => {\n      dispatch(saveJDCount(res.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardLanding);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/Landing/container.js"],"names":["connect","DashboardLanding","instance","BASE_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","saveJDCount","mapStateToProps","state","jdCount","LANDING_DASHBOARD","data","mapDispatchToProps","dispatch","props","fetchDataIfNeeded","get","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,wBAAnC;AACA,SACIC,yBADJ,EAEIC,mCAFJ,QAGO,mDAHP;AAIA,SACIC,WADJ,QAEQ,WAFR;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,OAAO,EAAED,KAAK,CAACE,iBAAN,CAAwBC,IAAxB,CAA6BF;AADR,CAAL,CAA7B;;AAIA,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7CC,EAAAA,iBAAiB,EAAE,MAAM;AACrBF,IAAAA,QAAQ,CAACR,mCAAmC,CAAC,IAAD,EAAO,YAAP,EAAqB,OAArB,CAApC,CAAR;AACAH,IAAAA,QAAQ,CAACc,GAAT,CAAab,QAAQ,GAAC,oBAAtB,EACCc,IADD,CACMC,GAAG,IAAI;AACTL,MAAAA,QAAQ,CAACP,WAAW,CAACY,GAAG,CAACP,IAAL,CAAZ,CAAR;AACAE,MAAAA,QAAQ,CAACT,yBAAyB,EAA1B,CAAR;AACH,KAJD,EAKCe,KALD,CAKOC,KAAK,IAAI;AACZP,MAAAA,QAAQ,CAACT,yBAAyB,EAA1B,CAAR;AACH,KAPD;AAQH;AAX4C,CAAtB,CAA3B;;AAcA,MAAMiB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGF,UADsD;AAEzD,KAAGC,aAFsD;AAGzD,KAAGC;AAHsD,CAA1C,CAAnB;;AAMA,eAAexB,OAAO,CAClBO,eADkB,EAElBK,kBAFkB,EAGlBS,UAHkB,CAAP,CAIbpB,gBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport DashboardLanding from \"./component\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    saveJDCount\n} from  \"./actions\";\n\nconst mapStateToProps = state => ({\n    jdCount: state.LANDING_DASHBOARD.data.jdCount\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    fetchDataIfNeeded: () => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n        instance.get(BASE_URL+'User/JD/GetJDCount')\n        .then(res => {\n            dispatch(saveJDCount(res.data));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(DashboardLanding);"]},"metadata":{},"sourceType":"module"}