{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import Advertise from\"./component\";import{headerPathActiveHandler as _headerPathActiveHandler,pathChangeHandler}from\"../actions\";import{saveSuggestedCandidates}from\"./actions\";import instance,{BASE_URL}from\"../../../../api/config\";import{handleLoadingSpinnerClose,handleLoadingSpinnerOpenWithOptions}from\"../../../common/ReduxBased/LoadingSpinner/actions\";import ls from'local-storage';var mapStateToProps=function mapStateToProps(state){return{candidateList:state.ADVERTISE.data.candidateList};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{headerPathActiveHandler:function headerPathActiveHandler(val){dispatch(_headerPathActiveHandler(val));dispatch(pathChangeHandler(\"/create/download\"));},fetchDataIfNeeded:function fetchDataIfNeeded(){var jobCode=ls.get('jobCode');instance.get(BASE_URL+'User/AdvertisePage/SuggestedCandidates?JobCode='+jobCode).then(function(res){dispatch(saveSuggestedCandidates(res.data.matched_Candidates));}).catch(function(error){});},sendEmailToCandidate:function sendEmailToCandidate(userData){var jobCode=ls.get('jobCode');var jobTitle=ls.get('jobTitle');var data={Job_Title:jobTitle,Job_Code:jobCode,Candidate_Email:userData.candidate_Contact_Details.candidate_Email,Candidate_Name:userData.candidate_Name,Candidate_Guid:userData.candidate_Guid};dispatch(handleLoadingSpinnerOpenWithOptions(true,\"Sending Email...\",\"large\"));instance.post(BASE_URL+'User/AdvertisePage/SendEmail',data).then(function(res){dispatch(handleLoadingSpinnerClose());}).catch(function(error){dispatch(handleLoadingSpinnerClose());});}};};var mergeProps=function mergeProps(stateProps,dispatchProps,ownProps){return _objectSpread({},stateProps,{},dispatchProps,{},ownProps);};export default connect(mapStateToProps,mapDispatchToProps,mergeProps)(Advertise);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Advertise/container.js"],"names":["connect","Advertise","headerPathActiveHandler","pathChangeHandler","saveSuggestedCandidates","instance","BASE_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","ls","mapStateToProps","state","candidateList","ADVERTISE","data","mapDispatchToProps","dispatch","props","val","fetchDataIfNeeded","jobCode","get","then","res","matched_Candidates","catch","error","sendEmailToCandidate","userData","jobTitle","Job_Title","Job_Code","Candidate_Email","candidate_Contact_Details","candidate_Email","Candidate_Name","candidate_Name","Candidate_Guid","candidate_Guid","post","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"2JAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OACIC,uBAAuB,GAAvBA,CAAAA,wBADJ,CAEIC,iBAFJ,KAGO,YAHP,CAIA,OACIC,uBADJ,KAEO,WAFP,CAIA,MAAOC,CAAAA,QAAP,EAAmBC,QAAnB,KAAmC,wBAAnC,CACA,OACIC,yBADJ,CAEIC,mCAFJ,KAGO,mDAHP,CAIA,MAAOC,CAAAA,EAAP,KAAe,eAAf,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,aAAa,CAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBF,aADN,CAAL,EAA7B,CAIA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWC,KAAX,QAAsB,CAC7Cf,uBAAuB,CAAE,iCAACgB,GAAD,CAAS,CAC9BF,QAAQ,CAACd,wBAAuB,CAACgB,GAAD,CAAxB,CAAR,CACAF,QAAQ,CAACb,iBAAiB,CAAC,kBAAD,CAAlB,CAAR,CACH,CAJ4C,CAK7CgB,iBAAiB,CAAE,4BAAM,CACrB,GAAIC,CAAAA,OAAO,CAAGX,EAAE,CAACY,GAAH,CAAO,SAAP,CAAd,CACAhB,QAAQ,CAACgB,GAAT,CAAaf,QAAQ,CAAC,iDAAT,CAA2Dc,OAAxE,EACCE,IADD,CACM,SAAAC,GAAG,CAAI,CACTP,QAAQ,CAACZ,uBAAuB,CAACmB,GAAG,CAACT,IAAJ,CAASU,kBAAV,CAAxB,CAAR,CACH,CAHD,EAICC,KAJD,CAIO,SAAAC,KAAK,CAAI,CACf,CALD,EAMH,CAb4C,CAc7CC,oBAAoB,CAAE,8BAACC,QAAD,CAAc,CAEhC,GAAIR,CAAAA,OAAO,CAAGX,EAAE,CAACY,GAAH,CAAO,SAAP,CAAd,CACA,GAAIQ,CAAAA,QAAQ,CAAGpB,EAAE,CAACY,GAAH,CAAO,UAAP,CAAf,CACA,GAAIP,CAAAA,IAAI,CAAG,CACPgB,SAAS,CAAED,QADJ,CAEPE,QAAQ,CAAEX,OAFH,CAGPY,eAAe,CAAEJ,QAAQ,CAACK,yBAAT,CAAmCC,eAH7C,CAIPC,cAAc,CAAEP,QAAQ,CAACQ,cAJlB,CAKPC,cAAc,CAAET,QAAQ,CAACU,cALlB,CAAX,CAOAtB,QAAQ,CAACR,mCAAmC,CAAC,IAAD,CAAO,kBAAP,CAA2B,OAA3B,CAApC,CAAR,CAEAH,QAAQ,CAACkC,IAAT,CAAcjC,QAAQ,CAAC,8BAAvB,CAAuDQ,IAAvD,EACCQ,IADD,CACM,SAAAC,GAAG,CAAI,CACTP,QAAQ,CAACT,yBAAyB,EAA1B,CAAR,CACH,CAHD,EAICkB,KAJD,CAIO,SAAAC,KAAK,CAAI,CACZV,QAAQ,CAACT,yBAAyB,EAA1B,CAAR,CACH,CAND,EAOH,CAlC4C,CAAtB,EAA3B,CAqCA,GAAMiC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAaC,aAAb,CAA4BC,QAA5B,0BACZF,UADY,IAEZC,aAFY,IAGZC,QAHY,GAAnB,CAMA,cAAe3C,CAAAA,OAAO,CAClBU,eADkB,CAElBK,kBAFkB,CAGlByB,UAHkB,CAAP,CAIbvC,SAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Advertise from \"./component\";\nimport {\n    headerPathActiveHandler,\n    pathChangeHandler\n} from \"../actions\";\nimport {\n    saveSuggestedCandidates\n} from \"./actions\";\n\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n    candidateList: state.ADVERTISE.data.candidateList\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    headerPathActiveHandler: (val) => {\n        dispatch(headerPathActiveHandler(val));\n        dispatch(pathChangeHandler(\"/create/download\"))\n    },\n    fetchDataIfNeeded: () => {\n        let jobCode = ls.get('jobCode');\n        instance.get(BASE_URL+'User/AdvertisePage/SuggestedCandidates?JobCode='+jobCode)\n        .then(res => {\n            dispatch(saveSuggestedCandidates(res.data.matched_Candidates));\n        })\n        .catch(error => {\n        })\n    },\n    sendEmailToCandidate: (userData) => {\n\n        let jobCode = ls.get('jobCode');\n        let jobTitle = ls.get('jobTitle');\n        let data = {\n            Job_Title: jobTitle,\n            Job_Code: jobCode,\n            Candidate_Email: userData.candidate_Contact_Details.candidate_Email,\n            Candidate_Name: userData.candidate_Name,\n            Candidate_Guid: userData.candidate_Guid\n        }\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Email...\", \"large\"));\n\n        instance.post(BASE_URL+'User/AdvertisePage/SendEmail', data)\n        .then(res => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(Advertise);"]},"metadata":{},"sourceType":"module"}