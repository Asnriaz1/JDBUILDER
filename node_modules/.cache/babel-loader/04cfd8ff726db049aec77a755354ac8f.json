{"ast":null,"code":"import { connect } from \"react-redux\";\nimport CollaborationCompleteJDs from \"./component\";\nimport instance, { BASE_URL } from \"../../../../../api/config\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { saveCollaborationCompleteTemplates } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  templatesData: state.JOBS_DASHBOARD.data.JDs.collaborationComplete\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  fetchDataIfNeeded: () => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading CollaborationComplete JDs...\", \"large\"));\n    instance.get(BASE_URL + 'User/JD/GetJDs?status=Complete').then(res => {\n      dispatch(saveCollaborationCompleteTemplates(res.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(CollaborationCompleteJDs);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/Dashboard/Jobs/CollaborationComplete/container.js"],"names":["connect","CollaborationCompleteJDs","instance","BASE_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","saveCollaborationCompleteTemplates","mapStateToProps","state","templatesData","JOBS_DASHBOARD","data","JDs","collaborationComplete","mapDispatchToProps","dispatch","props","fetchDataIfNeeded","get","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,wBAAP,MAAqC,aAArC;AACA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,2BAAnC;AACA,SACIC,yBADJ,EAEIC,mCAFJ,QAGO,sDAHP;AAIA,SACIC,kCADJ,QAEO,YAFP;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,aAAa,EAAED,KAAK,CAACE,cAAN,CAAqBC,IAArB,CAA0BC,GAA1B,CAA8BC;AADf,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,KAAX,MAAsB;AAC7CC,EAAAA,iBAAiB,EAAE,MAAM;AACrBF,IAAAA,QAAQ,CAACV,mCAAmC,CAAC,IAAD,EAAO,sCAAP,EAA+C,OAA/C,CAApC,CAAR;AACAH,IAAAA,QAAQ,CAACgB,GAAT,CAAaf,QAAQ,GAAC,gCAAtB,EACCgB,IADD,CACMC,GAAG,IAAI;AACTL,MAAAA,QAAQ,CAACT,kCAAkC,CAACc,GAAG,CAACT,IAAL,CAAnC,CAAR;AACAI,MAAAA,QAAQ,CAACX,yBAAyB,EAA1B,CAAR;AACH,KAJD,EAKCiB,KALD,CAKOC,KAAK,IAAI;AACZP,MAAAA,QAAQ,CAACX,yBAAyB,EAA1B,CAAR;AACH,KAPD;AAQH;AAX4C,CAAtB,CAA3B;;AAcA,MAAMmB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,MAA0C,EACzD,GAAGF,UADsD;AAEzD,KAAGC,aAFsD;AAGzD,KAAGC;AAHsD,CAA1C,CAAnB;;AAMA,eAAe1B,OAAO,CAClBO,eADkB,EAElBO,kBAFkB,EAGlBS,UAHkB,CAAP,CAIbtB,wBAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CollaborationCompleteJDs from \"./component\";\nimport instance, { BASE_URL } from \"../../../../../api/config\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    saveCollaborationCompleteTemplates,\n} from \"../actions\";\n\nconst mapStateToProps = state => ({\n    templatesData: state.JOBS_DASHBOARD.data.JDs.collaborationComplete\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    fetchDataIfNeeded: () => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading CollaborationComplete JDs...\", \"large\"));\n        instance.get(BASE_URL+'User/JD/GetJDs?status=Complete')\n        .then(res => {\n            dispatch(saveCollaborationCompleteTemplates(res.data))\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(CollaborationCompleteJDs);"]},"metadata":{},"sourceType":"module"}