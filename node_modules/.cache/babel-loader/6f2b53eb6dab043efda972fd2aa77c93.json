{"ast":null,"code":"import { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { LOGIN_PAGE_ERROR_HANDLER, LOGIN_SUBMIT_FORM_HANDLER } from \"../../../Login/actions\";\nimport ls from 'local-storage';\nimport { reverseString } from \"../../../common/Helpers\";\nimport instance, { BASE_URL, BASE_URL_SQL } from \"../../../../api/config\";\nexport const JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER = \"JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER\";\nexport const JD_TEMPLATE_SAVE_HANDLER = \"JD_TEMPLATE_SAVE_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER\";\nexport const textFieldChangeHandler = (name, value) => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER,\n    payload: value,\n    key: name\n  });\n};\nexport const summaryDataActiveHandler = value => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER,\n    payload: value\n  });\n};\nexport const saveUpdatedSummaryEditor = value => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER,\n    payload: value\n  });\n};\nexport const saveUpdatedSummaryAsHTML = value => dispatch => {\n  dispatch({\n    type: JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER,\n    payload: value\n  });\n};\nexport const loginandSubmitTemplateHandler = (value, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML, data) => dispatch => {\n  let resObj = {};\n  let keys_needed = [\"access_token\", \"userText\", \"userType\"];\n  console.log(data);\n  dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Signing In\", \"large\"));\n  instance.post(BASE_URL_SQL + 'Login', value).then(res => {\n    if (res.data.statusCode === 404) {\n      dispatch({\n        type: LOGIN_PAGE_ERROR_HANDLER,\n        payload: res.data.error\n      });\n    }\n\n    dispatch(handleLoadingSpinnerClose());\n    keys_needed.map(item => {\n      resObj[reverseString(item)] = res.data[item];\n      return item;\n    });\n    resObj[reverseString(\"user_id\")] = res.data.userId;\n    resObj[reverseString(\"nameTitle\")] = res.data.userText ? res.data.userText : res.data.user_name.toUpperCase();\n    localStorage.setItem(reverseString(\"app_store\"), JSON.stringify(resObj));\n    dispatch({\n      type: LOGIN_SUBMIT_FORM_HANDLER,\n      payload: res.data\n    });\n    dispatch({\n      type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n      payload: false\n    });\n    let jobCode = res.data.jobCode;\n    ls.set('jobCode', jobCode);\n    let userId = res.data.userId; // ls.set('userId', userId);\n\n    let savedTempId = ls.get('suggestedTempId');\n    savedTempId = templateId ? templateId : savedTempId;\n\n    let _selected_skills = selectedSkills ? selectedSkills.map(item => {\n      return {\n        _id: item.id,\n        level: item.level,\n        importance: item.importance,\n        title: item.title\n      };\n    }) : [];\n\n    let _selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n      return {\n        _id: item.id,\n        level: item.level,\n        importance: item.importance,\n        title: item.title\n      };\n    }) : [];\n\n    let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\";\n    let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\";\n    data._selected_skills = _selected_skills;\n    data._selected_languages = _selected_languages;\n    console.log('data is here', data);\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n    instance.post(BASE_URL + 'Templates', data).then(res => {\n      dispatch(handleLoadingSpinnerClose()); // window.location.replace('/create/advertise')\n    }).catch(error => {\n      debugger;\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }).catch(error => {\n    debugger;\n    dispatch(handleLoadingSpinnerClose());\n  });\n};\nexport const submitTemplateHandler = (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => dispatch => {//sending call to save object\n  // let jobCode = ls.get('jobCode');\n  // let userId = ls.get('userId');\n  // let savedTempId = ls.get('suggestedTempId')\n  // savedTempId = templateId ? templateId : savedTempId\n  // let selected_skills = selectedSkills ? selectedSkills.map(item => {\n  //     return {\n  //         _id: item.id,\n  //         level: item.level,\n  //         importance: item.importance,\n  //         title: item.title\n  //     }\n  // }) : []\n  // let selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n  //     return {\n  //         _id: item.id,\n  //         level: item.level,\n  //         importance: item.importance,\n  //         title: item.title\n  //     }\n  // }) : []\n  // //JD industry\n  // let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\"\n  // let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\"\n  // var experience = {\n  //     \"min_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n  //     \"max_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value\n  // }\n  // let salary_range = {\n  //     min_sal: null,\n  //     max_sal: null\n  // };\n  // if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"yearly\") {\n  //     let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField[0].value.split('-');\n  //     salary_range.min_sal = min_max[0];\n  //     salary_range.max_sal = min_max[1];\n  // }\n  // else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"hourly\") {\n  //     let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField[0].value.split('-');\n  //     salary_range.min_sal = min_max[0];\n  //     salary_range.max_sal = min_max[1];\n  // }\n  // else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"monthly\") {\n  //     let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField[0].value.split('-');\n  //     salary_range.min_sal = parseInt(min_max[0]);\n  //     salary_range.max_sal = parseInt(min_max[1]);\n  // }\n  // var rolesDataFilter = this.state.JOBOPENING.data.rolesData.filter((item) => {\n  //     return item.isActive == true\n  // }).map(item => item.id)\n  // var resDataFilter = this.state.JOBOPENING.data.resData.filter((item) => {\n  //     return item.isActive == true\n  // }).map(item => item.id);\n  // let dataObj = {\n  //     user_id: res.data.userId ? res.data.userId : userId,\n  //     job_code: jobCode,\n  //     template_id: savedTempId,\n  //     title:this.state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value, //missing\n  //     _selected_rr: {\n  //         htmlstring: this.state.JOBOPENING.data.rolesResHTMLData,\n  //         rol: rolesDataFilter,\n  //         res: resDataFilter\n  //     },\n  //     _selected_skills: [...selected_skills],\n  //     _selected_languages: [...selected_languages],\n  //     exp: experience,\n  //     _selected_summary:\n  //     {\n  //         htmlstring: rawContentSummaryAsHTML,\n  //         s_id: [\"5fbcf9c331d5edc5c9ae2a39\", \"5fbcf9c331d5edc5c9ae2a39\"]\n  //     }\n  //     ,\n  //     _selected_industry: JDIndustry,\n  //     _selected_function: JDFunction,\n  //     employment_type: this.state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n  //     positions: this.state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n  //     salary_detail: {\n  //         sal_range: salary_range,\n  //         type: this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField,\n  //         currency: \"$\",\n  //         visible: true\n  //     },\n  //     remote_work: this.state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n  //     address:this.state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n  //     qualification:this.state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n  // }\n  // dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n  // instance.post(BASE_URL + 'Templates', dataObj)\n  //     .then(res => {\n  //         dispatch(handleLoadingSpinnerClose());\n  //         // window.location.replace('/create/advertise')\n  //     })\n  //     .catch(error => {\n  //         dispatch(handleLoadingSpinnerClose());\n  //     })\n  // // instance.post(BASE_URL+'Templates', data)\n  // // .then(res => {\n  // //     if(res.status === 200) {\n  // //         dispatch({\n  // //             type: JD_TEMPLATE_SAVE_HANDLER,\n  // //             payload: true,\n  // //         });\n  // //     }\n  // // })\n  // // .catch(error => {\n  // // })\n};\nexport const fetchDataSummary = value => dispatch => {\n  let data = value.summary ? value.summary.map(item => {\n    return {\n      id: item.summary_id,\n      desc: item.title,\n      used: item.used,\n      isActive: false\n    };\n  }) : [];\n  dispatch({\n    type: JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER,\n    payload: data\n  });\n};\nexport const showLoginPopupHandler = value => dispatch => {\n  dispatch({\n    type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n    payload: value\n  });\n};","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Summary/actions.js"],"names":["handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","LOGIN_PAGE_ERROR_HANDLER","LOGIN_SUBMIT_FORM_HANDLER","ls","reverseString","instance","BASE_URL","BASE_URL_SQL","JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER","JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER","JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER","JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER","JD_TEMPLATE_SAVE_HANDLER","JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER","JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER","textFieldChangeHandler","name","value","dispatch","type","payload","key","summaryDataActiveHandler","saveUpdatedSummaryEditor","saveUpdatedSummaryAsHTML","loginandSubmitTemplateHandler","templateId","selectedSkills","selectedLanguages","JOindustryField","JOfunctionField","rolesResHTMLData","rawContentSummaryAsHTML","data","resObj","keys_needed","console","log","post","then","res","statusCode","error","map","item","userId","userText","user_name","toUpperCase","localStorage","setItem","JSON","stringify","jobCode","set","savedTempId","get","_selected_skills","_id","id","level","importance","title","_selected_languages","JDIndustry","JDFunction","catch","submitTemplateHandler","fetchDataSummary","summary","summary_id","desc","used","isActive","showLoginPopupHandler"],"mappings":"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","sourcesContent":["import {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport {\n    LOGIN_PAGE_ERROR_HANDLER,\n    LOGIN_SUBMIT_FORM_HANDLER\n} from \"../../../Login/actions\";\nimport ls from 'local-storage'\n\nimport { reverseString } from \"../../../common/Helpers\";\nimport instance, { BASE_URL, BASE_URL_SQL } from \"../../../../api/config\"\nexport const JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER = \"JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER\";\nexport const JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER = \"JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER\";\nexport const JD_TEMPLATE_SAVE_HANDLER = \"JD_TEMPLATE_SAVE_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER\";\nexport const JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER = \"JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER\";\n\nexport const textFieldChangeHandler = (name, value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_TEXT_CHANGE_HANDLER,\n        payload: value,\n        key: name\n    });\n};\n\nexport const summaryDataActiveHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_EDITOR_ACTIVE_TEXT_HANDLER,\n        payload: value,\n    });\n};\n\nexport const saveUpdatedSummaryEditor = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_EDITOR_TEXT_HANDLER,\n        payload: value,\n    });\n};\n\nexport const saveUpdatedSummaryAsHTML = (value) => dispatch => {\n    dispatch({\n        type: JD_JOB_SUMMARY_EDITOR_TEXT_AS_HTML_HANDLER,\n        payload: value,\n    });\n};\n\nexport const loginandSubmitTemplateHandler = (value, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML,data) => dispatch => {\n    let resObj = {};\n    let keys_needed = [\"access_token\", \"userText\", \"userType\"];\nconsole.log(data)\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Signing In\", \"large\"));\n    instance.post(BASE_URL_SQL + 'Login', value)\n        .then(res => {\n            if (res.data.statusCode === 404) {\n                dispatch({\n                    type: LOGIN_PAGE_ERROR_HANDLER,\n                    payload: res.data.error,\n                });\n            }\n            dispatch(handleLoadingSpinnerClose());\n            keys_needed.map(item => {\n                resObj[reverseString(item)] = res.data[item];\n                return item;\n            });\n            resObj[reverseString(\"user_id\")] = res.data.userId;\n            resObj[reverseString(\"nameTitle\")] = res.data.userText ? res.data.userText : res.data.user_name.toUpperCase();\n            localStorage.setItem(reverseString(\"app_store\"), JSON.stringify(resObj));\n            dispatch({\n                type: LOGIN_SUBMIT_FORM_HANDLER,\n                payload: res.data\n            });\n\n            dispatch({\n                type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n                payload: false,\n            });\n\n            let jobCode = res.data.jobCode;\n            ls.set('jobCode', jobCode);\n\n            let userId = res.data.userId;\n            // ls.set('userId', userId);\n\n            let savedTempId = ls.get('suggestedTempId')\n            savedTempId = templateId ? templateId : savedTempId\n\n            let _selected_skills = selectedSkills ? selectedSkills.map(item => {\n                return {\n                    _id: item.id,\n                    level: item.level,\n                    importance: item.importance,\n                    title: item.title\n                }\n            }) : []\n\n            let _selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n                return {\n                    _id: item.id,\n                    level: item.level,\n                    importance: item.importance,\n                    title: item.title\n                }\n            }) : []\n\n            let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\"\n            let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\"\n         data._selected_skills=_selected_skills;\n         data._selected_languages= _selected_languages;\nconsole.log('data is here',data)\n            dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n            instance.post(BASE_URL + 'Templates', data)\n                .then(res => {\n                    dispatch(handleLoadingSpinnerClose());\n                    // window.location.replace('/create/advertise')\n                })\n                .catch(error => {\n                    debugger\n                    dispatch(handleLoadingSpinnerClose());\n                })\n\n        })\n        .catch(error => {\n            debugger\n            dispatch(handleLoadingSpinnerClose());\n        })\n}\n\nexport const submitTemplateHandler = (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => dispatch => {\n\n    //sending call to save object\n\n    // let jobCode = ls.get('jobCode');\n\n    // let userId = ls.get('userId');\n\n    // let savedTempId = ls.get('suggestedTempId')\n    // savedTempId = templateId ? templateId : savedTempId\n\n    // let selected_skills = selectedSkills ? selectedSkills.map(item => {\n    //     return {\n    //         _id: item.id,\n    //         level: item.level,\n    //         importance: item.importance,\n    //         title: item.title\n    //     }\n    // }) : []\n\n    // let selected_languages = selectedLanguages ? selectedLanguages.map(item => {\n    //     return {\n    //         _id: item.id,\n    //         level: item.level,\n    //         importance: item.importance,\n    //         title: item.title\n    //     }\n    // }) : []\n    \n\n    // //JD industry\n    // let JDIndustry = JOindustryField ? JOindustryField[0].id : \"\"\n    // let JDFunction = JOfunctionField ? JOfunctionField[0].id : \"\"\n    // var experience = {\n    //     \"min_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n    //     \"max_exp\": this.state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value\n    // }\n\n\n    // let salary_range = {\n    //     min_sal: null,\n    //     max_sal: null\n    // };\n    // if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"yearly\") {\n\n    //     let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField[0].value.split('-');\n    //     salary_range.min_sal = min_max[0];\n    //     salary_range.max_sal = min_max[1];\n\n    // }\n    // else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"hourly\") {\n    //     let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField[0].value.split('-');\n    //     salary_range.min_sal = min_max[0];\n    //     salary_range.max_sal = min_max[1];\n    // }\n    // else if (this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value === \"monthly\") {\n\n    //     let min_max = this.state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField[0].value.split('-');\n    //     salary_range.min_sal = parseInt(min_max[0]);\n    //     salary_range.max_sal = parseInt(min_max[1]);\n\n    // }\n\n    // var rolesDataFilter = this.state.JOBOPENING.data.rolesData.filter((item) => {\n    //     return item.isActive == true\n    // }).map(item => item.id)\n\n    // var resDataFilter = this.state.JOBOPENING.data.resData.filter((item) => {\n    //     return item.isActive == true\n    // }).map(item => item.id);\n\n  \n\n    // let dataObj = {\n    //     user_id: res.data.userId ? res.data.userId : userId,\n    //     job_code: jobCode,\n    //     template_id: savedTempId,\n    //     title:this.state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value, //missing\n    //     _selected_rr: {\n    //         htmlstring: this.state.JOBOPENING.data.rolesResHTMLData,\n    //         rol: rolesDataFilter,\n    //         res: resDataFilter\n    //     },\n    //     _selected_skills: [...selected_skills],\n    //     _selected_languages: [...selected_languages],\n    //     exp: experience,\n    //     _selected_summary:\n    //     {\n    //         htmlstring: rawContentSummaryAsHTML,\n    //         s_id: [\"5fbcf9c331d5edc5c9ae2a39\", \"5fbcf9c331d5edc5c9ae2a39\"]\n    //     }\n    //     ,\n    //     _selected_industry: JDIndustry,\n    //     _selected_function: JDFunction,\n    //     employment_type: this.state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n    //     positions: this.state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n    //     salary_detail: {\n    //         sal_range: salary_range,\n    //         type: this.state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField,\n    //         currency: \"$\",\n    //         visible: true\n    //     },\n    //     remote_work: this.state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n    //     address:this.state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n    //     qualification:this.state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n    // }\n\n    // dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Saving JD\", \"large\"));\n    // instance.post(BASE_URL + 'Templates', dataObj)\n    //     .then(res => {\n    //         dispatch(handleLoadingSpinnerClose());\n    //         // window.location.replace('/create/advertise')\n    //     })\n    //     .catch(error => {\n    //         dispatch(handleLoadingSpinnerClose());\n    //     })\n\n    // // instance.post(BASE_URL+'Templates', data)\n    // // .then(res => {\n    // //     if(res.status === 200) {\n    // //         dispatch({\n    // //             type: JD_TEMPLATE_SAVE_HANDLER,\n    // //             payload: true,\n    // //         });\n    // //     }\n    // // })\n    // // .catch(error => {\n\n    // // })\n};\n\nexport const fetchDataSummary = (value) => dispatch => {\n\n    let data = value.summary ? value.summary.map(item => {\n        return {\n            id: item.summary_id,\n            desc: item.title,\n            used: item.used,\n            isActive: false\n        }\n    }) : []\n\n    dispatch({\n        type: JD_TEMPLATE_SAVE_SUMMARY_SUGGESTION_HANDLER,\n        payload: data,\n    });\n};\nexport const showLoginPopupHandler = (value) => dispatch => {\n    dispatch({\n        type: JD_TEMPLATE_SAVE_SUMMARY_SHOW_LOGIN_POPUP_HANDLER,\n        payload: value,\n    });\n};"]},"metadata":{},"sourceType":"module"}