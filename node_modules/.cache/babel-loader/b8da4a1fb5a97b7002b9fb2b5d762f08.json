{"ast":null,"code":"import React from\"react\";import jwt_decode from'jwt-decode';import moment from\"moment\";import instance,{ADMIN_URL,BASE_URL}from\"../../api/config\";var defaultURI=\"\";var Helper={isValidPassword:function isValidPassword(password){var reMin14Characters=/^[a-zA-Z0-9.*@!#%&()^~{}]{14,30}/;var reSpecialCharacter=/[*@!#%&()^~{}]+/;var reUpperCase=/[A-Z]+/;var reLowerCase=/[a-z]+/;var reNumeric=/[0-9]+/;return reMin14Characters.test(password)&&reSpecialCharacter.test(password)&&reUpperCase.test(password)&&reLowerCase.test(password)&&reNumeric.test(password);},isValidUsername:function isValidUsername(username){var reAlphaNumeric=/^[a-zA-Z0-9]+$/;return reAlphaNumeric.test(username);},isDouble:function isDouble(num){var re=/^[-+]?[0-9]*\\.?[0-9]*/;return re.test(num);},isEmail:function isEmail(email){var re=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(String(email).toLowerCase());},isNumber:function isNumber(num){var numberReg=/^\\d*$/;return numberReg.test(num)&&num.toString().length>=10&&num.toString().length<=11;},wordsWithNoSpecialChars:function wordsWithNoSpecialChars(str){var words=/^[a-zA-Z ]*$/;return words.test(str);},isInteger:function isInteger(value){var numberReg=/^[1-9]\\d*$/;return numberReg.test(value);},isDecimal:function isDecimal(value){var numberReg=/^[0-9]+(\\.[0-9]+)?$/;return numberReg.test(value);},isUrl:function isUrl(url){var expression=/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;return expression.test(url);},isSkypeId:function isSkypeId(id){var expression=/^[a-zA-Z][a-zA-Z0-9_\\.]{5,31}$/;return expression.test(id);},formateDate:function formateDate(date){if(!!date){return moment(date).format(\"DD/MM/YYYY\");}else{return\"\";}},formatDateMonthFirst:function formatDateMonthFirst(date){if(!!date){return moment(date).format(\"MMM D,YYYY\");}else{return\"\";}},isPercentage:function isPercentage(value){var minRange=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-100;var maxRange=arguments.length>2&&arguments[2]!==undefined?arguments[2]:100;if(!isNaN(parseInt(value))&&parseInt(value)>=minRange&&parseInt(value)<=maxRange){return true;}else{return\"\";}},completeDateFormat:function completeDateFormat(cell,row,rowIndex,formatExtraData){if(row.dateAndTime){return moment(row.dateAndTime).format(\"dddd, MMMM Do YYYY\t\");}else{return\"\";}},/*Limit text characters*/limitText:function limitText(text,textLimit){if(text.length>=textLimit){text=\"\".concat(text.slice(0,textLimit),\"...\");}return text;},/**\n     * Convert bytes to Human Readable.\n     * @link https://stackoverflow.com/a/14919494\n     * @param bytes\n     * @param si {bool} Binary or Decimal. true = 1000\n     * @returns {string}\n     */humanFileSize:function humanFileSize(bytes,si){var thresh=si?1000:1024;if(Math.abs(bytes)<thresh){return bytes+\" B\";}var units=si?[\"kB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"]:[\"KiB\",\"MiB\",\"GiB\",\"TiB\",\"PiB\",\"EiB\",\"ZiB\",\"YiB\"];var u=-1;do{bytes/=thresh;++u;}while(Math.abs(bytes)>=thresh&&u<units.length-1);return bytes.toFixed(1)+\" \"+units[u];},/**\n     * Alpha Numeric with dash(-)\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */getNameRegExString:function getNameRegExString(){return\"[a-zA-Z\\\\-]*\";},/**\n     * Alpha Numeric with dash(-) & Space\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */getNameWithSpaceRegExString:function getNameWithSpaceRegExString(){return\"[a-zA-Z\\\\- ]*\";},getCnicREgExString:function getCnicREgExString(){return\"/\\\\d{5}-\\\\d{7}-\\\\d{1}$/\";},/**\n     * Pakistan Phone Number.\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */getPhoneNumberRegExString:function getPhoneNumberRegExString(){return\"(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\\\s*[)]?[-\\\\s\\\\.]?[(]?[0-9]{1,3}[)]?([-\\\\s\\\\.]?[0-9]{3})([-\\\\s\\\\.]?[0-9]{3,4})\";},/**\n     * Pakistan Mobile Number\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */getMobileNumberRegExString:function getMobileNumberRegExString(){return\"(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\\\s*[)]?[-\\\\s\\\\.]?[(]?[0-9]{1,3}[)]?([-\\\\s\\\\.]?[0-9]{3})([-\\\\s\\\\.]?[0-9]{3,4})\";},dateFormatFull:function dateFormatFull(date){if(date){return moment(date).format(\"dddd, MMMM Do YYYY\t\");}else{return\"\";}},/**\n     * Convert a base64 string in a Blob according to the data and contentType.\n     *\n     * @param b64Data {String} Pure base64 string without contentType\n     * @param contentType {String} the content type of the file i.e (image/jpeg - image/png - text/plain)\n     * @param sliceSize {Int} SliceSize to process the byteCharacters\n     * @see http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\n     * @return Blob\n     */b64toBlob:function b64toBlob(fileName,b64Data,contentType,sliceSize){// Split the base64 string in data and contentType\nvar block=b64Data.split(\";\");// Get the content type of the image\nvar contentType=block[0].split(\":\")[1];// get the real base64 content of the file\nvar realData=block[1].split(\",\")[1];contentType=contentType||\"\";sliceSize=sliceSize||512;var byteCharacters=atob(realData);var byteArrays=[];for(var offset=0;offset<byteCharacters.length;offset+=sliceSize){var slice=byteCharacters.slice(offset,offset+sliceSize);var byteNumbers=new Array(slice.length);for(var i=0;i<slice.length;i++){byteNumbers[i]=slice.charCodeAt(i);}var byteArray=new Uint8Array(byteNumbers);byteArrays.push(byteArray);}var blob=new File(byteArrays,fileName,{type:contentType});return blob;},getAgeByDOB:function getAgeByDOB(date){var age=0;if(Math.abs(date.diff(moment(),\"years\"))>0){age=Math.abs(date.diff(moment(),\"years\"))+\" Year(s)\";}else if(Math.abs(date.diff(moment(),\"months\"))>0){age=Math.abs(date.diff(moment(),\"months\"))+\" Month(s)\";}else{age=Math.abs(date.diff(moment(),\"days\"))+\" Day(s)\";}return age;},getMrNumber:function getMrNumber(){return\"\\b[a-zA-Z0-9]{8}\\b\";},extractSubModulePermissions:function extractSubModulePermissions(permissionsArray,subModuleName,callback){if(!!permissionsArray&&permissionsArray.hasOwnProperty(subModuleName)){var permissionObject={};permissionsArray[subModuleName].map(function(item){permissionObject[item]=true;});callback(permissionObject);}else{callback(null);}},appendToken:function appendToken(url){var key=\"Authorization\";var value=encodeURI(localStorage.getItem(\"API_TOKEN\"));if(url.indexOf(\"?\")!==-1){var kvp=url.substr(url.indexOf(\"?\")).split(\"&\");var i=kvp.length;var x;while(i--){x=kvp[i].split(\"=\");if(x[0]==key){x[1]=value;kvp[i]=x.join(\"=\");break;}}if(i<0){kvp[kvp.length]=[key,value].join(\"=\");}url=url.substr(0,url.indexOf(\"?\"))+kvp.join(\"&\");}else{url+=\"?\".concat(key,\"=\").concat(value);}return url;},appendApi:function appendApi(url){return defaultURI+url.substr(1);}};export default Helper;export var MailHelper={getLastSegmentFromString:function getLastSegmentFromString(input){return input.split('/').pop();},getMailCategoryIDbyNameFromArray:function getMailCategoryIDbyNameFromArray(mailCategoryArray,name){var mailCategoryID=undefined;mailCategoryArray.map(function(item){if(item.name.toLowerCase()===name.toLowerCase()){mailCategoryID=item.id;}});return mailCategoryID;},getMailCorrespondenceIDbyNameFromArray:function getMailCorrespondenceIDbyNameFromArray(mailCorrespondenceArray,name){var mailCorrespondenceID=undefined;mailCorrespondenceArray.map(function(item){if(item.name.toLowerCase()===name.toLowerCase()){mailCorrespondenceID=item.id;}});return mailCorrespondenceID;},getMailTypeIDbyNameFromArray:function getMailTypeIDbyNameFromArray(mailTypeArray,name){var mailTypeID=undefined;mailTypeArray.map(function(item){if(item.name.toLowerCase()===name.toLowerCase()){mailTypeID=item.id;}});return mailTypeID;}/**\n     * Return Mail Category String may be used for making request.\n     * @param mailData Can be found in mail initial state `MANAGE_MAIL.UISettings.selectedMailPageData`\n     * @param mailPage Current Mail page\n     * @param mailCorrespondence Current Correspondence that will be changed\n     * @param selectedMailCategory Current selected Mail Category\n     * @returns {string|*}\n     */};export var arrowGenerator=function arrowGenerator(color){return{'&[x-placement*=\"bottom\"] $arrow':{top:0,left:0,marginTop:\"-0.95em\",width:\"3em\",height:\"1em\",\"&::before\":{borderWidth:\"0 1em 1em 1em\",borderColor:\"transparent transparent \".concat(color,\" transparent\")}},'&[x-placement*=\"top\"] $arrow':{bottom:0,left:0,marginBottom:\"-0.95em\",width:\"3em\",height:\"1em\",\"&::before\":{borderWidth:\"1em 1em 0 1em\",borderColor:\"\".concat(color,\" transparent transparent transparent\")}},'&[x-placement*=\"right\"] $arrow':{left:0,marginLeft:\"-0.95em\",height:\"3em\",width:\"1em\",\"&::before\":{borderWidth:\"1em 1em 1em 0\",borderColor:\"transparent \".concat(color,\" transparent transparent\")}},'&[x-placement*=\"left\"] $arrow':{right:0,marginRight:\"-0.95em\",height:\"3em\",width:\"1em\",\"&::before\":{borderWidth:\"1em 0 1em 1em\",borderColor:\"transparent transparent transparent \".concat(color)}}};};export function base64ToBlob(base64Data,contentType){contentType=contentType||'application/vnd.openxmlformats-officedocument.wordprocessingml.document';var sliceSize=1024;var byteCharacters=atob(base64Data);var bytesLength=byteCharacters.length;var slicesCount=Math.ceil(bytesLength/sliceSize);var byteArrays=new Array(slicesCount);for(var sliceIndex=0;sliceIndex<slicesCount;++sliceIndex){var begin=sliceIndex*sliceSize;var end=Math.min(begin+sliceSize,bytesLength);var bytes=new Array(end-begin);for(var offset=begin,i=0;offset<end;++i,++offset){bytes[i]=byteCharacters[offset].charCodeAt(0);}byteArrays[sliceIndex]=new Uint8Array(bytes);}return new Blob(byteArrays,{type:contentType});}function getMyTime(h,m){if(h.toString().length<2){h='0'+h;}if(m.toString().length<2){m='0'+m;}return\"\".concat(h).concat(m);}export function getDTGDate(){var newDate=new Date();var mS=['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC'];return\"\".concat(newDate.getDate()).concat(getMyTime(newDate.getHours(),newDate.getMinutes()),\" \").concat(mS[newDate.getMonth()]);}export function getHrsDateTimeFormat(d){var newDate=new Date(d);if(isNaN(newDate.getTime())){console.log(\"Invalid Date\",d);return\"\";}var mS=['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC'];return\"\".concat(newDate.getDate(),\" \").concat(mS[newDate.getMonth()],\" \").concat(newDate.getYear()-100,\", \").concat(getMyTime(newDate.getHours(),newDate.getMinutes()),\" hrs \");}/*To reverse string - For example: \"hello\" -> \"olleh\" */export var reverseString=function reverseString(string){// return string.split(\"\").reverse().join(\"\");\nreturn string;};/*To retrieve value from store */export var getAppStoreValue=function getAppStoreValue(key){if(isAppStore()){return JSON.parse(localStorage.getItem(reverseString(\"app_store\")))[key];}else{return\"\";}};/**\n * \n * Extraction of Data for Profile\n * \n */export var getNames=function getNames(res){var groups={};var organisations={};groups=res.groups.map(function(item){return item.groupName;});organisations=res.appointments.map(function(item){return console.log(\"Organisation\",item);});};/*To check if app-store exists */export var isAppStore=function isAppStore(){return localStorage.getItem(reverseString(\"app_store\"))!==null;};/**\n * decode the Jwt Token and return the json format\n */export var getDecodedToken=function getDecodedToken(JWTtoken){return jwt_decode(JWTtoken);};export function shadeColor(color,percent){var R=parseInt(color.substring(1,3),16);var G=parseInt(color.substring(3,5),16);var B=parseInt(color.substring(5,7),16);R=parseInt(R*(100+percent)/100);G=parseInt(G*(100+percent)/100);B=parseInt(B*(100+percent)/100);R=R<255?R:255;G=G<255?G:255;B=B<255?B:255;var RR=R.toString(16).length==1?\"0\"+R.toString(16):R.toString(16);var GG=G.toString(16).length==1?\"0\"+G.toString(16):G.toString(16);var BB=B.toString(16).length==1?\"0\"+B.toString(16):B.toString(16);return\"#\"+RR+GG+BB;}//To generate random ID 'n' digits long\nexport var generateRandomID=function generateRandomID(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;return Array.from({length:n}).map(function(x){return'x';}).join('').replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==='x'?r:r&0x3|0x8;return v.toString(16);});};export function getOffsetTop(elem){var offsetTop=0;do{if(!isNaN(elem.offsetTop)){offsetTop+=elem.offsetTop;}}while(elem=elem.offsetParent);return offsetTop;}export var getValidUrl=function getValidUrl(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var newUrl=window.decodeURIComponent(url);newUrl=newUrl.trim().replace(/\\s/g,'');if(/^(:\\/\\/)/.test(newUrl)){return\"http\".concat(newUrl);}if(!/^(f|ht)tps?:\\/\\//i.test(newUrl)){return\"http://\".concat(newUrl);}return newUrl;};export var getReferOriginIDByNameAndArray=function getReferOriginIDByNameAndArray(referOriginArray,name){var referOriginID=undefined;referOriginArray.map(function(item){if(item.name.toLowerCase()===name.toLowerCase()){referOriginID=item.id;}});return referOriginID;};/**\n * Get Value by Name given in @param by Key Value pair also given in @param. Tree Should be provided for Tree Processing\n * @param treeData\n * @param key\n * @param value\n * @param name\n * @returns {function(*): string}\n */export var getBase64DataFromUrl=function getBase64DataFromUrl(path,callback){var url=\"\".concat(ADMIN_URL,\"v1/admin/login/screen/content/view?image=\").concat(path);var xmlHTTP=new XMLHttpRequest();xmlHTTP.open('GET',url,true);xmlHTTP.responseType='arraybuffer';xmlHTTP.onload=function(e){var arr=new Uint8Array(this.response);var raw=String.fromCharCode.apply(null,arr);var b64=btoa(raw);// var dataURL = \"data:image/png;base64,\" + b64;\ncallback(b64);};xmlHTTP.send();};","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/common/Helpers.js"],"names":["React","jwt_decode","moment","instance","ADMIN_URL","BASE_URL","defaultURI","Helper","isValidPassword","password","reMin14Characters","reSpecialCharacter","reUpperCase","reLowerCase","reNumeric","test","isValidUsername","username","reAlphaNumeric","isDouble","num","re","isEmail","email","String","toLowerCase","isNumber","numberReg","toString","length","wordsWithNoSpecialChars","str","words","isInteger","value","isDecimal","isUrl","url","expression","isSkypeId","id","formateDate","date","format","formatDateMonthFirst","isPercentage","minRange","maxRange","isNaN","parseInt","completeDateFormat","cell","row","rowIndex","formatExtraData","dateAndTime","limitText","text","textLimit","slice","humanFileSize","bytes","si","thresh","Math","abs","units","u","toFixed","getNameRegExString","getNameWithSpaceRegExString","getCnicREgExString","getPhoneNumberRegExString","getMobileNumberRegExString","dateFormatFull","b64toBlob","fileName","b64Data","contentType","sliceSize","block","split","realData","byteCharacters","atob","byteArrays","offset","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","File","type","getAgeByDOB","age","diff","getMrNumber","extractSubModulePermissions","permissionsArray","subModuleName","callback","hasOwnProperty","permissionObject","map","item","appendToken","key","encodeURI","localStorage","getItem","indexOf","kvp","substr","x","join","appendApi","MailHelper","getLastSegmentFromString","input","pop","getMailCategoryIDbyNameFromArray","mailCategoryArray","name","mailCategoryID","undefined","getMailCorrespondenceIDbyNameFromArray","mailCorrespondenceArray","mailCorrespondenceID","getMailTypeIDbyNameFromArray","mailTypeArray","mailTypeID","arrowGenerator","color","top","left","marginTop","width","height","borderWidth","borderColor","bottom","marginBottom","marginLeft","right","marginRight","base64ToBlob","base64Data","bytesLength","slicesCount","ceil","sliceIndex","begin","end","min","Blob","getMyTime","h","m","getDTGDate","newDate","Date","mS","getDate","getHours","getMinutes","getMonth","getHrsDateTimeFormat","d","getTime","console","log","getYear","reverseString","string","getAppStoreValue","isAppStore","JSON","parse","getNames","res","groups","organisations","groupName","appointments","getDecodedToken","JWTtoken","shadeColor","percent","R","substring","G","B","RR","GG","BB","generateRandomID","n","from","replace","c","r","random","v","getOffsetTop","elem","offsetTop","offsetParent","getValidUrl","newUrl","window","decodeURIComponent","trim","getReferOriginIDByNameAndArray","referOriginArray","referOriginID","getBase64DataFromUrl","path","xmlHTTP","XMLHttpRequest","open","responseType","onload","e","arr","response","raw","fromCharCode","apply","b64","btoa","send"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport jwt_decode from 'jwt-decode';\nimport moment from \"moment\";\nimport instance, {ADMIN_URL, BASE_URL} from \"../../api/config\";\nlet defaultURI = \"\";\n\nconst Helper = {\n    isValidPassword(password) {\n        let reMin14Characters = /^[a-zA-Z0-9.*@!#%&()^~{}]{14,30}/;\n        let reSpecialCharacter = /[*@!#%&()^~{}]+/;\n        let reUpperCase = /[A-Z]+/;\n        let reLowerCase = /[a-z]+/;\n        let reNumeric = /[0-9]+/;\n\n        return (\n            reMin14Characters.test(password) &&\n            reSpecialCharacter.test(password) &&\n            reUpperCase.test(password) &&\n            reLowerCase.test(password) &&\n            reNumeric.test(password)\n        );\n    },\n    isValidUsername(username) {\n        let reAlphaNumeric = /^[a-zA-Z0-9]+$/;\n        return reAlphaNumeric.test(username);\n    },\n    isDouble(num) {\n        let re = /^[-+]?[0-9]*\\.?[0-9]*/;\n        return re.test(num);\n    },\n    isEmail(email) {\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    },\n    isNumber(num) {\n        let numberReg = /^\\d*$/;\n        return numberReg.test(num) && num.toString().length >= 10 && num.toString().length <= 11;\n    },\n    wordsWithNoSpecialChars(str) {\n        let words = /^[a-zA-Z ]*$/;\n        return words.test(str);\n    },\n    isInteger(value) {\n        let numberReg = /^[1-9]\\d*$/;\n        return numberReg.test(value);\n    },\n    isDecimal(value) {\n        let numberReg = /^[0-9]+(\\.[0-9]+)?$/;\n        return numberReg.test(value);\n    },\n    isUrl(url) {\n        let expression = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n        return expression.test(url);\n    },\n    isSkypeId(id) {\n        let expression = /^[a-zA-Z][a-zA-Z0-9_\\.]{5,31}$/;\n        return expression.test(id);\n    },\n    formateDate(date) {\n        if (!!date) {\n            return moment(date).format(\"DD/MM/YYYY\");\n        } else {\n            return \"\";\n        }\n    },\n    formatDateMonthFirst(date) {\n        if (!!date) {\n            return moment(date).format(\"MMM D,YYYY\");\n        } else {\n            return \"\";\n        }\n    },\n    isPercentage(value, minRange = -100, maxRange = 100) {\n        if (!isNaN(parseInt(value)) && parseInt(value) >= minRange && parseInt(value) <= maxRange) {\n            return true;\n        } else {\n            return \"\";\n        }\n    },\n    completeDateFormat(cell, row, rowIndex, formatExtraData) {\n        if (row.dateAndTime) {\n            return moment(row.dateAndTime).format(\"dddd, MMMM Do YYYY\t\");\n        } else {\n            return \"\";\n        }\n    },\n    /*Limit text characters*/\n    limitText: (text, textLimit) => {\n        if (text.length >= textLimit) {\n            text = `${text.slice(0, textLimit)}...`;\n        }\n        return text;\n    },\n    /**\n     * Convert bytes to Human Readable.\n     * @link https://stackoverflow.com/a/14919494\n     * @param bytes\n     * @param si {bool} Binary or Decimal. true = 1000\n     * @returns {string}\n     */\n    humanFileSize: (bytes, si) => {\n        var thresh = si ? 1000 : 1024;\n        if (Math.abs(bytes) < thresh) {\n            return bytes + \" B\";\n        }\n        var units = si\n            ? [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n            : [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"];\n        var u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n        return bytes.toFixed(1) + \" \" + units[u];\n    },\n\n    /**\n     * Alpha Numeric with dash(-)\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */\n    getNameRegExString: () => {\n        return \"[a-zA-Z\\\\-]*\";\n    },\n    /**\n     * Alpha Numeric with dash(-) & Space\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */\n    getNameWithSpaceRegExString: () => {\n        return \"[a-zA-Z\\\\- ]*\";\n    },\n    getCnicREgExString() {\n        return \"/\\\\d{5}-\\\\d{7}-\\\\d{1}$/\";\n    },\n    /**\n     * Pakistan Phone Number.\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */\n    getPhoneNumberRegExString: () => {\n        return \"(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\\\s*[)]?[-\\\\s\\\\.]?[(]?[0-9]{1,3}[)]?([-\\\\s\\\\.]?[0-9]{3})([-\\\\s\\\\.]?[0-9]{3,4})\";\n    },\n    /**\n     * Pakistan Mobile Number\n     * Enclose this in /^$/ starting and ending string.\n     * @returns {string}\n     */\n    getMobileNumberRegExString: () => {\n        return \"(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\\\s*[)]?[-\\\\s\\\\.]?[(]?[0-9]{1,3}[)]?([-\\\\s\\\\.]?[0-9]{3})([-\\\\s\\\\.]?[0-9]{3,4})\";\n    },\n    dateFormatFull(date) {\n        if (date) {\n            return moment(date).format(\"dddd, MMMM Do YYYY\t\");\n        } else {\n            return \"\";\n        }\n    },\n    /**\n     * Convert a base64 string in a Blob according to the data and contentType.\n     *\n     * @param b64Data {String} Pure base64 string without contentType\n     * @param contentType {String} the content type of the file i.e (image/jpeg - image/png - text/plain)\n     * @param sliceSize {Int} SliceSize to process the byteCharacters\n     * @see http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\n     * @return Blob\n     */\n    b64toBlob: (fileName, b64Data, contentType, sliceSize) => {\n        // Split the base64 string in data and contentType\n        var block = b64Data.split(\";\");\n        // Get the content type of the image\n        var contentType = block[0].split(\":\")[1];\n        // get the real base64 content of the file\n        var realData = block[1].split(\",\")[1];\n\n        contentType = contentType || \"\";\n        sliceSize = sliceSize || 512;\n\n        var byteCharacters = atob(realData);\n        var byteArrays = [];\n\n        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n            var byteNumbers = new Array(slice.length);\n            for (var i = 0; i < slice.length; i++) {\n                byteNumbers[i] = slice.charCodeAt(i);\n            }\n\n            var byteArray = new Uint8Array(byteNumbers);\n\n            byteArrays.push(byteArray);\n        }\n\n        var blob = new File(byteArrays, fileName, {type: contentType});\n        return blob;\n    },\n    getAgeByDOB: date => {\n        let age = 0;\n        if (Math.abs(date.diff(moment(), \"years\")) > 0) {\n            age = Math.abs(date.diff(moment(), \"years\")) + \" Year(s)\";\n        } else if (Math.abs(date.diff(moment(), \"months\")) > 0) {\n            age = Math.abs(date.diff(moment(), \"months\")) + \" Month(s)\";\n        } else {\n            age = Math.abs(date.diff(moment(), \"days\")) + \" Day(s)\";\n        }\n        return age;\n    },\n    getMrNumber: () => {\n        return \"\\b[a-zA-Z0-9]{8}\\b\";\n    },\n    extractSubModulePermissions: (permissionsArray, subModuleName, callback) => {\n        if (!!permissionsArray && permissionsArray.hasOwnProperty(subModuleName)) {\n            let permissionObject = {};\n            permissionsArray[subModuleName].map(item => {\n                permissionObject[item] = true;\n            });\n            callback(permissionObject);\n        } else {\n            callback(null);\n        }\n    },\n    appendToken: url => {\n        let key = \"Authorization\";\n        let value = encodeURI(localStorage.getItem(\"API_TOKEN\"));\n        if (url.indexOf(\"?\") !== -1) {\n            var kvp = url.substr(url.indexOf(\"?\")).split(\"&\");\n            let i = kvp.length;\n            let x;\n            while (i--) {\n                x = kvp[i].split(\"=\");\n\n                if (x[0] == key) {\n                    x[1] = value;\n                    kvp[i] = x.join(\"=\");\n                    break;\n                }\n            }\n\n            if (i < 0) {\n                kvp[kvp.length] = [key, value].join(\"=\");\n            }\n            url = url.substr(0, url.indexOf(\"?\")) + kvp.join(\"&\");\n        } else {\n            url += `?${key}=${value}`;\n        }\n        return url;\n    },\n    appendApi: url => {\n        return defaultURI + url.substr(1);\n    }\n};\nexport default Helper;\n\nexport const MailHelper = {\n    getLastSegmentFromString: (input) => {\n        return input.split('/').pop();\n    },\n    getMailCategoryIDbyNameFromArray: (mailCategoryArray,name) => {\n        let mailCategoryID = undefined;\n        mailCategoryArray.map(item => {\n            if(item.name.toLowerCase() === name.toLowerCase()) {\n                mailCategoryID = item.id;\n            }\n        });\n        return mailCategoryID;\n    },\n    getMailCorrespondenceIDbyNameFromArray: (mailCorrespondenceArray,name) => {\n        let mailCorrespondenceID = undefined;\n        mailCorrespondenceArray.map(item => {\n            if(item.name.toLowerCase() === name.toLowerCase()) {\n                mailCorrespondenceID = item.id;\n            }\n        });\n        return mailCorrespondenceID;\n    },\n    getMailTypeIDbyNameFromArray: (mailTypeArray,name) => {\n        let mailTypeID = undefined;\n        mailTypeArray.map(item => {\n            if(item.name.toLowerCase() === name.toLowerCase()) {\n                mailTypeID = item.id;\n            }\n        });\n        return mailTypeID;\n    },\n    /**\n     * Return Mail Category String may be used for making request.\n     * @param mailData Can be found in mail initial state `MANAGE_MAIL.UISettings.selectedMailPageData`\n     * @param mailPage Current Mail page\n     * @param mailCorrespondence Current Correspondence that will be changed\n     * @param selectedMailCategory Current selected Mail Category\n     * @returns {string|*}\n     */\n};\n\n\nexport const arrowGenerator = color => {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: \"-0.95em\",\n            width: \"3em\",\n            height: \"1em\",\n            \"&::before\": {\n                borderWidth: \"0 1em 1em 1em\",\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: \"-0.95em\",\n            width: \"3em\",\n            height: \"1em\",\n            \"&::before\": {\n                borderWidth: \"1em 1em 0 1em\",\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: \"-0.95em\",\n            height: \"3em\",\n            width: \"1em\",\n            \"&::before\": {\n                borderWidth: \"1em 1em 1em 0\",\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: \"-0.95em\",\n            height: \"3em\",\n            width: \"1em\",\n            \"&::before\": {\n                borderWidth: \"1em 0 1em 1em\",\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n};\n\nexport function base64ToBlob(base64Data, contentType) {\n    contentType = contentType || 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n    const sliceSize = 1024;\n    const byteCharacters = atob(base64Data);\n    var bytesLength = byteCharacters.length;\n    const slicesCount = Math.ceil(bytesLength / sliceSize);\n    const byteArrays = new Array(slicesCount);\n\n    for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n        const begin = sliceIndex * sliceSize;\n        const end = Math.min(begin + sliceSize, bytesLength);\n\n        let bytes = new Array(end - begin);\n        for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n            bytes[i] = byteCharacters[offset].charCodeAt(0);\n        }\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\n    }\n    return new Blob(byteArrays, {type: contentType});\n}\n\nfunction getMyTime(h, m) {\n    if (h.toString().length < 2) {\n        h = '0' + h;\n    }\n    if (m.toString().length < 2) {\n        m = '0' + m;\n    }\n    return `${h}${m}`\n}\n\nexport function getDTGDate() {\n    let newDate = new Date();\n    var mS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    return `${newDate.getDate()}${getMyTime(newDate.getHours(), newDate.getMinutes())} ${mS[newDate.getMonth()]}`\n}\n\nexport function getHrsDateTimeFormat(d) {\n    let newDate = new Date(d);\n    if (isNaN(newDate.getTime())) {\n        console.log(\"Invalid Date\", d);\n        return \"\";\n    }\n    var mS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    return `${newDate.getDate()} ${mS[newDate.getMonth()]} ${newDate.getYear() - 100}, ${getMyTime(newDate.getHours(), newDate.getMinutes())} hrs `\n}\n\n/*To reverse string - For example: \"hello\" -> \"olleh\" */\nexport const reverseString = (string) => {\n    // return string.split(\"\").reverse().join(\"\");\n    return string;\n};\n/*To retrieve value from store */\nexport const getAppStoreValue = (key) => {\n    if (isAppStore()){\n        return JSON.parse(localStorage.getItem(reverseString(\"app_store\")))[key];\n    }else {\n        return \"\";\n    }\n};\n\n/**\n * \n * Extraction of Data for Profile\n * \n */\nexport const getNames=(res)=>{\n    let groups={};\n    let organisations={};\n    groups=res.groups.map(item=>(item.groupName))\n    organisations = res.appointments.map(item=>(\n        console.log(\"Organisation\",item)\n    ))\n}\n\n/*To check if app-store exists */\nexport const isAppStore = () => {\n    return localStorage.getItem(reverseString(\"app_store\")) !== null;\n};\n\n\n/**\n * decode the Jwt Token and return the json format\n */\nexport const getDecodedToken = (JWTtoken) => {\n    return jwt_decode(JWTtoken)\n}\n\nexport function shadeColor(color, percent) {\n\n    var R = parseInt(color.substring(1, 3), 16);\n    var G = parseInt(color.substring(3, 5), 16);\n    var B = parseInt(color.substring(5, 7), 16);\n\n    R = parseInt(R * (100 + percent) / 100);\n    G = parseInt(G * (100 + percent) / 100);\n    B = parseInt(B * (100 + percent) / 100);\n\n    R = (R < 255) ? R : 255;\n    G = (G < 255) ? G : 255;\n    B = (B < 255) ? B : 255;\n\n    var RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\n    var GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\n    var BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\n\n    return \"#\" + RR + GG + BB;\n}\n//To generate random ID 'n' digits long\nexport const generateRandomID = (n = 5) => {\n    return Array.from({length: n}).map(x => 'x').join('').replace(/[xy]/g, (c) => {\n        let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n};\n\nexport function getOffsetTop(elem) {\n    var offsetTop = 0;\n    do {\n        if (!isNaN(elem.offsetTop)) {\n            offsetTop += elem.offsetTop;\n        }\n    } while (elem = elem.offsetParent);\n    return offsetTop;\n}\n\nexport const getValidUrl = (url = '') => {\n    let newUrl = window.decodeURIComponent(url);\n    newUrl = newUrl\n        .trim()\n        .replace(/\\s/g, '');\n    if (/^(:\\/\\/)/.test(newUrl)) {\n        return `http${newUrl}`;\n    }\n    if (!/^(f|ht)tps?:\\/\\//i.test(newUrl)) {\n        return `http://${newUrl}`;\n    }\n    return newUrl;\n};\n\nexport const getReferOriginIDByNameAndArray = (referOriginArray,name) => {\n    let referOriginID = undefined;\n    referOriginArray.map(item => {\n        if(item.name.toLowerCase() === name.toLowerCase()) {\n            referOriginID = item.id;\n        }\n    });\n    return referOriginID;\n}\n\n/**\n * Get Value by Name given in @param by Key Value pair also given in @param. Tree Should be provided for Tree Processing\n * @param treeData\n * @param key\n * @param value\n * @param name\n * @returns {function(*): string}\n */\n\nexport const getBase64DataFromUrl = (path,callback) => {\n    let url = `${ADMIN_URL}v1/admin/login/screen/content/view?image=${path}`;\n\n    var xmlHTTP = new XMLHttpRequest();\n        xmlHTTP.open('GET', url, true);\n        xmlHTTP.responseType = 'arraybuffer';\n        xmlHTTP.onload = function (e) {\n            var arr = new Uint8Array(this.response);\n            var raw = String.fromCharCode.apply(null, arr);\n            var b64 = btoa(raw);\n            // var dataURL = \"data:image/png;base64,\" + b64;\n            callback(b64);\n        };\n        xmlHTTP.send();\n}"]},"metadata":{},"sourceType":"module"}