{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\JD\\\\JDBuilding\\\\CollaboratorAndPreview\\\\AddCollaboration\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\nimport axios from \"axios\";\nimport { getAppStoreValue } from \"../../../../common/Helpers\";\nimport ls from 'local-storage';\nimport instance, { BASE_URL_COL } from \"../../../../../api/config\";\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nconst accessToken = getAppStoreValue(\"access_token\");\n\nclass AddCollaboration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendCollaboration = () => {\n      // dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Invite...\", \"large\"));\n      let data = {\n        Collab_email: this.props.EmailField,\n        Collab_Name: this.props.NameField,\n        Job_Title: this.props.jobTitle,\n        Job_Code: this.props.jobCode\n      };\n      console.log(data);\n      instance.post(BASE_URL_COL + 'User/SendCollabInvite', data).then(res => {\n        this.setState({\n          message: \"Invited Successfully\",\n          open: true,\n          severity: \"success\"\n        });\n      }).catch(error => {\n        this.setState({\n          message: \"Error sending Invitation\",\n          open: true,\n          severity: \"warning\"\n        });\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n      debugger;\n    };\n\n    this.state = {\n      collaborators: [],\n      open: false,\n      severity: \"\",\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let jobCode = ls.get('jobCode');\n    var job_code = JSON.parse(localStorage.getItem('jobCode'));\n    console.log(jobCode);\n    const url = `${BASE_URL_COL}User/GetAllCollaboratorsForBuilder?JobCode=` + job_code;\n    axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.data).then(data => {\n      this.setState({\n        collaborators: data\n      });\n      console.log(this.state.collaborators);\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      textFieldChangeHandler,\n      fields,\n      // open,\n      addCollaboratorHandler,\n      addedCollaborator,\n      sendCollaboration,\n      jobCode\n    } = this.props;\n    const open = false;\n    return React.createElement(\"div\", {\n      className: classes.addcollaboraterwrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: this.sendCollaboration,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, fields.EmailField.label), React.createElement(CustomTextValidator, {\n      id: fields.EmailField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.EmailField.placeholder,\n      name: fields.EmailField.name,\n      value: fields.EmailField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.EmailField.name, value);\n      },\n      validators: [\"required\", \"matchRegexp:^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$\"],\n      errorMessages: [\"Required\", \"Please enter a valid email\"],\n      className: classes.collaboratorfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, fields.NameField.label), React.createElement(CustomTextValidator, {\n      id: fields.NameField.name,\n      validations: true,\n      fullWidth: true,\n      type: \"text\",\n      placeholder: fields.NameField.placeholder,\n      name: fields.NameField.name,\n      value: fields.NameField.value,\n      onChange: value => {\n        textFieldChangeHandler(fields.NameField.name, value);\n      },\n      validators: [\"required\"],\n      errorMessages: [\"Required\"],\n      className: classes.collaboratorfields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      className: classes.addcollaborationbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Add\")), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Invited Collaborators\"), addedCollaborator ? React.createElement(\"div\", {\n      className: classes.collaboratorinfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, addedCollaborator.Collab_Name), React.createElement(\"span\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, addedCollaborator.Collab_email)) : \"\")))), React.createElement(Snackbar, {\n      open: this.state.open,\n      autoHideDuration: 300,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      onClose: this.handleClose,\n      severity: this.state.severity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.state.message)));\n  }\n\n}\n\nexport default withStyles(styles)(AddCollaboration);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/CollaboratorAndPreview/AddCollaboration/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","axios","getAppStoreValue","ls","instance","BASE_URL_COL","Alert","Snackbar","CloseIcon","IconButton","accessToken","AddCollaboration","constructor","props","sendCollaboration","data","Collab_email","EmailField","Collab_Name","NameField","Job_Title","jobTitle","Job_Code","jobCode","console","log","post","then","res","setState","message","open","severity","catch","error","handleClose","state","collaborators","componentDidMount","get","job_code","JSON","parse","localStorage","getItem","url","headers","Authorization","response","render","classes","textFieldChangeHandler","fields","addCollaboratorHandler","addedCollaborator","addcollaboraterwrapper","label","name","placeholder","value","collaboratorfields","addcollaborationbtn","collaboratorinfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport CustomTextValidator from \"../../../../common/ReduxBased/CustomTextValidator/component\";\r\nimport axios from \"axios\";\r\nimport { getAppStoreValue } from \"../../../../common/Helpers\";\r\nimport ls from 'local-storage';\r\nimport instance, { BASE_URL_COL } from \"../../../../../api/config\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nconst accessToken = getAppStoreValue(\"access_token\")\r\n\r\nclass AddCollaboration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collaborators: [],\r\n            open: false,\r\n            severity: \"\",\r\n            message: \"\",\r\n\r\n\r\n        };\r\n\r\n    }\r\n    componentDidMount() {\r\n        let jobCode = ls.get('jobCode');\r\n        var job_code = JSON.parse(localStorage.getItem('jobCode'));\r\n        console.log(jobCode);\r\n        const url = `${BASE_URL_COL}User/GetAllCollaboratorsForBuilder?JobCode=` + job_code;\r\n        axios.get(url,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n\r\n                }\r\n            }).then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({ collaborators: data })\r\n                console.log(this.state.collaborators)\r\n            })\r\n    }\r\n    sendCollaboration = () => {\r\n        // dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Sending Invite...\", \"large\"));\r\n        let data = {\r\n            Collab_email: this.props.EmailField,\r\n            Collab_Name: this.props.NameField,\r\n            Job_Title: this.props.jobTitle,\r\n            Job_Code: this.props.jobCode,\r\n        }\r\n        console.log(data)\r\n\r\n        instance.post(BASE_URL_COL + 'User/SendCollabInvite', data)\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    message: \"Invited Successfully\",\r\n                    open: true,\r\n                    severity: \"success\",\r\n                }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    message: \"Error sending Invitation\",\r\n                    open: true,\r\n                    severity: \"warning\",\r\n                }\r\n                )\r\n            })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n\r\n        debugger\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            textFieldChangeHandler,\r\n            fields,\r\n            // open,\r\n            addCollaboratorHandler,\r\n            addedCollaborator,\r\n            sendCollaboration,\r\n            jobCode\r\n        } = this.props;\r\n\r\n        const open = false;\r\n\r\n        return (\r\n            <div className={classes.addcollaboraterwrapper}>\r\n                <ValidatorForm\r\n                    onSubmit={this.sendCollaboration}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={8}>\r\n                            <span>{fields.EmailField.label}</span>\r\n                            <CustomTextValidator\r\n                                id={fields.EmailField.name}\r\n                                validations={true}\r\n                                fullWidth={true}\r\n                                type=\"text\"\r\n                                placeholder={fields.EmailField.placeholder}\r\n                                name={fields.EmailField.name}\r\n                                value={fields.EmailField.value}\r\n                                onChange={value => {\r\n                                    textFieldChangeHandler(\r\n                                        fields.EmailField.name,\r\n                                        value\r\n                                    );\r\n                                }}\r\n                                validators={[\r\n                                    \"required\",\r\n                                    \"matchRegexp:^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$\"\r\n                                ]}\r\n                                errorMessages={[\r\n                                    \"Required\",\r\n                                    \"Please enter a valid email\"\r\n                                ]}\r\n                                className={classes.collaboratorfields}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4}>\r\n                            <span>{fields.NameField.label}</span>\r\n                            <CustomTextValidator\r\n                                id={fields.NameField.name}\r\n                                validations={true}\r\n                                fullWidth={true}\r\n                                type=\"text\"\r\n                                placeholder={fields.NameField.placeholder}\r\n                                name={fields.NameField.name}\r\n                                value={fields.NameField.value}\r\n                                onChange={value => {\r\n                                    textFieldChangeHandler(\r\n                                        fields.NameField.name,\r\n                                        value\r\n                                    );\r\n                                }}\r\n                                validators={[\"required\"]}\r\n                                errorMessages={[\"Required\"]}\r\n                                className={classes.collaboratorfields}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                            <Button color=\"primary\" variant=\"contained\" type=\"submit\" className={classes.addcollaborationbtn}>Add</Button>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container>\r\n                            <Grid item lg={12}>\r\n                                <h3>Invited Collaborators</h3>\r\n                                {\r\n                                    addedCollaborator ?\r\n                                        <div className={classes.collaboratorinfo}>\r\n                                            <span className=\"name\" >{addedCollaborator.Collab_Name}</span>\r\n                                            <span className=\"email\" >{addedCollaborator.Collab_email}</span>\r\n                                        </div> : \"\"\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n\r\n                    </Grid>\r\n                </ValidatorForm>\r\n\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    autoHideDuration={300}\r\n                  \r\n                    onClose={this.handleClose}\r\n                    >\r\n                    <Alert \r\n                    onClose={this.handleClose} \r\n                    severity={this.state.severity}>\r\n                     {this.state.message}\r\n                    </Alert>\r\n\r\n                </Snackbar>\r\n\r\n\r\n                {/* <Alert\r\n                onClick={this.handleClose} \r\n                 severity={this.state.severity}\r\n                //  open={this.state.open}\r\n                 >\r\n               \r\n\r\n        </Alert> */}\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddCollaboration);"]},"metadata":{},"sourceType":"module"}