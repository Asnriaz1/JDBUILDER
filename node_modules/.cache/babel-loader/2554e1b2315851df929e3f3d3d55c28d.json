{"ast":null,"code":"import { connect } from \"react-redux\";\nimport AdditionalInfoMetaFields from \"./component\";\nimport { textFieldChangeHandler, selectFieldChangeHandler, submitSkillFormHandler, saveUpdatedSkillTitle, submitLanguageFormHandler, recommendedSkillActiveHandler, removeSkillHandler, removeLanguageHandler } from \"../actions\";\nimport instance, { SKILLS_URL } from \"../../../../../api/config\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../../common/ReduxBased/LoadingSpinner/actions\";\n\nconst mapStateToProps = state => ({\n  fields: state.ADDITIONALINFO.forms.additionalinfoForm.fields,\n  skillsData: state.ADDITIONALINFO.data.skillsData,\n  languagesData: state.ADDITIONALINFO.data.languagesData,\n  recommendedSkills: state.ADDITIONALINFO.data.recommendedSkills\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldChangeHandler(name, e.value));\n  },\n  selectFieldChangeHandler: (name, e) => {\n    dispatch(selectFieldChangeHandler(name, e));\n  },\n  submitSkillFormHandler: item => {\n    debugger; // let newSkill = {\n    //     id: item.id,\n    //     title: item.title,\n    //     level: skillsLevelField[0].value,\n    //     importance: skillsImportanceField[0].value,\n    // }\n    // let isNewSkill = true\n    // isNewSkill = skillsData.some(item => skillsField[0] === item.title[0])\n    // if(skillsData.length > 0 && isNewSkill) {\n    //     return\n    // }\n    // dispatch(submitSkillFormHandler(newSkill));\n  },\n  submitLanguageFormHandler: (languageField, languageLevelField, languageImportanceField, languagesData) => {\n    let newLanguage = {\n      id: languageField[0].id,\n      title: languageField[0].value,\n      level: languageLevelField[0].value,\n      importance: languageImportanceField[0].value\n    };\n    dispatch(submitLanguageFormHandler(newLanguage));\n  },\n  fetchDataIfNeeded: () => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n    instance.get(SKILLS_URL).then(res => {\n      dispatch(saveUpdatedSkillTitle(res.data.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  },\n  recommendedSkillActiveHandler: value => {\n    let data = {\n      value: value.title,\n      placeholder: value.title,\n      id: value.id\n    };\n    let level = {\n      value: value.level,\n      label: value.level\n    };\n    let importance = {\n      value: value.importance,\n      label: value.importance\n    };\n    dispatch(selectFieldChangeHandler('skillsField', data.value));\n    dispatch(selectFieldChangeHandler('skillsLevelField', level));\n    dispatch(selectFieldChangeHandler('skillsImportanceField', importance)); // dispatch(recommendedSkillActiveHandler(value));\n  },\n  removeSkillHandler: value => {\n    dispatch(removeSkillHandler(value));\n  },\n  removeLanguageHandler: value => {\n    dispatch(removeLanguageHandler(value));\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  submitSkillFormHandler: () => {\n    dispatchProps.submitSkillFormHandler(stateProps.fields.skillsField.value, stateProps.fields.skillsLevelField.value, stateProps.fields.skillsImportanceField.value, stateProps.skillsData);\n  },\n  submitLanguageFormHandler: () => {\n    dispatchProps.submitLanguageFormHandler(stateProps.fields.languageField.value, stateProps.fields.languageLevelField.value, stateProps.fields.languageImportanceField.value, stateProps.languagesData);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AdditionalInfoMetaFields);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/AdditionalInfo/MetaFields/container.js"],"names":["connect","AdditionalInfoMetaFields","textFieldChangeHandler","selectFieldChangeHandler","submitSkillFormHandler","saveUpdatedSkillTitle","submitLanguageFormHandler","recommendedSkillActiveHandler","removeSkillHandler","removeLanguageHandler","instance","SKILLS_URL","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","mapStateToProps","state","fields","ADDITIONALINFO","forms","additionalinfoForm","skillsData","data","languagesData","recommendedSkills","mapDispatchToProps","dispatch","props","name","e","value","item","languageField","languageLevelField","languageImportanceField","newLanguage","id","title","level","importance","fetchDataIfNeeded","get","then","res","catch","error","placeholder","label","mergeProps","stateProps","dispatchProps","ownProps","skillsField","skillsLevelField","skillsImportanceField"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport AdditionalInfoMetaFields from \"./component\";\r\nimport {\r\n    textFieldChangeHandler,\r\n    selectFieldChangeHandler,\r\n    submitSkillFormHandler,\r\n    saveUpdatedSkillTitle,\r\n    submitLanguageFormHandler,\r\n    recommendedSkillActiveHandler,\r\n    removeSkillHandler,\r\n    removeLanguageHandler\r\n} from \"../actions\";\r\n\r\nimport instance, { SKILLS_URL } from \"../../../../../api/config\";\r\n\r\nimport {\r\n    handleLoadingSpinnerClose,\r\n    handleLoadingSpinnerOpenWithOptions\r\n} from \"../../../../common/ReduxBased/LoadingSpinner/actions\"\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    fields: state.ADDITIONALINFO.forms.additionalinfoForm.fields,\r\n    skillsData: state.ADDITIONALINFO.data.skillsData,\r\n    languagesData: state.ADDITIONALINFO.data.languagesData,\r\n    recommendedSkills: state.ADDITIONALINFO.data.recommendedSkills,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n    textFieldChangeHandler: (name, e) => {\r\n        if (typeof e.value !== \"string\") {\r\n            e.value = \"\";\r\n        }\r\n        dispatch(textFieldChangeHandler(name, e.value));\r\n    },\r\n    selectFieldChangeHandler: (name, e) => {\r\n        dispatch(selectFieldChangeHandler(name, e));\r\n    },\r\n    submitSkillFormHandler: (item) => {\r\n        debugger\r\n        // let newSkill = {\r\n        //     id: item.id,\r\n        //     title: item.title,\r\n        //     level: skillsLevelField[0].value,\r\n        //     importance: skillsImportanceField[0].value,\r\n        // }\r\n        // let isNewSkill = true\r\n        // isNewSkill = skillsData.some(item => skillsField[0] === item.title[0])\r\n\r\n        // if(skillsData.length > 0 && isNewSkill) {\r\n        //     return\r\n        // }\r\n        // dispatch(submitSkillFormHandler(newSkill));\r\n    },\r\n    submitLanguageFormHandler: (languageField, languageLevelField, languageImportanceField, languagesData) => {\r\n        let newLanguage = {\r\n            id: languageField[0].id,\r\n            title: languageField[0].value,\r\n            level: languageLevelField[0].value,\r\n            importance: languageImportanceField[0].value,\r\n        }\r\n        dispatch(submitLanguageFormHandler(newLanguage));\r\n    },\r\n\r\n    fetchDataIfNeeded: () => {\r\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\r\n        instance.get(SKILLS_URL)\r\n        .then(res => {\r\n    \r\n            dispatch(saveUpdatedSkillTitle(res.data.data));\r\n            dispatch(handleLoadingSpinnerClose());\r\n        })\r\n        .catch(error => {\r\n            dispatch(handleLoadingSpinnerClose());\r\n        })\r\n    },\r\n\r\n    recommendedSkillActiveHandler: (value) => {\r\n        let data = {\r\n            value: value.title,\r\n            placeholder: value.title,\r\n            id: value.id\r\n        }\r\n        let level = {\r\n            value: value.level,\r\n            label: value.level\r\n        }\r\n        let importance = {\r\n            value: value.importance,\r\n            label: value.importance\r\n        }\r\n        dispatch(selectFieldChangeHandler('skillsField', data.value));\r\n        dispatch(selectFieldChangeHandler('skillsLevelField', level));\r\n        dispatch(selectFieldChangeHandler('skillsImportanceField', importance));\r\n        // dispatch(recommendedSkillActiveHandler(value));\r\n    },\r\n    removeSkillHandler: (value) => {\r\n        dispatch(removeSkillHandler(value));\r\n    },\r\n    removeLanguageHandler: (value) => {\r\n        dispatch(removeLanguageHandler(value));\r\n    }\r\n\r\n})\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\r\n    ...stateProps,\r\n    ...dispatchProps,\r\n    submitSkillFormHandler: () => {\r\n        dispatchProps.submitSkillFormHandler(stateProps.fields.skillsField.value, stateProps.fields.skillsLevelField.value, stateProps.fields.skillsImportanceField.value, stateProps.skillsData)\r\n    },\r\n    submitLanguageFormHandler: () => {\r\n        dispatchProps.submitLanguageFormHandler(stateProps.fields.languageField.value, stateProps.fields.languageLevelField.value, stateProps.fields.languageImportanceField.value, stateProps.languagesData)\r\n    },\r\n    ...ownProps,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    mergeProps\r\n)(AdditionalInfoMetaFields);"]},"metadata":{},"sourceType":"module"}