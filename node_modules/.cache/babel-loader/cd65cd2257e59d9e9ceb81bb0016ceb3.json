{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\src\\\\components\\\\Signup\\\\component.js\";\nimport React, { Component } from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SignupPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginId: 1\n    };\n\n    this.selectedLogin = val => {\n      this.setState({\n        loginId: val\n      });\n    };\n\n    this.SubmitHandler = () => {\n      this.props.submitSignUpHandler();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      fields,\n      textFieldChangeHandler,\n      isSignUp,\n      error\n    } = this.props;\n    return isSignUp ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/confirmation_pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.polygonbg,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.signupWrapper,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.signuptitle,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.signupsubtitle,\n              children: \"Please sign up using your email or using one of the platforms shown below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n              onSubmit: this.SubmitHandler,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(CustomTextValidator, {\n                id: fields.EmailField.name,\n                validations: true,\n                fullWidth: true,\n                type: \"text\",\n                placeholder: fields.EmailField.placeholder,\n                name: fields.EmailField.name,\n                value: fields.EmailField.value,\n                onChange: value => {\n                  textFieldChangeHandler(fields.EmailField.name, value);\n                },\n                validators: [\"required\"],\n                errorMessages: [\"Required\"],\n                className: classes.signupfields\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CustomTextValidator, {\n                id: fields.userNameField.name,\n                validations: true,\n                fullWidth: true,\n                type: \"text\",\n                placeholder: fields.userNameField.placeholder,\n                name: fields.userNameField.name,\n                value: fields.userNameField.value,\n                onChange: value => {\n                  textFieldChangeHandler(fields.userNameField.name, value);\n                },\n                validators: [\"required\"],\n                errorMessages: [\"Required\"],\n                className: classes.signupfields\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CustomTextValidator, {\n                id: fields.PasswordField.name,\n                validations: true,\n                fullWidth: true,\n                type: \"password\",\n                placeholder: fields.PasswordField.placeholder,\n                name: fields.PasswordField.name,\n                value: fields.PasswordField.value,\n                onChange: value => {\n                  textFieldChangeHandler(fields.PasswordField.name, value);\n                },\n                validators: [\"required\"],\n                errorMessages: [\"Required\"],\n                className: classes.signupfields\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CustomTextValidator, {\n                id: fields.ConfirmPasswordField.name,\n                validations: true,\n                fullWidth: true,\n                type: \"password\",\n                placeholder: fields.ConfirmPasswordField.placeholder,\n                name: fields.ConfirmPasswordField.name,\n                value: fields.ConfirmPasswordField.value,\n                onChange: value => {\n                  textFieldChangeHandler(fields.ConfirmPasswordField.name, value);\n                },\n                validators: [\"required\"],\n                errorMessages: [\"Required\"],\n                className: classes.signupfields\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this), error ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.error,\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                className: classes.signupSubmitBtn,\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.signUpOptionsRight,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"/login\",\n                      children: \"sign in\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 62\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            className: \"dNoneRightSignup\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.signupRightWrapper,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"signuprightwithbg\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wrapperborder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: classes.textAboveImage,\n                  children: \"Join Hands With Us\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default withStyles(styles)(SignupPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Signup/component.js"],"names":["React","Component","styles","withStyles","Button","Grid","ValidatorForm","CustomTextValidator","Redirect","SignupPage","state","loginId","selectedLogin","val","setState","SubmitHandler","props","submitSignUpHandler","render","classes","fields","textFieldChangeHandler","isSignUp","error","polygonbg","signupWrapper","signuptitle","signupsubtitle","EmailField","name","placeholder","value","signupfields","userNameField","PasswordField","ConfirmPasswordField","signupSubmitBtn","signUpOptionsRight","signupRightWrapper","textAboveImage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { styles } from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport CustomTextValidator from \"./../common/ReduxBased/CustomTextValidator/component\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignupPage extends Component {\n\n    state = {\n        loginId: 1,\n    }\n\n    selectedLogin = (val) => {\n        this.setState({\n            loginId: val\n        })\n    }\n    SubmitHandler = () => {\n        this.props.submitSignUpHandler();\n    }\n\n\n    render() {\n\n        const {\n            classes,\n            fields,\n            textFieldChangeHandler,\n            isSignUp,\n            error\n        } = this.props;\n        return (\n            isSignUp ? \n            <Redirect to=\"/confirmation_pending\"/>\n            : <>\n                <div className={classes.polygonbg}>\n                <Grid container className={classes.signupWrapper}>\n                    {/* signup header starts here */}\n                    {/* signup header ends here */}\n\n                    <Grid item sm={4}>\n                        <h1 className={classes.signuptitle} >Sign Up</h1>\n\n                        {/* <div className={classes.selectLoginOpt}>\n                            <Button  className={this.state.loginId === 1 ? classes.professionalLogin : classes.corporateLogin} onClick={(e) => this.selectedLogin(1)}>\n                                Candidate\n                            </Button>\n                            \n                            <Button className={this.state.loginId === 2 ? classes.professionalLogin : classes.corporateLogin} onClick={(e) => this.selectedLogin(2)}>\n                                Corporate\n                            </Button>\n                        </div> */}\n                        {/* <h1  >Sign Up </h1> */}\n                        <p className={classes.signupsubtitle} >Please sign up using your email or using one of the platforms shown below</p>\n                        <ValidatorForm\n                        onSubmit={this.SubmitHandler}\n                        autoComplete=\"off\"\n                        >\n\n                            <CustomTextValidator\n                            id={fields.EmailField.name}\n                            validations={true}\n                            fullWidth={true}\n                            type=\"text\"\n                            placeholder={fields.EmailField.placeholder}\n                            name={fields.EmailField.name}\n                            value={fields.EmailField.value}\n                            onChange={value => {\n                                textFieldChangeHandler(\n                                    fields.EmailField.name,\n                                    value\n                                );\n                            }}\n                            validators={[\"required\"]}\n                            errorMessages={[\"Required\"]}\n                            className={classes.signupfields}\n                            />\n\n                            <CustomTextValidator\n                            id={fields.userNameField.name}\n                            validations={true}\n                            fullWidth={true}\n                            type=\"text\"\n                            placeholder={fields.userNameField.placeholder}\n                            name={fields.userNameField.name}\n                            value={fields.userNameField.value}\n                            onChange={value => {\n                                textFieldChangeHandler(\n                                    fields.userNameField.name,\n                                    value\n                                );\n                            }}\n                            validators={[\"required\"]}\n                            errorMessages={[\"Required\"]}\n                            className={classes.signupfields}\n                            />\n\n                            <CustomTextValidator\n                                id={fields.PasswordField.name}\n                                validations={true}\n                                fullWidth={true}\n                                type=\"password\"\n                                placeholder={fields.PasswordField.placeholder}\n                                name={fields.PasswordField.name}\n                                value={fields.PasswordField.value}\n                                onChange={value => {\n                                    textFieldChangeHandler(\n                                        fields.PasswordField.name,\n                                        value\n                                    );\n                                }}\n                                validators={[\"required\"]}\n                                errorMessages={[\"Required\"]}\n                                className={classes.signupfields}\n                            />\n\n                            <CustomTextValidator\n                            id={fields.ConfirmPasswordField.name}\n                            validations={true}\n                            fullWidth={true}\n                            type=\"password\"\n                            placeholder={fields.ConfirmPasswordField.placeholder}\n                            name={fields.ConfirmPasswordField.name}\n                            value={fields.ConfirmPasswordField.value}\n                            onChange={value => {\n                                textFieldChangeHandler(\n                                    fields.ConfirmPasswordField.name,\n                                    value\n                                );\n                            }}\n                            validators={[\"required\"]}\n                            errorMessages={[\"Required\"]}\n                            className={classes.signupfields}\n                            />\n\n                            {\n                                error ? <span className={classes.error}>{error}</span> : null\n                            }\n\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.signupSubmitBtn} >\n                                Sign Up\n                            </Button>\n                            <div >\n                                <div className={classes.signUpOptionsRight}>\n                                <p >already have an account? <a href=\"/login\">sign in</a> </p>\n                                </div> \n                               \n\n                            \n                        </div>\n\n                        </ValidatorForm>\n                    </Grid>\n                    <Grid item sm={2}>\n                    </Grid>\n                    <Grid item sm={6} className=\"dNoneRightSignup\">\n                        <div className={classes.signupRightWrapper}>\n                            <div className=\"signuprightwithbg\">\n                                <div className=\"wrapperborder\"></div>\n                                <h1 className={classes.textAboveImage}>Join Hands With Us</h1>\n                                {/* <img src={SignUpRightImg} /> */}\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                            </div>\n                            \n                        </div>\n                    </Grid>\n                   \n                </Grid>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(SignupPage);"]},"metadata":{},"sourceType":"module"}