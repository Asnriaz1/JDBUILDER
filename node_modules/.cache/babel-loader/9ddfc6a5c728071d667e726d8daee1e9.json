{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ahsan Riaz\\\\Desktop\\\\frontend-master (new)\\\\frontend-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{styles}from\"./styles\";import{withStyles}from\"@material-ui/core/styles\";import{Grid,Tooltip,Zoom}from\"@material-ui/core\";import CheckCircleIcon from\"@material-ui/icons/CheckCircle\";import MUIEditor,{MUIEditorState,toolbarControlTypes}from'react-mui-draft-wysiwyg';import{ContentState,convertToRaw,convertFromRaw}from'draft-js';import{convertToHTML,convertFromHTML}from'draft-convert';var editorConfig={};var rawContent={blocks:[],entityMap:{}};var JobSummaryMetaFields=/*#__PURE__*/function(_Component){_inherits(JobSummaryMetaFields,_Component);function JobSummaryMetaFields(props){var _this;_classCallCheck(this,JobSummaryMetaFields);_this=_possibleConstructorReturn(this,_getPrototypeOf(JobSummaryMetaFields).call(this,props));_this.onChange=function(newState){_this.setState({editorState:newState});};_this.componentDidMount=function(){window.scrollTo(0,null);// this.props.fetchDataIfNeeded();\nvar convertedData=convertFromHTML(_this.props.rawContentSummaryAsHTML);var convertedRawData=convertToRaw(convertedData);var rawContents={blocks:_toConsumableArray(convertedRawData.blocks),entityMap:{}};_this.setState({editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(rawContents))});var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedSummaryAsHTML(currentContentAsHTML);_this.props.saveUpdatedSummaryEditor(rawContents);};_this.appendSummaryToEditor=function(value,index){_this.props.summaryDataActiveHandler(index);var oldData=convertToRaw(_this.state.editorState.getCurrentContent());var newItem={data:{},depth:0,entityRanges:[],inlineStyleRanges:[],key:oldData.blocks.length+\"roles\",text:value,type:'paragraph'};oldData=[].concat(_toConsumableArray(oldData.blocks),[newItem]);var rawContents={blocks:_toConsumableArray(oldData),entityMap:{}};_this.setState({editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(rawContents))});var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedSummaryAsHTML(currentContentAsHTML);_this.props.saveUpdatedSummaryEditor(rawContents);};_this.componentWillUnmount=function(){var currentContentAsHTML=convertToHTML(_this.state.editorState.getCurrentContent());_this.props.saveUpdatedSummaryAsHTML(currentContentAsHTML);};_this.state={editorState:MUIEditorState.createWithContent(editorConfig,convertFromRaw(_this.props.rawContentSummary))};return _this;}_createClass(JobSummaryMetaFields,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,dataList=_this$props.dataList;var config={toolbar:{controls:[toolbarControlTypes.bold,toolbarControlTypes.italic,toolbarControlTypes.underline,toolbarControlTypes.unorderedList,toolbarControlTypes.orderedList]},editor:{className:'texteditor'}};return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classes.metafieldwrapper},React.createElement(\"div\",{className:classes.rolesandreswrapper},React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,md:8},React.createElement(\"span\",{className:classes.metatitle},\"Summary\"),React.createElement(\"div\",{className:classes.texteditorwrapper},React.createElement(MUIEditor,{editorState:this.state.editorState,onChange:this.onChange,config:config}))),React.createElement(Grid,{item:true,xs:12,md:4},React.createElement(\"div\",{className:classes.suggesteditems},dataList.map(function(item,index){return React.createElement(Tooltip,{key:index,title:item.desc,arrow:true,placement:\"left\",TransitionComponent:Zoom,TransitionProps:{timeout:600}},React.createElement(\"div\",{className:\"item\",onClick:function onClick(){return _this2.appendSummaryToEditor(item.desc,index);}},React.createElement(CheckCircleIcon,{className:item.isActive?classes.addeditembg:\"\"}),React.createElement(\"span\",{className:\"description\"},item.desc)));})))))));}}]);return JobSummaryMetaFields;}(Component);export default withStyles(styles)(JobSummaryMetaFields);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Summary/MetaFields/component.js"],"names":["React","Component","styles","withStyles","Grid","Tooltip","Zoom","CheckCircleIcon","MUIEditor","MUIEditorState","toolbarControlTypes","ContentState","convertToRaw","convertFromRaw","convertToHTML","convertFromHTML","editorConfig","rawContent","blocks","entityMap","JobSummaryMetaFields","props","onChange","newState","setState","editorState","componentDidMount","window","scrollTo","convertedData","rawContentSummaryAsHTML","convertedRawData","rawContents","createWithContent","currentContentAsHTML","state","getCurrentContent","saveUpdatedSummaryAsHTML","saveUpdatedSummaryEditor","appendSummaryToEditor","value","index","summaryDataActiveHandler","oldData","newItem","data","depth","entityRanges","inlineStyleRanges","key","length","text","type","componentWillUnmount","rawContentSummary","classes","dataList","config","toolbar","controls","bold","italic","underline","unorderedList","orderedList","editor","className","metafieldwrapper","rolesandreswrapper","metatitle","texteditorwrapper","suggesteditems","map","item","desc","timeout","isActive","addeditembg"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { styles } from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport MUIEditor, { MUIEditorState,toolbarControlTypes  } from 'react-mui-draft-wysiwyg'\r\nimport { ContentState, convertToRaw, convertFromRaw } from 'draft-js'\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\n\r\nconst editorConfig = {}\r\n  const rawContent = {\r\n    blocks: [],\r\n    entityMap: {},\r\n  }\r\n\r\nclass JobSummaryMetaFields extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editorState: MUIEditorState.createWithContent(\r\n                editorConfig,\r\n                convertFromRaw(this.props.rawContentSummary),\r\n              )\r\n        }\r\n    }\r\n   \r\n    onChange = (newState) => {\r\n        this.setState({\r\n            editorState: newState\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.scrollTo(0, null);\r\n        // this.props.fetchDataIfNeeded();\r\n\r\n        let convertedData = convertFromHTML(this.props.rawContentSummaryAsHTML);\r\n        let convertedRawData = convertToRaw(convertedData);\r\n\r\n        const rawContents = {\r\n            blocks: [...convertedRawData.blocks],\r\n            entityMap: {},\r\n        }\r\n        this.setState({\r\n            editorState: MUIEditorState.createWithContent(\r\n                editorConfig,\r\n                convertFromRaw(rawContents),\r\n              )\r\n        })\r\n\r\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\r\n        this.props.saveUpdatedSummaryAsHTML(currentContentAsHTML);\r\n\r\n        this.props.saveUpdatedSummaryEditor(rawContents);\r\n    }\r\n\r\n    appendSummaryToEditor = (value, index) => {\r\n        this.props.summaryDataActiveHandler(index);\r\n\r\n        let oldData = convertToRaw(this.state.editorState.getCurrentContent());\r\n\r\n        let newItem = {\r\n            data: {},\r\n            depth: 0,\r\n            entityRanges: [],\r\n            inlineStyleRanges: [],\r\n            key: oldData.blocks.length+\"roles\",\r\n            text: value,\r\n            type: 'paragraph',\r\n          };\r\n        oldData = [...oldData.blocks, newItem]\r\n        const rawContents = {\r\n            blocks: [...oldData],\r\n            entityMap: {},\r\n        }\r\n        this.setState({\r\n            editorState: MUIEditorState.createWithContent(\r\n                editorConfig,\r\n                convertFromRaw(rawContents),\r\n              )\r\n        })\r\n\r\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\r\n        this.props.saveUpdatedSummaryAsHTML(currentContentAsHTML);\r\n\r\n        this.props.saveUpdatedSummaryEditor(rawContents);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let currentContentAsHTML = convertToHTML(this.state.editorState.getCurrentContent());\r\n        this.props.saveUpdatedSummaryAsHTML(currentContentAsHTML);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            dataList,\r\n        } = this.props;\r\n        const config = {\r\n            toolbar: {\r\n               controls: [\r\n                   toolbarControlTypes.bold,\r\n                   toolbarControlTypes.italic,\r\n                   toolbarControlTypes.underline,\r\n                   toolbarControlTypes.unorderedList,\r\n                   toolbarControlTypes.orderedList,\r\n                 ],\r\n               },\r\n               editor: {\r\n                className: 'texteditor',\r\n              },\r\n        }; \r\n        return (\r\n            <>\r\n                <div className={classes.metafieldwrapper}>\r\n                    <div className={classes.rolesandreswrapper}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={8}>\r\n                            <span className={classes.metatitle}>Summary</span>\r\n                            <div className={classes.texteditorwrapper}>\r\n                                <MUIEditor editorState={this.state.editorState} \r\n                                    onChange={this.onChange}\r\n                                    config={config}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4}>\r\n                            <div className={classes.suggesteditems}>\r\n                                {\r\n                                    dataList.map((item, index) => (\r\n                                        <Tooltip key={index} title={item.desc} arrow placement=\"left\" TransitionComponent={Zoom} TransitionProps={{ timeout: 600 }}>\r\n                                        <div className=\"item\" onClick={() => this.appendSummaryToEditor(item.desc, index)}>\r\n                                            <CheckCircleIcon className={item.isActive ? classes.addeditembg : \"\"}/>\r\n                                            <span className=\"description\">{item.desc}</span>\r\n                                        </div>\r\n                                        </Tooltip>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(JobSummaryMetaFields);"]},"metadata":{},"sourceType":"module"}