{"ast":null,"code":"import { connect } from \"react-redux\";\nimport SignupPage from \"./component\";\nimport { textFieldChangeHandler, signUpCorrectlyHandler, setErrorHandler } from \"./actions\";\nimport { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../common/ReduxBased/LoadingSpinner/actions\";\nimport instance, { BASE_URL_SQL } from \"../../api/config\";\n\nconst mapStateToProps = state => ({\n  fields: state.SIGNUP.forms.signupForm.fields,\n  isSignUp: state.SIGNUP.UISettings.isSignUp,\n  error: state.SIGNUP.UISettings.error\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  textFieldChangeHandler: (name, e) => {\n    if (typeof e.value !== \"string\") {\n      e.value = \"\";\n    }\n\n    dispatch(textFieldChangeHandler(name, e));\n  },\n  submitSignUpHandler: (email, userNameField, password, confirmPassword) => {\n    let data = {\n      Email: email,\n      Password: password,\n      R_Password: confirmPassword,\n      Username: userNameField\n    };\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n    instance.post(BASE_URL_SQL + 'Reg', data).then(res => {\n      if (res.data.statusCode === 404) {\n        dispatch(setErrorHandler(res.data.error));\n        dispatch(signUpCorrectlyHandler(false));\n      } else {\n        dispatch(setErrorHandler(\"\"));\n        dispatch(signUpCorrectlyHandler(true));\n      }\n\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(signUpCorrectlyHandler(false));\n      dispatch(handleLoadingSpinnerClose());\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  submitSignUpHandler: () => {\n    dispatchProps.submitSignUpHandler(stateProps.fields.EmailField.value, stateProps.fields.userNameField.value, stateProps.fields.PasswordField.value, stateProps.fields.ConfirmPasswordField.value);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(SignupPage);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/Signup/container.js"],"names":["connect","SignupPage","textFieldChangeHandler","signUpCorrectlyHandler","setErrorHandler","handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","instance","BASE_URL_SQL","mapStateToProps","state","fields","SIGNUP","forms","signupForm","isSignUp","UISettings","error","mapDispatchToProps","dispatch","props","name","e","value","submitSignUpHandler","email","userNameField","password","confirmPassword","data","Email","Password","R_Password","Username","post","then","res","statusCode","catch","mergeProps","stateProps","dispatchProps","ownProps","EmailField","PasswordField","ConfirmPasswordField"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport SignupPage from \"./component\";\nimport {\n    textFieldChangeHandler,\n    signUpCorrectlyHandler,\n    setErrorHandler\n} from \"./actions\";\nimport {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../common/ReduxBased/LoadingSpinner/actions\";\n\nimport instance, { BASE_URL_SQL } from \"../../api/config\";\n\nconst mapStateToProps = state => ({\n    fields: state.SIGNUP.forms.signupForm.fields,\n    isSignUp: state.SIGNUP.UISettings.isSignUp,\n    error: state.SIGNUP.UISettings.error\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    textFieldChangeHandler: (name, e) => {\n        if (typeof e.value !== \"string\") {\n            e.value = \"\";\n        }\n        dispatch(textFieldChangeHandler(name, e));\n    },\n    submitSignUpHandler: (email, userNameField, password, confirmPassword) => {\n        let data = {\n            Email: email,\n            Password: password,\n            R_Password: confirmPassword,\n            Username: userNameField\n        }\n\n        \n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading...\", \"large\"));\n        instance.post(BASE_URL_SQL+'Reg', data)\n        .then(res => {\n            if(res.data.statusCode === 404) {\n                dispatch(setErrorHandler(res.data.error));\n                dispatch(signUpCorrectlyHandler(false))\n            }else {\n                dispatch(setErrorHandler(\"\"));\n                dispatch(signUpCorrectlyHandler(true))\n            }\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(signUpCorrectlyHandler(false))\n            dispatch(handleLoadingSpinnerClose());\n        })\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    submitSignUpHandler: () => {\n        dispatchProps.submitSignUpHandler(stateProps.fields.EmailField.value, stateProps.fields.userNameField.value, stateProps.fields.PasswordField.value, stateProps.fields.ConfirmPasswordField.value);\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(SignupPage);"]},"metadata":{},"sourceType":"module"}