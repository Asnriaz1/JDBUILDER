{"ast":null,"code":"import { handleLoadingSpinnerClose, handleLoadingSpinnerOpenWithOptions } from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { connect } from \"react-redux\";\nimport JobSummary from \"./component\";\nimport { headerPathActiveHandler, pathChangeHandler } from \"../actions\";\nimport { submitTemplateHandler, fetchDataSummary, loginandSubmitTemplateHandler, showLoginPopupHandler } from \"./actions\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n  templateId: state.JDLANDING.data.templateId,\n  fields: state.LOGIN.forms.loginForm.fields,\n  login: state.JOBSUMMARY.UISettings.login,\n  selectedSkills: state.ADDITIONALINFO.data.skillsData,\n  selectedLanguages: state.ADDITIONALINFO.data.languagesData,\n  jobOpeningFields: state.JOBOPENING.forms.jobOpeningForm.fields,\n  rawContentSummaryAsHTML: state.JOBSUMMARY.data.rawContentSummaryAsHTML,\n  templateSpecId: state.JDLANDING.data.templateSpecId,\n  isLogin: state.LOGIN.UISetting.isLogin,\n  jobTitle: state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value,\n  industryField: state.JOBOPENING.forms.jobOpeningForm.fields.industryField.value,\n  functionField: state.JOBOPENING.forms.jobOpeningForm.fields.functionField.value,\n  employmenTypeField: state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n  minYearField: state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n  maxYearField: state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value,\n  positionField: state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n  AddressField: state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n  QualificationField: state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n  remoteWorkingField: state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n  showSalaryField: state.JOBOPENING.forms.jobOpeningForm.fields.showSalaryField.value,\n  salaryTypeField: state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value,\n  hourlyMaxRateField: state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField.value,\n  monthlySalaryRangField: state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField.value,\n  monthlyCurrencyField: state.JOBOPENING.forms.jobOpeningForm.fields.monthlyCurrencyField.value,\n  yearlySalaryRangField: state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField.value,\n  yearlyCurrencyField: state.JOBOPENING.forms.jobOpeningForm.fields.yearlyCurrencyField.value,\n  rolesResHTMLData: state.JOBOPENING.data.rolesResHTMLData,\n  rolesData: state.JOBOPENING.data.rolesData,\n  resData: state.JOBOPENING.data.resData,\n  jobCodeField: state.JOBOPENING.forms.jobOpeningForm.fields.jobCodeField.value,\n  QualificationField: state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n  AddressField: state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n  monthlyCurrencyField: state.JOBOPENING.forms.jobOpeningForm.fields.monthlyCurrencyField.value,\n  yearlyCurrencyField: state.JOBOPENING.forms.jobOpeningForm.fields.yearlyCurrencyField.value\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  submitbutton: (val, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n    debugger;\n    dispatch(headerPathActiveHandler(val));\n    dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n  },\n  headerPathActiveHandler: val => {\n    dispatch(headerPathActiveHandler(val));\n    dispatch(pathChangeHandler(\"/create/advertise\"));\n  },\n  submitTemplateHandler: (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n    dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n  },\n  loginandSubmitTemplateHandler: (EmailField, PasswordField, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n    let data = {\n      \"Email\": EmailField,\n      \"Password\": PasswordField,\n      \"FromJD\": true\n    };\n    dispatch(loginandSubmitTemplateHandler(data, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n  },\n  fetchDataSummary: templateId => {\n    dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Summary...\", \"large\"));\n    let savedTempId = ls.get('suggestedTempId');\n    let paramVal = templateId ? templateId : savedTempId;\n    instance.get(BASE_URL + 'Templates?templateId=' + paramVal + '&sectionId=TS3').then(res => {\n      dispatch(fetchDataSummary(res.data));\n      dispatch(handleLoadingSpinnerClose());\n    }).catch(error => {\n      dispatch(handleLoadingSpinnerClose());\n    });\n  },\n  showLoginPopupHandler: value => {\n    dispatch(showLoginPopupHandler(value));\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  fetchDataSummary: () => {\n    dispatchProps.fetchDataSummary(stateProps.templateId);\n  },\n  loginandSubmitTemplateHandler: () => {\n    var experience = {\n      \"min_exp\": stateProps.minYearField,\n      \"max_exp\": stateProps.maxYearField\n    };\n    var rolesDataFilter = stateProps.rolesData.filter(item => {\n      return item.isActive == true;\n    }).map(item => item.id);\n    var resDataFilter = stateProps.resData.filter(item => {\n      return item.isActive == true;\n    }).map(item => item.id);\n    let salary_range = {\n      min_sal: null,\n      max_sal: null\n    };\n\n    if (stateProps.salaryTypeField === \"yearly\") {\n      let min_max = stateProps.yearlySalaryRangField[0].value.split('-');\n      salary_range.min_sal = min_max[0];\n      salary_range.max_sal = min_max[1];\n    } else if (stateProps.salaryTypeField === \"hourly\") {\n      let min_max = stateProps.hourlyMaxRateField[0].value.split('-');\n      salary_range.min_sal = min_max[0];\n      salary_range.max_sal = min_max[1];\n    } else if (stateProps.salaryTypeField === \"monthly\") {\n      let min_max = stateProps.monthlySalaryRangField[0].value.split('-');\n      salary_range.min_sal = parseInt(min_max[0]);\n      salary_range.max_sal = parseInt(min_max[1]);\n    }\n\n    let savedTempId = ls.get('suggestedTempId');\n    let paramVal = stateProps.templateId ? stateProps.templateId : savedTempId;\n    let data = {\n      job_code: stateProps.jobCodeField,\n      template_id: paramVal,\n      title: stateProps.jobTitle,\n      _selected_rr: {\n        htmlstring: stateProps.rolesResHTMLData,\n        rol: rolesDataFilter,\n        res: resDataFilter\n      },\n      salary_detail: {\n        sal_range: salary_range,\n        type: stateProps.salaryTypeField,\n        currency: 'Dollar',\n        visible: true\n      },\n      exp: experience,\n      _selected_industry: stateProps.industryField[0].id,\n      _selected_function: stateProps.functionField[0].id,\n      employment_type: stateProps.employmenTypeField[0].value,\n      positions: parseInt(stateProps.positionField),\n      remote_work: stateProps.remoteWorkingField,\n      qualification: stateProps.QualificationField,\n      address: stateProps.AddressField,\n      _selected_skills: [],\n      _selected_languages: []\n    };\n    dispatchProps.loginandSubmitTemplateHandler(stateProps.fields.EmailField.value, stateProps.fields.PasswordField.value, stateProps.templateId, stateProps.selectedSkills, stateProps.selectedLanguages, stateProps.jobOpeningFields.industryField.value, stateProps.jobOpeningFields.functionField.value, stateProps.rolesResHTMLData, stateProps.rawContentSummaryAsHTML, data);\n  },\n  submitTemplateHandler: () => {\n    dispatchProps.submitTemplateHandler(stateProps.templateId, stateProps.selectedSkills, stateProps.selectedLanguages, stateProps.jobOpeningFields.industryField.value, stateProps.jobOpeningFields.functionField.value, stateProps.rolesResHTMLData, stateProps.rawContentSummaryAsHTML);\n  },\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(JobSummary);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Summary/container.js"],"names":["handleLoadingSpinnerClose","handleLoadingSpinnerOpenWithOptions","connect","JobSummary","headerPathActiveHandler","pathChangeHandler","submitTemplateHandler","fetchDataSummary","loginandSubmitTemplateHandler","showLoginPopupHandler","instance","BASE_URL","ls","mapStateToProps","state","templateId","JDLANDING","data","fields","LOGIN","forms","loginForm","login","JOBSUMMARY","UISettings","selectedSkills","ADDITIONALINFO","skillsData","selectedLanguages","languagesData","jobOpeningFields","JOBOPENING","jobOpeningForm","rawContentSummaryAsHTML","templateSpecId","isLogin","UISetting","jobTitle","jobTitleField","value","industryField","functionField","employmenTypeField","minYearField","maxYearField","positionField","AddressField","QualificationField","remoteWorkingField","showSalaryField","salaryTypeField","hourlyMaxRateField","monthlySalaryRangField","monthlyCurrencyField","yearlySalaryRangField","yearlyCurrencyField","rolesResHTMLData","rolesData","resData","jobCodeField","mapDispatchToProps","dispatch","props","submitbutton","val","JOindustryField","JOfunctionField","EmailField","PasswordField","savedTempId","get","paramVal","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps","experience","rolesDataFilter","filter","item","isActive","map","id","resDataFilter","salary_range","min_sal","max_sal","min_max","split","parseInt","job_code","template_id","title","_selected_rr","htmlstring","rol","salary_detail","sal_range","type","currency","visible","exp","_selected_industry","_selected_function","employment_type","positions","remote_work","qualification","address","_selected_skills","_selected_languages"],"mappings":"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","sourcesContent":["import {\n    handleLoadingSpinnerClose,\n    handleLoadingSpinnerOpenWithOptions\n} from \"../../../common/ReduxBased/LoadingSpinner/actions\";\nimport { connect } from \"react-redux\";\nimport JobSummary from \"./component\";\nimport {\n    headerPathActiveHandler,\n    pathChangeHandler\n} from \"../actions\";\nimport {\n    submitTemplateHandler,\n    fetchDataSummary,\n    loginandSubmitTemplateHandler,\n    showLoginPopupHandler\n} from \"./actions\";\nimport instance, { BASE_URL } from \"../../../../api/config\";\nimport ls from 'local-storage'\n\nconst mapStateToProps = state => ({\n    templateId: state.JDLANDING.data.templateId,\n    fields: state.LOGIN.forms.loginForm.fields,\n    login: state.JOBSUMMARY.UISettings.login,\n    selectedSkills: state.ADDITIONALINFO.data.skillsData,\n    selectedLanguages: state.ADDITIONALINFO.data.languagesData,\n    jobOpeningFields: state.JOBOPENING.forms.jobOpeningForm.fields,\n    rawContentSummaryAsHTML: state.JOBSUMMARY.data.rawContentSummaryAsHTML,\n    templateSpecId: state.JDLANDING.data.templateSpecId,\n    isLogin: state.LOGIN.UISetting.isLogin,\n    jobTitle:state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value,\n    industryField:state.JOBOPENING.forms.jobOpeningForm.fields.industryField.value,\n    functionField:state.JOBOPENING.forms.jobOpeningForm.fields.functionField.value,\n    employmenTypeField:state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n    minYearField:state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n    maxYearField:state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value,\n    positionField:state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n    AddressField:state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n    QualificationField:state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n    remoteWorkingField:state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n    showSalaryField:state.JOBOPENING.forms.jobOpeningForm.fields.showSalaryField.value,\n    salaryTypeField:state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value,\n    hourlyMaxRateField:state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField.value,\n    monthlySalaryRangField:state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField.value,\n    monthlyCurrencyField:state.JOBOPENING.forms.jobOpeningForm.fields.monthlyCurrencyField.value,\n    yearlySalaryRangField:state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField.value,\n    yearlyCurrencyField:state.JOBOPENING.forms.jobOpeningForm.fields.yearlyCurrencyField.value,\n    rolesResHTMLData:state.JOBOPENING.data.rolesResHTMLData,\n    rolesData:state.JOBOPENING.data.rolesData,\n    resData:state.JOBOPENING.data.resData,\n    jobCodeField:state.JOBOPENING.forms.jobOpeningForm.fields.jobCodeField.value,\n    QualificationField:state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n    AddressField:state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n    monthlyCurrencyField:state.JOBOPENING.forms.jobOpeningForm.fields.monthlyCurrencyField.value,\n    yearlyCurrencyField:state.JOBOPENING.forms.jobOpeningForm.fields.yearlyCurrencyField.value,\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n\n    submitbutton :(val,templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) =>{\n       debugger\n        dispatch(headerPathActiveHandler(val));\n        dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n\n    },\n    headerPathActiveHandler: (val) => {\n        dispatch(headerPathActiveHandler(val));\n        dispatch(pathChangeHandler(\"/create/advertise\"))\n    },\n    submitTemplateHandler: (templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n        dispatch(submitTemplateHandler(templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n    },\n    loginandSubmitTemplateHandler: (EmailField, PasswordField, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML) => {\n        let data = {\n            \"Email\": EmailField,\n            \"Password\": PasswordField,\n            \"FromJD\": true\n    }\n        dispatch(loginandSubmitTemplateHandler(data, templateId, selectedSkills, selectedLanguages, JOindustryField, JOfunctionField, rolesResHTMLData, rawContentSummaryAsHTML));\n    },\n    fetchDataSummary: (templateId) => {\n        dispatch(handleLoadingSpinnerOpenWithOptions(true, \"Loading Summary...\", \"large\"));\n        let savedTempId = ls.get('suggestedTempId')\n        let paramVal = templateId ? templateId : savedTempId\n\n        instance.get(BASE_URL+'Templates?templateId='+paramVal+'&sectionId=TS3')\n        .then(res => {\n            dispatch(fetchDataSummary(res.data));\n            dispatch(handleLoadingSpinnerClose());\n        })\n        .catch(error => {\n            dispatch(handleLoadingSpinnerClose());\n        })\n    },\n    showLoginPopupHandler: (value) => {\n        dispatch(showLoginPopupHandler(value));\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    fetchDataSummary: () => {\n        dispatchProps.fetchDataSummary(stateProps.templateId);\n    },\n    loginandSubmitTemplateHandler: () => {\n\n        \n        var experience = { \"min_exp\": stateProps.minYearField, \"max_exp\":  stateProps.maxYearField }\n        var rolesDataFilter =  stateProps.rolesData.filter((item) => {\n            return item.isActive == true\n        }).map(item => item.id)\n\n        var resDataFilter =  stateProps.resData.filter((item) => {\n            return item.isActive == true\n        }).map(item => item.id)\n        \n   \n\n\n        let salary_range = {\n            min_sal: null,\n            max_sal: null\n        };\n        if ( stateProps.salaryTypeField === \"yearly\") {\n          \n            let min_max =  stateProps.yearlySalaryRangField[0].value.split('-');\n            salary_range.min_sal = min_max[0];\n            salary_range.max_sal = min_max[1];\n\n        }\n        else if ( stateProps.salaryTypeField === \"hourly\") {\n            let min_max =  stateProps.hourlyMaxRateField[0].value.split('-');\n            salary_range.min_sal = min_max[0];\n            salary_range.max_sal = min_max[1];\n        }\n        else if ( stateProps.salaryTypeField === \"monthly\") {\n            \n            let min_max =  stateProps.monthlySalaryRangField[0].value.split('-');\n            salary_range.min_sal = parseInt(min_max[0]);\n            salary_range.max_sal = parseInt(min_max[1]);\n           \n        }\n        let savedTempId = ls.get('suggestedTempId')\n        let paramVal =  stateProps.templateId ?  stateProps.templateId : savedTempId\n\n    \n        let data = {\n\n            job_code:  stateProps.jobCodeField,\n            template_id: paramVal,\n            title:  stateProps.jobTitle,\n            _selected_rr: {\n                htmlstring:  stateProps.rolesResHTMLData,\n                rol: rolesDataFilter,\n                res: resDataFilter\n            },\n            salary_detail: {\n                sal_range: salary_range,\n                type:  stateProps.salaryTypeField,\n                currency: 'Dollar',\n                visible: true\n            },\n            exp: experience,\n            _selected_industry:  stateProps.industryField[0].id,\n            _selected_function:  stateProps.functionField[0].id,\n            employment_type:  stateProps.employmenTypeField[0].value,\n            positions: parseInt( stateProps.positionField),\n            remote_work:  stateProps.remoteWorkingField,\n            qualification:  stateProps.QualificationField,\n            address:  stateProps.AddressField,\n            _selected_skills: [],\n           _selected_languages:[],\n\n        } \n        dispatchProps.loginandSubmitTemplateHandler(stateProps.fields.EmailField.value, stateProps.fields.PasswordField.value,\n            stateProps.templateId,\n            stateProps.selectedSkills,\n            stateProps.selectedLanguages,\n            stateProps.jobOpeningFields.industryField.value,\n            stateProps.jobOpeningFields.functionField.value,\n            stateProps.rolesResHTMLData,\n            stateProps.rawContentSummaryAsHTML,\n            data)\n    },\n    submitTemplateHandler: () => {\n        dispatchProps.submitTemplateHandler(stateProps.templateId, stateProps.selectedSkills, stateProps.selectedLanguages,\n            stateProps.jobOpeningFields.industryField.value,\n            stateProps.jobOpeningFields.functionField.value,\n            stateProps.rolesResHTMLData,\n            stateProps.rawContentSummaryAsHTML)\n    },\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(JobSummary);"]},"metadata":{},"sourceType":"module"}