{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Collaborations from \"./component\";\nimport instance, { BASE_LOGIN_URL } from \"../../../../api/config\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport ls from 'local-storage';\nimport { JD_COLLABORATOR_DATA, DIALOG_CLOSE } from \"./actions\";\n\nconst mapStateToProps = state => ({\n  AddressField: state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n  employmentType: state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n  minYearField: state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n  maxYearField: state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value,\n  jobCodeField: state.JOBOPENING.forms.jobOpeningForm.fields.jobCodeField.value,\n  positionField: state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n  QualificationField: state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n  remoteWorkingField: state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n  showSalaryField: state.JOBOPENING.forms.jobOpeningForm.fields.showSalaryField.value,\n  salaryTypeField: state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value,\n  hourlyMaxRateField: state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField.value,\n  monthlySalaryRangField: state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField.value,\n  monthlyCurrencyField: state.JOBOPENING.forms.jobOpeningForm.fields.monthlyCurrencyField.value,\n  yearlySalaryRangField: state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField.value,\n  yearlyCurrencyField: state.JOBOPENING.forms.jobOpeningForm.fields.yearlyCurrencyField.value,\n  templateId: state.JDLANDING.data.templateId,\n  jobTitle: state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value,\n  functionField: state.JOBOPENING.forms.jobOpeningForm.fields.functionField.value,\n  industryField: state.JOBOPENING.forms.jobOpeningForm.fields.industryField.value,\n  selectedSkills: state.ADDITIONALINFO.data.skillsData,\n  selectedLanguages: state.ADDITIONALINFO.data.languagesData,\n  rolesResHTMLData: state.JOBOPENING.data.rolesResHTMLData //   selectedSummary:state.SUMMARY.data.rawContentSummaryAsHTML,\n\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  fetchData: () => {\n    var url1 = new URL(window.location.href);\n    var c = url1.searchParams.get(\"VerifyToken\");\n    console.log(c);\n    var decoded = jwt_decode(c);\n    var decodedHeader = jwt_decode(c);\n    var job_code = decodedHeader.data.Job_Code;\n    console.log(job_code);\n    debugger;\n    instance.get(BASE_LOGIN_URL + 'jdbuilder/UserTemplates?jobcode=' + job_code, {\n      headers: {\n        Authorization: `Bearer ${c}`\n      }\n    }).then(res => {\n      debugger;\n      dispatch(DIALOG_CLOSE());\n      dispatch(JD_COLLABORATOR_DATA(res));\n    }).catch(error => {\n      debugger;\n    });\n  }\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({ ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(Collaborations);","map":{"version":3,"sources":["C:/Users/Ahsan Riaz/Desktop/frontend-master (new)/frontend-master/src/components/JD/JDBuilding/Collaborations/container.js"],"names":["connect","Collaborations","instance","BASE_LOGIN_URL","axios","jwt_decode","ls","JD_COLLABORATOR_DATA","DIALOG_CLOSE","mapStateToProps","state","AddressField","JOBOPENING","forms","jobOpeningForm","fields","value","employmentType","employmenTypeField","minYearField","maxYearField","jobCodeField","positionField","QualificationField","remoteWorkingField","showSalaryField","salaryTypeField","hourlyMaxRateField","monthlySalaryRangField","monthlyCurrencyField","yearlySalaryRangField","yearlyCurrencyField","templateId","JDLANDING","data","jobTitle","jobTitleField","functionField","industryField","selectedSkills","ADDITIONALINFO","skillsData","selectedLanguages","languagesData","rolesResHTMLData","mapDispatchToProps","dispatch","props","fetchData","url1","URL","window","location","href","c","searchParams","get","console","log","decoded","decodedHeader","job_code","Job_Code","headers","Authorization","then","res","catch","error","mergeProps","stateProps","dispatchProps","ownProps"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport Collaborations from \"./component\";\nimport instance, { BASE_LOGIN_URL } from \"../../../../api/config\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport ls from 'local-storage';\nimport {\n    JD_COLLABORATOR_DATA,\n    DIALOG_CLOSE,\n} from \"./actions\";\nconst mapStateToProps = state => ({\n\n    AddressField:state.JOBOPENING.forms.jobOpeningForm.fields.AddressField.value,\n    employmentType:state.JOBOPENING.forms.jobOpeningForm.fields.employmenTypeField.value,\n    minYearField:state.JOBOPENING.forms.jobOpeningForm.fields.minYearField.value,\n    maxYearField:state.JOBOPENING.forms.jobOpeningForm.fields.maxYearField.value,\n    jobCodeField:state.JOBOPENING.forms.jobOpeningForm.fields.jobCodeField.value,\n    positionField:state.JOBOPENING.forms.jobOpeningForm.fields.positionField.value,\n    QualificationField:state.JOBOPENING.forms.jobOpeningForm.fields.QualificationField.value,\n    remoteWorkingField:state.JOBOPENING.forms.jobOpeningForm.fields.remoteWorkingField.value,\n    showSalaryField:state.JOBOPENING.forms.jobOpeningForm.fields.showSalaryField.value,\n    salaryTypeField:state.JOBOPENING.forms.jobOpeningForm.fields.salaryTypeField.value,\n    hourlyMaxRateField:state.JOBOPENING.forms.jobOpeningForm.fields.hourlyMaxRateField.value,\n    monthlySalaryRangField:state.JOBOPENING.forms.jobOpeningForm.fields.monthlySalaryRangField.value,\n    monthlyCurrencyField:state.JOBOPENING.forms.jobOpeningForm.fields.monthlyCurrencyField.value,\n    yearlySalaryRangField:state.JOBOPENING.forms.jobOpeningForm.fields.yearlySalaryRangField.value,\n    yearlyCurrencyField:state.JOBOPENING.forms.jobOpeningForm.fields.yearlyCurrencyField.value,\n    templateId: state.JDLANDING.data.templateId,\n    jobTitle:state.JOBOPENING.forms.jobOpeningForm.fields.jobTitleField.value,\n    functionField:state.JOBOPENING.forms.jobOpeningForm.fields.functionField.value,\n    industryField:state.JOBOPENING.forms.jobOpeningForm.fields.industryField.value,\n    selectedSkills: state.ADDITIONALINFO.data.skillsData,\n    selectedLanguages: state.ADDITIONALINFO.data.languagesData,\n    rolesResHTMLData:state.JOBOPENING.data.rolesResHTMLData,\n //   selectedSummary:state.SUMMARY.data.rawContentSummaryAsHTML,\n \n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    \n    fetchData: () => {\n        \n        var url1 = new URL(window.location.href);\n        var c = url1.searchParams.get(\"VerifyToken\");\n        console.log(c);\n        var decoded = jwt_decode(c);\n        var decodedHeader = jwt_decode(c);      \n        var job_code= decodedHeader.data.Job_Code\n        console.log(job_code);\n        debugger\n\n        instance.get(BASE_LOGIN_URL+'jdbuilder/UserTemplates?jobcode='+job_code,\n        {\n            headers: {\n                Authorization: `Bearer ${c}`\n\n            }\n        }\n        )\n        .then(res => {\n            debugger\n            dispatch(DIALOG_CLOSE());\n            dispatch(JD_COLLABORATOR_DATA(res));\n          \n\n        })\n        .catch(error => {\n          debugger\n        })\n    },\n})\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(Collaborations);"]},"metadata":{},"sourceType":"module"}